(function(){
/** @license Copyright (c) 2020, Blockthrough All rights reserved.
 See license text at: https://blockthrough.com/license
*/(()=>{var __webpack_modules__={905:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{yC:()=>DeviceTypeAll,Xh:()=>browser,Jv:()=>platform,Uh:()=>device,tq:()=>isMobile,l7:()=>getDeviceType});const PlatformUnknown="unknown",PlatformAndroid="android",PlatformIOS="ios",PlatformWindows="windows",PlatformLinux="linux",PlatformOSX="osx",PlatformWindowsPhone="windowsphone",BrowserUnknown="unknown",BrowserChrome="chrome",BrowserFirefox="firefox",BrowserIE="ie",BrowserEdge="edge",BrowserOpera="opera",BrowserSafari="safari",BrowserUCBrowser="uc",DeviceUnknown="unknown",DeviceHighEndPhone="highendphone",DeviceTablet="tablet",DevicePersonalComputer="pc",DeviceConnectedTV="tv",DeviceGameConsole="console",DeviceTypeAll="all",DeviceTypeDesktop="desktop",DeviceTypeMobile="mobile";var browser=function(){var ua=navigator.userAgent;return/edge/i.test(ua)?BrowserEdge:/opera/i.test(ua)||/opr|opios/i.test(ua)?BrowserOpera:/chrome|chromium/i.test(ua)?BrowserChrome:/firefox|iceweasel|fxios/i.test(ua)?BrowserFirefox:/msie|trident/i.test(ua)?BrowserIE:/^((?!chrome|android).)*safari/i.test(ua)?BrowserSafari:/ucbrowser/i.test(ua)?BrowserUCBrowser:window.chrome?BrowserChrome:"undefined"!=typeof InstallTrigger?BrowserFirefox:eval("/*@cc_on!@*/false")||document.documentMode?BrowserIE:window.StyleMedia?BrowserEdge:BrowserUnknown},platform=function(){var e=navigator.userAgent;return/windows|win32/i.test(e)?PlatformWindows:/ipod|iphone|ipad/i.test(e)?PlatformIOS:/android/i.test(e)?PlatformAndroid:/macintosh|mac os x/i.test(e)?PlatformOSX:/linux/i.test(e)?PlatformLinux:/windows phone/i.test(e)?PlatformWindowsPhone:PlatformUnknown},device=function(){var e=navigator.userAgent;return/tablet|ipad/i.test(e)?DeviceTablet:/mobile/i.test(e)||/android|webos|iphone|ipod|blackberry|iemobile|windows phone|opera mini/i.test(e)||/ucbrowser/i.test(e)&&window.ucweb?DeviceHighEndPhone:DevicePersonalComputer};function isMobile(){return"function"==typeof window.bt_isMobileCustom?window.bt_isMobileCustom():/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(navigator.userAgent||navigator.vendor||window.opera)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent||navigator.vendor||window.opera).substr(0,4))}function getDeviceType(){return isMobile()?DeviceTypeMobile:DeviceTypeDesktop}},491:(e,t,n)=>{"use strict";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,{z:()=>l,Z:()=>c});var r=n(614),o=n(302),a=n(616);const s=Boolean(window.console&&window.console.info);let d=!1;!function(){try{d=a.topmostAccessibleWindow.location.href.indexOf("bt_debug=true")>=0||"true"===a.topmostAccessibleWindow.localStorage.getItem("bt_debug")}catch(e){d=!1}}();class c{constructor(){let{prefix:e="",level:t=l.DEFAULT}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i(this,"tag","Blockthrough"),i(this,"prefix",""),this.setPrefix(e),this.setLevel(t)}setPrefix(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.prefix=e}setLevel(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l.DEFAULT;w(e)?this.level=e:this.level=l.DEFAULT}log(e,t,n,i){if(!d||!s)return;if(arguments.length<3||!w(e)||"object"!=typeof t||"string"!=typeof n)throw new TypeError;if(e<this.level)return;const r=(new Date).getTime()-g,o=m(t);let a="";a+="%c["+this.tag+" - "+p[e]+"]%c",a+="%c[%s]%c ",o&&(a+="%c["+o+"]%c "),this.prefix&&(a+=this.prefix),a+=n;let c=[];c.push(a),c.push("color: #000000; background-color: "+h[e]),c.push("background-color: inherit"),c.push("color: #757575;"),c.push(function(e){if(e<1e3)return Math.round(e).toString()+"ms";return(e/1e3).toFixed(2)+"s"}(r)),c.push("background-color: inherit"),o&&(c.push("color: "+function(e){const t=m(e);if(!t)return"#000000";return f[function(e){let t=2166136261;for(let n=0;n<e.length;++n)t^=e.charCodeAt(n),t+=(t<<1)+(t<<4)+(t<<7)+(t<<8)+(t<<24);return t>>>0}(t)%f.length]}(t)),c.push("color: inherit")),c=c.concat(Array.prototype.slice.call(arguments,3)),console.info.apply(console,c)}debugf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[l.DEBUG,e,t].concat(n)),b(i,u.DEBUG)}infof(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[l.INFO,e,t].concat(n)),b(i,u.INFO)}noticef(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[l.NOTICE,e,t].concat(n)),b(i,u.NOTICE)}warningf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[l.WARNING,e,t].concat(n)),b(i,u.WARNING)}errorf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[l.ERROR,e,t].concat(n)),i||(i={sendToServer:!0,sendPercentage:1,event:"general_error_event",error:{name:t}}),b(i,u.ERROR)}criticalf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[l.CRITICAL,e,t].concat(n)),i||(i={sendToServer:!0,sendPercentage:1,event:"general_critical_event",error:{name:t}}),b(i,u.CRITICAL)}alertf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[l.ALERT,e,t].concat(n)),b(i,u.ALERT)}emergencyf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[l.EMERGENCY,e,t].concat(n)),b(i,u.EMERGENCY)}}const l={DEFAULT:0,DEBUG:1,INFO:2,NOTICE:3,WARNING:4,ERROR:5,CRITICAL:6,ALERT:7,EMERGENCY:8},u={DEBUG:0,INFO:1,NOTICE:2,WARNING:3,ERROR:4,CRITICAL:5,ALERT:6,EMERGENCY:7},p={[l.DEFAULT]:"DFT",[l.DEBUG]:"DBG",[l.INFO]:"INF",[l.NOTICE]:"NTC",[l.WARNING]:"WRN",[l.ERROR]:"ERR",[l.CRITICAL]:"CRT",[l.ALERT]:"ALR",[l.EMERGENCY]:"EMR"},h={[l.DEFAULT]:"#F5F5F5",[l.DEBUG]:"#BBDEFB",[l.INFO]:"#B3E5FC",[l.NOTICE]:"#DCEDC8",[l.WARNING]:"#FFE0B2",[l.ERROR]:"#FFCCBC",[l.CRITICAL]:"#E57373",[l.ALERT]:"#F06292",[l.EMERGENCY]:"#BA68C8"},f=["#B71C1C","#880E4F","#4A148C","#311B92","#1A237E","#0D47A1","#01579B","#006064","#004D40","#1B5E20","#33691E","#827717","#F57F17","#FF6F00","#E65100","#BF360C","#3E2723","#37474F"],g=(new Date).getTime();function m(e){return e&&e.id||null}function w(e){return"number"==typeof e&&void 0!==p[e]}function b(e,t){if(e&&e.event&&e.sendToServer&&t&&(!e.sendPercentage||r.Z.commonUtils.getTrueByProbability(e.sendPercentage))){const n=Object.assign({},e,{severity:t});o.Y.fireEvent("sendLog",n)}}},586:(e,t,n)=>{"use strict";n.r(t),n.d(t,{refreshTypeDecoder:()=>a,getSpaceElement:()=>s,isFirstViewPortElement:()=>d});var i=n(614),r=n(868);const o=new(n(491).Z)({prefix:"commonBLUtils: "});var a=function(e){switch(e){case"ALL":return r.Z.consts.refreshType.ALL;case"VISIBLE":return r.Z.consts.refreshType.VISIBLE;case"HIDDEN":return r.Z.consts.refreshType.HIDDEN;default:return r.Z.consts.refreshType.UNKNOWN}};function s(e){return e&&e.selector?i.Z.commonUtils.getElementWithSelector(e.selector.value):null}function d(e){try{if(!e)return;var t,n,i=!1;"none"===window.getComputedStyle(e).display&&(t=e.style.getPropertyValue("display"),n=e.style.getPropertyPriority("display"),e.style.setProperty("display","block","important"),i=!0);var a=e.getBoundingClientRect().top+window.scrollY;return i&&e.style.setProperty("display",t,n),a<=r.Z.consts.acceptableStandardScreenSize.height}catch(e){o.errorf(null,"isFirstViewPortElement - error: %o",e)}}},302:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var i=new function(){this.events={},this.hasEventListener=function(e){return this.events.hasOwnProperty(e)},this.addEventListener=function(e,t){this.hasEventListener(e)?this.events[e].push(t):this.events[e]=[t]},this.removeEventListener=function(e,t){if(this.hasEventListener(e)){var n=this.events[e].indexOf(t);-1!=n&&this.events[e].splice(n,1)}},this.fireEvent=function(e,t,n,i){if(this.hasEventListener(e))for(var o=new r(e,t),a=this.events[e],s=a.length,d=0;d<s;d++){try{var c=a[d].call(n,o)}catch(e){console.error("CustomEvents - error in `fireEvent`:",e)}if(null!=c)return c;if(o.shouldStop)return}}},r=function(e,t){this.name=e,this.data=t,this.shouldStop=!1}},17:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var i={selectorPosition:{APPEND_CHILD:0,INSERT_BEFORE:1},complianceStatus:{UNKNOWN:0,COMPLIANT:1,INCOMPLIANT:2,ERROR:3,PENDING:4},acceptableStandardScreenSize:{width:1366,height:768},refreshType:{UNKNOWN:0,ALL:1,VISIBLE:2,HIDDEN:3},elementVisibility:{VISIBLE:"VISIBLE",HIDDEN:"HIDDEN",NOT_FOUND:"NOT_FOUND"},htmlElements:["HTMLScriptElement","HTMLElement","HTMLVideoElement","HTMLAudioElement","HTMLHtmlElement","HTMLHeadElement","HTMLLinkElement","HTMLStyleElement","HTMLBodyElement","HTMLFormElement","HTMLSelectElement","HTMLOptionElement","HTMLInputElement","HTMLTextAreaElement","HTMLButtonElement","HTMLLabelElement","HTMLFieldSetElement","HTMLLegendElement","HTMLUListElement","HTMLOListElement","HTMLDListElement","HTMLDirectoryElement","HTMLMenuElement","HTMLLIElement","HTMLDivElement","HTMLParagraphElement","HTMLHeadingElement","HTMLQuoteElement","HTMLPreElement","HTMLBRElement","HTMLFontElement","HTMLHRElement","HTMLAnchorElement","HTMLImageElement","HTMLObjectElement","HTMLParamElement","HTMLMapElement","HTMLModElement","HTMLAreaElement","HTMLTableElement","HTMLTableCaptionElement","HTMLTableColElement","HTMLTableSectionElement","HTMLTableRowElement","HTMLTableCellElement","HTMLFrameSetElement","HTMLFrameElement","HTMLIFrameElement"],btDemand:{btDemandPrefix:"bt_",snigel:"bt_exchange",relay:"bt_server"}}},868:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var i=new function(){this.data={},this.setItem=function(e,t){this.data[e]=t},this.getItem=function(e){return this.data[e]},this.removeItem=function(e){delete this.data[e]},this.clearSharedObject=function(){this.data={}}},r=n(17),o=n(143),a="";const s={SharedObject:i,consts:r.v,upoSettings:o.I,whitelistingIFrame:undefined,cpbjs:undefined,uGoogletag:undefined,backupCreativeScript:a,backupCreativeScriptForPostMessage:"try { eval(atob('')) } catch (err) {}"}},143:(e,t,n)=>{"use strict";n.d(t,{W:()=>r,I:()=>o});const i="static.btloader.com",r="https://".concat(i,"/safeFrame.html?upapi=true");var o={acceptableURLParam:"upapi=true",prebidTimeout:2e3,staticDomain:i,whitelistingIFrameSettings:{defaultWhitelistingIFrameURL:r,publisherDomainWhitelistingIFrameCandidates:[{src:"/robots.txt",acceptHTMLType:!1},{src:"/ads.txt",acceptHTMLType:!1}]},minTimeBetweenRefreshes:3e4,amazonBidderConfiguration:{enabled:!1,keepHbPb:!1},recoveryScriptVersion:"2.9.199-2-gd98b7ec"}},228:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>prebidLoader});var _services__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(614),_shared__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(868),prebidLoader=new function(){var subscriptionLayer=new _services__WEBPACK_IMPORTED_MODULE_0__.Z.SubscriptionLayer;this.subscribeForEvent=function(e,t){subscriptionLayer.subscribeForEvent(e,t)};var initPbjs=function(){var prebidjsCode="";try{var decodedCode=atob(prebidjsCode);eval(decodedCode)}catch(e){}_shared__WEBPACK_IMPORTED_MODULE_1__.Z.cpbjs=window.upbjs};this.load=function(){_shared__WEBPACK_IMPORTED_MODULE_1__.Z.cpbjs||(initPbjs(),subscriptionLayer.invokeEventCallbacks("postset"))}}},616:(e,t,n)=>{"use strict";n.r(t),n.d(t,{deepClone:()=>i,isNumber:()=>r,isNil:()=>o,debounce:()=>a,escapeSelector:()=>c,getElementWithSelector:()=>l,isElementInBody:()=>u,extractQueryParamFromUrl:()=>p,topmostAccessibleWindow:()=>h,extractVariableFromString:()=>f,getRandomInt:()=>g,getTrueByProbability:()=>m,truncateString:()=>w,matchStringsOnString:()=>b,isFileHTML:()=>v});var i=function(e){if(!e)return e;var t,n=[Number,String,Boolean];try{if(n.forEach((n=>{e instanceof n&&(t=n(e))})),void 0===t)if("[object Array]"===Object.prototype.toString.call(e))t=[],e.forEach(((e,n,r)=>{t[n]=i(e)}));else if("object"==typeof e)if(e.nodeType&&"function"==typeof e.cloneNode)t=e.cloneNode(!0);else if(e.prototype)t=e;else if(e instanceof Date)t=new Date(e);else for(var r in t={},e)t[r]=i(e[r]);else t=e}catch(n){t=e}return t};function r(e){return!isNaN(e)&&"number"==typeof e}function o(e){return null==e}function a(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:250,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=this;return function(){for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];const d=()=>{t=null,i||e.apply(r,a)},c=i&&!t;clearTimeout(t),t=setTimeout(d,n),c&&e.apply(r,a)}}var s=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;function d(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e}function c(e){var t=e.charAt(0);return"#"===t||"."===t?t+e.substring(1).replace(s,d):e}function l(e){try{return document.querySelector(e)}catch(t){return console.error("document.querySelector:".concat(e," - error:").concat(t)),null}}function u(e){return e&&(document.documentElement||document.body).contains(e)}var p=function(e,t){e=e.replace(/[[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null};const h=function(){let e=window;try{if(top.document)return top}catch(e){}try{for(;e.parent.document;)e=e.parent}catch(e){}return e}();var f=function(e,t){if(e){for(var n=t.split("."),i=e,r=0;r<n.length;r++){var o=n[r];if(!i[o])return;i=i[o]}return i}};function g(e){return Math.floor(Math.random()*Math.floor(e))}function m(e){return g(100)<e}function w(e,t){return e.length>t?e.substring(0,t):e}function b(e,t){return e.every((e=>null==t?void 0:t.includes(e)))}function v(e){var t;const n=e.getResponseHeader("content-type");return null!==(t=null==n?void 0:n.toLowerCase().includes("html"))&&void 0!==t&&t}},614:(e,t,n)=>{"use strict";n.d(t,{Z:()=>y});var i={};n.r(i),n.d(i,{getSizeType:()=>m,isUnacceptable:()=>M,isUnacceptableFirstViewPortSize:()=>w});var r=n(868),o=n(616),a=new function(){this.insertElement=function(e,t,n){switch(n){case"appendChild":t.appendChild(e);break;case"insertBefore":t.parentElement.insertBefore(e,t);break;case"insertAfter":t.nextElementSibling?this.insertElement(e,t.nextElementSibling,"insertBefore"):this.insertElement(e,t.parentElement,"appendChild")}}},s=n(302),d=n(586),c=[{width:300,height:250},{width:336,height:280},{width:300,height:600},{width:160,height:600},{width:120,height:600},{width:120,height:240},{width:250,height:250},{width:200,height:200},{width:180,height:150},{width:125,height:125},{width:728,height:90},{width:970,height:90},{width:970,height:250},{width:468,height:60},{width:234,height:60}];const l=(e,t)=>((e,t)=>e.filter((e=>y.sizeValidation.getSizeType(e)===t)))(c,e).filter((e=>!y.sizeValidation.isUnacceptableFirstViewPortSize(e)||!t));var u=function(e,t,n){for(var i=function(e){for(var t=0,n=0,i=0;i<e.length;i++){var r=e[i];r&&r.width&&r.height&&(r.width>t&&(t=r.width),r.height>n&&(n=r.height))}return{width:t,height:n}}(e),r=y.sizeValidation.getSizeType(t),o=l(r,n),a=0;a<o.length;a++){var s=o[a];if(s.width<=i.width&&s.height<=i.height){for(var d=!0,c=0;c<e.length;c++){var u=e[c];if(u&&u.width===s.width&&u.height===s.height){d=!1;break}}if(d)return s}}},p=function(e){var t=document.createElement("a");return t.setAttribute("href",e),t},h=function(e,t){if(e&&e.length>0)for(var n=0;n<e.length;n++){for(var i=e[n],r=!0,o=0;o<i.length;o++){var a=i[o];if(t[a.type].indexOf(a.string)<0){r=!1;break}}if(r)return!0}};var f=1,g=2,m=function(e){return e.width>350?f:g},w=function(e){var t=m(e),n=r.Z.consts.acceptableStandardScreenSize.width*r.Z.consts.acceptableStandardScreenSize.height,i=e.height,o=e.width,a=o*i/n*100>=16;return t==g?a||o>350:a||e.height>200},b=function(e,t){var n,i,o=m(t),a=!1,s=!0,d=!1,c=t.height,l=t.width;if(e){"none"===window.getComputedStyle(e).display&&(n=e.style.getPropertyValue("display"),i=e.style.getPropertyPriority("display"),e.style.setProperty("display","block","important"),a=!0);var u=e.getBoundingClientRect().top;c=(d=u+t.height>r.Z.consts.acceptableStandardScreenSize.height)?r.Z.consts.acceptableStandardScreenSize.height-u:t.height}return s=o==g&&d?b(e,{width:l,height:c})&&v(t):w(t),a&&e.style.setProperty("display",n,i),s},v=function(e){var t=r.Z.consts.acceptableStandardScreenSize.width*r.Z.consts.acceptableStandardScreenSize.height,n=m(e);return e.width*e.height/t*100>=26||n==f&&e.height>400},M=function(e,t){return!e||(0,d.isFirstViewPortElement)(e)?b(e,t):v(t)};const y={addAcceptableParam:function(e){return e.indexOf(r.Z.upoSettings.acceptableURLParam)>-1?e:e=(e=(e=e.indexOf("?")>-1?e+"&"+r.Z.upoSettings.acceptableURLParam:e+"?"+r.Z.upoSettings.acceptableURLParam).replace("&&upapi=true","&upapi=true")).replace("onetag-sys.com/prebid-request?upapi=true","onetag-sys.com/prebid-request/?upapi=true")},commonUtils:o,ElementInsertion:a,sizesRemover:function(e,t){const n=[],i=s.Y.fireEvent("enableLegacySizesReplacer");t.forEach((e=>{e.width&&e.height&&n.push({width:e.width,height:e.height})}));for(var r=0;r<n.length;r++){var o=n[r];if(y.sizeValidation.isUnacceptable(e,o))if(i){const t=(0,d.isFirstViewPortElement)(e);n[r]=u(n,o,t)}else n.splice(r,1),r--}return n},SubscriptionLayer:function(){var e={};this.subscribeForEvent=function(t,n){e[t]=e[t]||[],e[t].indexOf(n)<0&&e[t].push(n)},this.invokeEventCallbacks=function(t,n){(e[t]||[]).forEach((e=>{e.call(void 0,n)}))}},urlValidations:{isSyncUrl:function(e,t){if("IMG"!==t)return!1;for(var n=p(e),i=[[{string:"/sync",type:"pathname"}],[{string:"/cookiesync",type:"pathname"}],[{string:"/rset",type:"pathname"}],[{string:"/getuid",type:"pathname"}],[{string:"/track",type:"pathname"}],[{string:"/pixel",type:"pathname"}],[{string:"/Pixel",type:"pathname"}],[{string:".pixel",type:"pathname"}],[{string:"pixel.",type:"pathname"}],[{string:"/match",type:"pathname"}],[{string:"/partner",type:"pathname"}],[{string:"/visitormatch",type:"pathname"}],[{string:"/ping_match",type:"pathname"}],[{string:"/ImgSync",type:"pathname"}],[{string:"/identify",type:"pathname"}],[{string:"/usync/",type:"pathname"}],[{string:"/usersync",type:"pathname"}],[{string:"/user-sync",type:"pathname"}],[{string:"/ddm/trackimp",type:"pathname"}],[{string:"/user_sync.php",type:"pathname"}],[{string:"/bh/rtset",type:"pathname"}],[{string:"%2Fsync",type:"pathname"}],[{string:"cksync.php",type:"pathname"}],[{string:".sync",type:"hostname"}],[{string:"sync-",type:"hostname"}],[{string:"storygize.net",type:"hostname"},{string:"/ccm",type:"href"}],[{string:"geo-um.btrll.com",type:"hostname"}],[{string:"nexac.com",type:"hostname"},{string:"/e/sr",type:"href"}],[{string:"api.bttrack.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"sitescout.com",type:"hostname"}],[{string:"criteo.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"},{string:"/sync",type:"href"}]],r=0;r<i.length;r++){for(var o=i[r],a=!0,s=0;s<o.length;s++){var d=o[s];if(n[d.type].indexOf(d.string)<0){a=!1;break}}if(a)return!0}return!1},isWhitelistURL:function(e,t){var n=p(e);return!h({SCRIPT:[[{string:"3lift.com",type:"hostname"},{string:"/header",type:"href"}]]}[t],n)&&!!h({IMG:[[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleclick.net",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"mynativeplatform.com",type:"hostname"}],[{string:"360yield.com",type:"hostname"}],[{string:"sharethrough.com",type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"zemanta.com",type:"hostname"}],[{string:"adnxs.com",type:"hostname"}],[{string:"sonobi.com",type:"hostname"}],[{string:"insight.adsrvr.org",type:"hostname"}],[{string:"serving-sys.com",type:"hostname"}],[{string:"advertising.com",type:"hostname"}],[{string:"openx.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"flashtalking.com",type:"hostname"},{string:"/imp",type:"href"}],[{string:"adroll.com",type:"hostname"}],[{string:"33across.com",type:"hostname"},{string:"/ps",type:"href"}],[{string:"adsrvr.org/bid",type:"href"}],[{string:"imrworldwide.com",type:"hostname"}],[{string:"criteo.com",type:"hostname"},{string:"/delivery",type:"href"}],[{string:"ad_overlays",type:"pathname"}]],IFRAME:[[{string:"googlesyndication.com/safeframe",type:"href"}],[{string:"ad.doubleclick.net/ddm",type:"hostname"}],[{string:"rubiconproject.com",type:"hostname"},{string:"multi-sync.html",type:"href"}],[{string:"3lift.com",type:"hostname"},{string:"sync?",type:"href"}],[{string:"ca-pub-15988",type:"href"}],[{string:"ff.doubleclick.net",type:"hostname"}]],SCRIPT:[[{string:"adnxs.com",type:"hostname"},{string:"trk.js",type:"href"}],[{string:"/sync",type:"pathname"}],[{string:"pagead2.googlesyndication.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}],[{string:"doubleclick.net/gpt/pubads_impl_",type:"href"}],[{string:"native.sharethrough.com/assets/sfp.js",type:"href"}],[{string:"sharethrough.com/api",type:"href"}],[{string:"moatads.com",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"match.adsrvr.org",type:"hostname"}],[{string:".adnxs.com/getuidp",type:"href"}],[{string:"pubads_impl_rendering_",type:"href"}],[{string:"cdn.ampproject.org",type:"href"}]],LINK:[[{string:"//tpc.googlesyndication.com/safeframe",type:"href"}],[{string:"ntv.io",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}]]}[t],n)}},sizeValidation:i}},96:(e,t,n)=>{var i="Expected a function",r=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,s=/^0o[0-7]+$/i,d=parseInt,c="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,l="object"==typeof self&&self&&self.Object===Object&&self,u=c||l||Function("return this")(),p=Object.prototype.toString,h=Math.max,f=Math.min,g=function(){return u.Date.now()};function m(e,t,n){var r,o,a,s,d,c,l=0,u=!1,p=!1,m=!0;if("function"!=typeof e)throw new TypeError(i);function v(t){var n=r,i=o;return r=o=void 0,l=t,s=e.apply(i,n)}function M(e){return l=e,d=setTimeout(_,t),u?v(e):s}function y(e){var n=e-c;return void 0===c||n>=t||n<0||p&&e-l>=a}function _(){var e=g();if(y(e))return D(e);d=setTimeout(_,function(e){var n=t-(e-c);return p?f(n,a-(e-l)):n}(e))}function D(e){return d=void 0,m&&r?v(e):(r=o=void 0,s)}function E(){var e=g(),n=y(e);if(r=arguments,o=this,c=e,n){if(void 0===d)return M(c);if(p)return d=setTimeout(_,t),v(c)}return void 0===d&&(d=setTimeout(_,t)),s}return t=b(t)||0,w(n)&&(u=!!n.leading,a=(p="maxWait"in n)?h(b(n.maxWait)||0,t):a,m="trailing"in n?!!n.trailing:m),E.cancel=function(){void 0!==d&&clearTimeout(d),l=0,r=c=o=d=void 0},E.flush=function(){return void 0===d?s:D(g())},E}function w(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function b(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==p.call(e)}(e))return NaN;if(w(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=w(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(r,"");var n=a.test(e);return n||s.test(e)?d(e.slice(2),n?2:8):o.test(e)?NaN:+e}e.exports=function(e,t,n){var r=!0,o=!0;if("function"!=typeof e)throw new TypeError(i);return w(n)&&(r="leading"in n?!!n.leading:r,o="trailing"in n?!!n.trailing:o),m(e,t,{leading:r,maxWait:t,trailing:o})}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{"use strict";var e={};__webpack_require__.r(e),__webpack_require__.d(e,{isBTDemandIntegration:()=>kn,setupBtSsp:()=>Yn,setupRelay:()=>Zn,setupSnigel:()=>In});var t={};__webpack_require__.r(t),__webpack_require__.d(t,{createWhitelistingIFrame:()=>Un,setupWhitelistingIFrameSettings:()=>Vn});var n=__webpack_require__(868),i=__webpack_require__(302),r=__webpack_require__(614),o=__webpack_require__(491);const a=new o.Z({prefix:"xhrSingleton: "});var s=function(e,t){return e.substr(0,t.length)===t},d=function(e){if(e=e.toLowerCase(),s(e,"proxy-"))return!1;if(s(e,"sec-"))return!1;switch(e){case"accept-charset":case"accept-encoding":case"access-control-request-headers":case"access-control-request-method":case"connection":case"content-length":case"cookie":case"cookie2":case"date":case"dnt":case"expect":case"host":case"keep-alive":case"origin":case"te":case"trailer":case"transfer-encoding":case"upgrade":case"via":case"x-client-version":case"x-cookie":case"x-referer":return!1}return!0},c=new function(){this.init=function(e,t){if(t=t||{},!e||"string"!=typeof e)throw new TypeError;this.host=e;var n=void 0===t.secure||t.secure;this.protocol=n?"https":"http",this.suffix=void 0!==t.suffix?t.suffix:""},this.$fetch=function(e){return new Promise(function(t,n){if("object"!=typeof e||"string"!=typeof e.url)throw new TypeError;var i=!1,r=e.url||"";(r.length<1||"/"!=r[0])&&(r="/"+r);var o=this.protocol+"://"+this.host+r;o+=this.suffix?"#"+this.suffix:"";var s=e.method||"GET",c=e.headers||{},l=e.body?e.body:null,u=new XMLHttpRequest;for(var p in u.onreadystatechange=function(e){if(4==u.readyState)if(0!=u.status){var r=function(e){for(var t={},n=Object.keys(e),i=0;i<n.length;i++)t[n[i].toLowerCase()]=e[n[i]];return t}(function(e){var t={};if(!e)return t;for(var n=e.split("\r\n"),i=0;i<n.length;i++){var r=n[i],o=r.indexOf(": ");if(o>0){var a=r.substring(0,o),s=r.substring(o+2);t[a]||(t[a]=[]),t[a].push(s)}}return t}(u.getAllResponseHeaders()));if(r["x-content-type"]&&(r["content-type"]=r["x-content-type"],delete r["x-content-type"]),u.status>=200&&u.status<300){var d={status:u.status,headers:r,body:u.response};t(d)}else n("status -> "+u.status)}else{if(i)return;i=!0,n("status -> "+u.status);const t={sendToServer:!0,sendPercentage:1,event:"xhr.onReadyStateChange error",meta:{url:o,method:s,body:l,event:e}};a.errorf(null,"xhr error -> ",o,t)}},u.onerror=function(e){if(i)return;i=!0,n(e);const t={sendToServer:!0,sendPercentage:1,event:"xhr.onError error",meta:{url:o,method:s,body:l,error:e}};a.errorf(null,"xhr error -> ",o,t)},u.open(s,o,!0),u.responseType="arraybuffer",c)c.hasOwnProperty(p)&&0!=c[p].length&&(d(p)||u.setRequestHeader(p,c[p][0]));u.send(l)}.bind(this))}},l=function(e,t,n){if(!e||"number"!=typeof t||"number"!=typeof n||t<=0||n<=0||t>n)throw new TypeError;for(var i=Math.floor(Math.random()*(n+1-t))+t,r="",o=0;o<i;o++)r+=e.charAt(Math.floor(Math.random()*e.length));return r},u=function(e,t){return l("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",e,t)};const p=u;function h(e){let t=e.length;for(;--t>=0;)e[t]=0}const f=256,g=286,m=30,w=15,b=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),v=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),M=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),y=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),_=new Array(576);h(_);const D=new Array(60);h(D);const E=new Array(512);h(E);const T=new Array(256);h(T);const N=new Array(29);h(N);const z=new Array(m);function x(e,t,n,i,r){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=i,this.max_length=r,this.has_stree=e&&e.length}let B,S,k;function Z(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}h(z);const I=e=>e<256?E[e]:E[256+(e>>>7)],Y=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},H=(e,t,n)=>{e.bi_valid>16-n?(e.bi_buf|=t<<e.bi_valid&65535,Y(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=n-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)},X=(e,t,n)=>{H(e,n[2*t],n[2*t+1])},O=(e,t)=>{let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1},R=(e,t,n)=>{const i=new Array(16);let r,o,a=0;for(r=1;r<=w;r++)i[r]=a=a+n[r-1]<<1;for(o=0;o<=t;o++){let t=e[2*o+1];0!==t&&(e[2*o]=O(i[t]++,t))}},C=e=>{let t;for(t=0;t<g;t++)e.dyn_ltree[2*t]=0;for(t=0;t<m;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0},A=e=>{e.bi_valid>8?Y(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},W=(e,t,n,i)=>{const r=2*t,o=2*n;return e[r]<e[o]||e[r]===e[o]&&i[t]<=i[n]},j=(e,t,n)=>{const i=e.heap[n];let r=n<<1;for(;r<=e.heap_len&&(r<e.heap_len&&W(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!W(t,i,e.heap[r],e.depth));)e.heap[n]=e.heap[r],n=r,r<<=1;e.heap[n]=i},V=(e,t,n)=>{let i,r,o,a,s=0;if(0!==e.last_lit)do{i=e.pending_buf[e.d_buf+2*s]<<8|e.pending_buf[e.d_buf+2*s+1],r=e.pending_buf[e.l_buf+s],s++,0===i?X(e,r,t):(o=T[r],X(e,o+f+1,t),a=b[o],0!==a&&(r-=N[o],H(e,r,a)),i--,o=I(i),X(e,o,n),a=v[o],0!==a&&(i-=z[o],H(e,i,a)))}while(s<e.last_lit);X(e,256,t)},F=(e,t)=>{const n=t.dyn_tree,i=t.stat_desc.static_tree,r=t.stat_desc.has_stree,o=t.stat_desc.elems;let a,s,d,c=-1;for(e.heap_len=0,e.heap_max=573,a=0;a<o;a++)0!==n[2*a]?(e.heap[++e.heap_len]=c=a,e.depth[a]=0):n[2*a+1]=0;for(;e.heap_len<2;)d=e.heap[++e.heap_len]=c<2?++c:0,n[2*d]=1,e.depth[d]=0,e.opt_len--,r&&(e.static_len-=i[2*d+1]);for(t.max_code=c,a=e.heap_len>>1;a>=1;a--)j(e,n,a);d=o;do{a=e.heap[1],e.heap[1]=e.heap[e.heap_len--],j(e,n,1),s=e.heap[1],e.heap[--e.heap_max]=a,e.heap[--e.heap_max]=s,n[2*d]=n[2*a]+n[2*s],e.depth[d]=(e.depth[a]>=e.depth[s]?e.depth[a]:e.depth[s])+1,n[2*a+1]=n[2*s+1]=d,e.heap[1]=d++,j(e,n,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const n=t.dyn_tree,i=t.max_code,r=t.stat_desc.static_tree,o=t.stat_desc.has_stree,a=t.stat_desc.extra_bits,s=t.stat_desc.extra_base,d=t.stat_desc.max_length;let c,l,u,p,h,f,g=0;for(p=0;p<=w;p++)e.bl_count[p]=0;for(n[2*e.heap[e.heap_max]+1]=0,c=e.heap_max+1;c<573;c++)l=e.heap[c],p=n[2*n[2*l+1]+1]+1,p>d&&(p=d,g++),n[2*l+1]=p,l>i||(e.bl_count[p]++,h=0,l>=s&&(h=a[l-s]),f=n[2*l],e.opt_len+=f*(p+h),o&&(e.static_len+=f*(r[2*l+1]+h)));if(0!==g){do{for(p=d-1;0===e.bl_count[p];)p--;e.bl_count[p]--,e.bl_count[p+1]+=2,e.bl_count[d]--,g-=2}while(g>0);for(p=d;0!==p;p--)for(l=e.bl_count[p];0!==l;)u=e.heap[--c],u>i||(n[2*u+1]!==p&&(e.opt_len+=(p-n[2*u+1])*n[2*u],n[2*u+1]=p),l--)}})(e,t),R(n,c,e.bl_count)},U=(e,t,n)=>{let i,r,o=-1,a=t[1],s=0,d=7,c=4;for(0===a&&(d=138,c=3),t[2*(n+1)+1]=65535,i=0;i<=n;i++)r=a,a=t[2*(i+1)+1],++s<d&&r===a||(s<c?e.bl_tree[2*r]+=s:0!==r?(r!==o&&e.bl_tree[2*r]++,e.bl_tree[32]++):s<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=0,o=r,0===a?(d=138,c=3):r===a?(d=6,c=3):(d=7,c=4))},L=(e,t,n)=>{let i,r,o=-1,a=t[1],s=0,d=7,c=4;for(0===a&&(d=138,c=3),i=0;i<=n;i++)if(r=a,a=t[2*(i+1)+1],!(++s<d&&r===a)){if(s<c)do{X(e,r,e.bl_tree)}while(0!=--s);else 0!==r?(r!==o&&(X(e,r,e.bl_tree),s--),X(e,16,e.bl_tree),H(e,s-3,2)):s<=10?(X(e,17,e.bl_tree),H(e,s-3,3)):(X(e,18,e.bl_tree),H(e,s-11,7));s=0,o=r,0===a?(d=138,c=3):r===a?(d=6,c=3):(d=7,c=4)}};let P=!1;const K=(e,t,n,i)=>{H(e,0+(i?1:0),3),((e,t,n,i)=>{A(e),i&&(Y(e,n),Y(e,~n)),e.pending_buf.set(e.window.subarray(t,t+n),e.pending),e.pending+=n})(e,t,n,!0)};var G=(e,t,n,i)=>{let r,o,a=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<f;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),F(e,e.l_desc),F(e,e.d_desc),a=(e=>{let t;for(U(e,e.dyn_ltree,e.l_desc.max_code),U(e,e.dyn_dtree,e.d_desc.max_code),F(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*y[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),r=e.opt_len+3+7>>>3,o=e.static_len+3+7>>>3,o<=r&&(r=o)):r=o=n+5,n+4<=r&&-1!==t?K(e,t,n,i):4===e.strategy||o===r?(H(e,2+(i?1:0),3),V(e,_,D)):(H(e,4+(i?1:0),3),((e,t,n,i)=>{let r;for(H(e,t-257,5),H(e,n-1,5),H(e,i-4,4),r=0;r<i;r++)H(e,e.bl_tree[2*y[r]+1],3);L(e,e.dyn_ltree,t-1),L(e,e.dyn_dtree,n-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),V(e,e.dyn_ltree,e.dyn_dtree)),C(e),i&&A(e)},J={_tr_init:e=>{P||((()=>{let e,t,n,i,r;const o=new Array(16);for(n=0,i=0;i<28;i++)for(N[i]=n,e=0;e<1<<b[i];e++)T[n++]=i;for(T[n-1]=i,r=0,i=0;i<16;i++)for(z[i]=r,e=0;e<1<<v[i];e++)E[r++]=i;for(r>>=7;i<m;i++)for(z[i]=r<<7,e=0;e<1<<v[i]-7;e++)E[256+r++]=i;for(t=0;t<=w;t++)o[t]=0;for(e=0;e<=143;)_[2*e+1]=8,e++,o[8]++;for(;e<=255;)_[2*e+1]=9,e++,o[9]++;for(;e<=279;)_[2*e+1]=7,e++,o[7]++;for(;e<=287;)_[2*e+1]=8,e++,o[8]++;for(R(_,287,o),e=0;e<m;e++)D[2*e+1]=5,D[2*e]=O(e,5);B=new x(_,b,257,g,w),S=new x(D,v,0,m,w),k=new x(new Array(0),M,0,19,7)})(),P=!0),e.l_desc=new Z(e.dyn_ltree,B),e.d_desc=new Z(e.dyn_dtree,S),e.bl_desc=new Z(e.bl_tree,k),e.bi_buf=0,e.bi_valid=0,C(e)},_tr_stored_block:K,_tr_flush_block:G,_tr_tally:(e,t,n)=>(e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&n,e.last_lit++,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(T[n]+f+1)]++,e.dyn_dtree[2*I(t)]++),e.last_lit===e.lit_bufsize-1),_tr_align:e=>{H(e,2,3),X(e,256,_),(e=>{16===e.bi_valid?(Y(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var Q=(e,t,n,i)=>{let r=65535&e|0,o=e>>>16&65535|0,a=0;for(;0!==n;){a=n>2e3?2e3:n,n-=a;do{r=r+t[i++]|0,o=o+r|0}while(--a);r%=65521,o%=65521}return r|o<<16|0};const q=new Uint32Array((()=>{let e,t=[];for(var n=0;n<256;n++){e=n;for(var i=0;i<8;i++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t})());var $=(e,t,n,i)=>{const r=q,o=i+n;e^=-1;for(let n=i;n<o;n++)e=e>>>8^r[255&(e^t[n])];return-1^e},ee={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},te={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:ne,_tr_stored_block:ie,_tr_flush_block:re,_tr_tally:oe,_tr_align:ae}=J,{Z_NO_FLUSH:se,Z_PARTIAL_FLUSH:de,Z_FULL_FLUSH:ce,Z_FINISH:le,Z_BLOCK:ue,Z_OK:pe,Z_STREAM_END:he,Z_STREAM_ERROR:fe,Z_DATA_ERROR:ge,Z_BUF_ERROR:me,Z_DEFAULT_COMPRESSION:we,Z_FILTERED:be,Z_HUFFMAN_ONLY:ve,Z_RLE:Me,Z_FIXED:ye,Z_DEFAULT_STRATEGY:_e,Z_UNKNOWN:De,Z_DEFLATED:Ee}=te,Te=258,Ne=262,ze=103,xe=113,Be=666,Se=(e,t)=>(e.msg=ee[t],t),ke=e=>(e<<1)-(e>4?9:0),Ze=e=>{let t=e.length;for(;--t>=0;)e[t]=0};let Ie=(e,t,n)=>(t<<e.hash_shift^n)&e.hash_mask;const Ye=e=>{const t=e.state;let n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+n),e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))},He=(e,t)=>{re(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,Ye(e.strm)},Xe=(e,t)=>{e.pending_buf[e.pending++]=t},Oe=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},Re=(e,t,n,i)=>{let r=e.avail_in;return r>i&&(r=i),0===r?0:(e.avail_in-=r,t.set(e.input.subarray(e.next_in,e.next_in+r),n),1===e.state.wrap?e.adler=Q(e.adler,t,r,n):2===e.state.wrap&&(e.adler=$(e.adler,t,r,n)),e.next_in+=r,e.total_in+=r,r)},Ce=(e,t)=>{let n,i,r=e.max_chain_length,o=e.strstart,a=e.prev_length,s=e.nice_match;const d=e.strstart>e.w_size-Ne?e.strstart-(e.w_size-Ne):0,c=e.window,l=e.w_mask,u=e.prev,p=e.strstart+Te;let h=c[o+a-1],f=c[o+a];e.prev_length>=e.good_match&&(r>>=2),s>e.lookahead&&(s=e.lookahead);do{if(n=t,c[n+a]===f&&c[n+a-1]===h&&c[n]===c[o]&&c[++n]===c[o+1]){o+=2,n++;do{}while(c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&o<p);if(i=Te-(p-o),o=p-Te,i>a){if(e.match_start=t,a=i,i>=s)break;h=c[o+a-1],f=c[o+a]}}}while((t=u[t&l])>d&&0!=--r);return a<=e.lookahead?a:e.lookahead},Ae=e=>{const t=e.w_size;let n,i,r,o,a;do{if(o=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Ne)){e.window.set(e.window.subarray(t,t+t),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,i=e.hash_size,n=i;do{r=e.head[--n],e.head[n]=r>=t?r-t:0}while(--i);i=t,n=i;do{r=e.prev[--n],e.prev[n]=r>=t?r-t:0}while(--i);o+=t}if(0===e.strm.avail_in)break;if(i=Re(e.strm,e.window,e.strstart+e.lookahead,o),e.lookahead+=i,e.lookahead+e.insert>=3)for(a=e.strstart-e.insert,e.ins_h=e.window[a],e.ins_h=Ie(e,e.ins_h,e.window[a+1]);e.insert&&(e.ins_h=Ie(e,e.ins_h,e.window[a+3-1]),e.prev[a&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=a,a++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<Ne&&0!==e.strm.avail_in)},We=(e,t)=>{let n,i;for(;;){if(e.lookahead<Ne){if(Ae(e),e.lookahead<Ne&&t===se)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-Ne&&(e.match_length=Ce(e,n)),e.match_length>=3)if(i=oe(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+1]);else i=oe(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(i&&(He(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===le?(He(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(He(e,!1),0===e.strm.avail_out)?1:2},je=(e,t)=>{let n,i,r;for(;;){if(e.lookahead<Ne){if(Ae(e),e.lookahead<Ne&&t===se)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-Ne&&(e.match_length=Ce(e,n),e.match_length<=5&&(e.strategy===be||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,i=oe(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,i&&(He(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(i=oe(e,0,e.window[e.strstart-1]),i&&He(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(i=oe(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===le?(He(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(He(e,!1),0===e.strm.avail_out)?1:2};function Ve(e,t,n,i,r){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=i,this.func=r}const Fe=[new Ve(0,0,0,0,((e,t)=>{let n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(Ae(e),0===e.lookahead&&t===se)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;const i=e.block_start+n;if((0===e.strstart||e.strstart>=i)&&(e.lookahead=e.strstart-i,e.strstart=i,He(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-Ne&&(He(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===le?(He(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(He(e,!1),e.strm.avail_out),1)})),new Ve(4,4,8,4,We),new Ve(4,5,16,8,We),new Ve(4,6,32,32,We),new Ve(4,4,16,16,je),new Ve(8,16,32,32,je),new Ve(8,16,128,128,je),new Ve(8,32,128,256,je),new Ve(32,128,258,1024,je),new Ve(32,258,258,4096,je)];function Ue(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Ee,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),Ze(this.dyn_ltree),Ze(this.dyn_dtree),Ze(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),Ze(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),Ze(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Le=e=>{if(!e||!e.state)return Se(e,fe);e.total_in=e.total_out=0,e.data_type=De;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?42:xe,e.adler=2===t.wrap?0:1,t.last_flush=se,ne(t),pe},Pe=e=>{const t=Le(e);var n;return t===pe&&((n=e.state).window_size=2*n.w_size,Ze(n.head),n.max_lazy_match=Fe[n.level].max_lazy,n.good_match=Fe[n.level].good_length,n.nice_match=Fe[n.level].nice_length,n.max_chain_length=Fe[n.level].max_chain,n.strstart=0,n.block_start=0,n.lookahead=0,n.insert=0,n.match_length=n.prev_length=2,n.match_available=0,n.ins_h=0),t},Ke=(e,t,n,i,r,o)=>{if(!e)return fe;let a=1;if(t===we&&(t=6),i<0?(a=0,i=-i):i>15&&(a=2,i-=16),r<1||r>9||n!==Ee||i<8||i>15||t<0||t>9||o<0||o>ye)return Se(e,fe);8===i&&(i=9);const s=new Ue;return e.state=s,s.strm=e,s.wrap=a,s.gzhead=null,s.w_bits=i,s.w_size=1<<s.w_bits,s.w_mask=s.w_size-1,s.hash_bits=r+7,s.hash_size=1<<s.hash_bits,s.hash_mask=s.hash_size-1,s.hash_shift=~~((s.hash_bits+3-1)/3),s.window=new Uint8Array(2*s.w_size),s.head=new Uint16Array(s.hash_size),s.prev=new Uint16Array(s.w_size),s.lit_bufsize=1<<r+6,s.pending_buf_size=4*s.lit_bufsize,s.pending_buf=new Uint8Array(s.pending_buf_size),s.d_buf=1*s.lit_bufsize,s.l_buf=3*s.lit_bufsize,s.level=t,s.strategy=o,s.method=n,Pe(e)};var Ge={deflateInit:(e,t)=>Ke(e,t,Ee,15,8,_e),deflateInit2:Ke,deflateReset:Pe,deflateResetKeep:Le,deflateSetHeader:(e,t)=>e&&e.state?2!==e.state.wrap?fe:(e.state.gzhead=t,pe):fe,deflate:(e,t)=>{let n,i;if(!e||!e.state||t>ue||t<0)return e?Se(e,fe):fe;const r=e.state;if(!e.output||!e.input&&0!==e.avail_in||r.status===Be&&t!==le)return Se(e,0===e.avail_out?me:fe);r.strm=e;const o=r.last_flush;if(r.last_flush=t,42===r.status)if(2===r.wrap)e.adler=0,Xe(r,31),Xe(r,139),Xe(r,8),r.gzhead?(Xe(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),Xe(r,255&r.gzhead.time),Xe(r,r.gzhead.time>>8&255),Xe(r,r.gzhead.time>>16&255),Xe(r,r.gzhead.time>>24&255),Xe(r,9===r.level?2:r.strategy>=ve||r.level<2?4:0),Xe(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(Xe(r,255&r.gzhead.extra.length),Xe(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=$(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=69):(Xe(r,0),Xe(r,0),Xe(r,0),Xe(r,0),Xe(r,0),Xe(r,9===r.level?2:r.strategy>=ve||r.level<2?4:0),Xe(r,3),r.status=xe);else{let t=Ee+(r.w_bits-8<<4)<<8,n=-1;n=r.strategy>=ve||r.level<2?0:r.level<6?1:6===r.level?2:3,t|=n<<6,0!==r.strstart&&(t|=32),t+=31-t%31,r.status=xe,Oe(r,t),0!==r.strstart&&(Oe(r,e.adler>>>16),Oe(r,65535&e.adler)),e.adler=1}if(69===r.status)if(r.gzhead.extra){for(n=r.pending;r.gzindex<(65535&r.gzhead.extra.length)&&(r.pending!==r.pending_buf_size||(r.gzhead.hcrc&&r.pending>n&&(e.adler=$(e.adler,r.pending_buf,r.pending-n,n)),Ye(e),n=r.pending,r.pending!==r.pending_buf_size));)Xe(r,255&r.gzhead.extra[r.gzindex]),r.gzindex++;r.gzhead.hcrc&&r.pending>n&&(e.adler=$(e.adler,r.pending_buf,r.pending-n,n)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=73)}else r.status=73;if(73===r.status)if(r.gzhead.name){n=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>n&&(e.adler=$(e.adler,r.pending_buf,r.pending-n,n)),Ye(e),n=r.pending,r.pending===r.pending_buf_size)){i=1;break}i=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,Xe(r,i)}while(0!==i);r.gzhead.hcrc&&r.pending>n&&(e.adler=$(e.adler,r.pending_buf,r.pending-n,n)),0===i&&(r.gzindex=0,r.status=91)}else r.status=91;if(91===r.status)if(r.gzhead.comment){n=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>n&&(e.adler=$(e.adler,r.pending_buf,r.pending-n,n)),Ye(e),n=r.pending,r.pending===r.pending_buf_size)){i=1;break}i=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,Xe(r,i)}while(0!==i);r.gzhead.hcrc&&r.pending>n&&(e.adler=$(e.adler,r.pending_buf,r.pending-n,n)),0===i&&(r.status=ze)}else r.status=ze;if(r.status===ze&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&Ye(e),r.pending+2<=r.pending_buf_size&&(Xe(r,255&e.adler),Xe(r,e.adler>>8&255),e.adler=0,r.status=xe)):r.status=xe),0!==r.pending){if(Ye(e),0===e.avail_out)return r.last_flush=-1,pe}else if(0===e.avail_in&&ke(t)<=ke(o)&&t!==le)return Se(e,me);if(r.status===Be&&0!==e.avail_in)return Se(e,me);if(0!==e.avail_in||0!==r.lookahead||t!==se&&r.status!==Be){let n=r.strategy===ve?((e,t)=>{let n;for(;;){if(0===e.lookahead&&(Ae(e),0===e.lookahead)){if(t===se)return 1;break}if(e.match_length=0,n=oe(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(He(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===le?(He(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(He(e,!1),0===e.strm.avail_out)?1:2})(r,t):r.strategy===Me?((e,t)=>{let n,i,r,o;const a=e.window;for(;;){if(e.lookahead<=Te){if(Ae(e),e.lookahead<=Te&&t===se)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=e.strstart-1,i=a[r],i===a[++r]&&i===a[++r]&&i===a[++r])){o=e.strstart+Te;do{}while(i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&r<o);e.match_length=Te-(o-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(n=oe(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=oe(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(He(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===le?(He(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(He(e,!1),0===e.strm.avail_out)?1:2})(r,t):Fe[r.level].func(r,t);if(3!==n&&4!==n||(r.status=Be),1===n||3===n)return 0===e.avail_out&&(r.last_flush=-1),pe;if(2===n&&(t===de?ae(r):t!==ue&&(ie(r,0,0,!1),t===ce&&(Ze(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),Ye(e),0===e.avail_out))return r.last_flush=-1,pe}return t!==le?pe:r.wrap<=0?he:(2===r.wrap?(Xe(r,255&e.adler),Xe(r,e.adler>>8&255),Xe(r,e.adler>>16&255),Xe(r,e.adler>>24&255),Xe(r,255&e.total_in),Xe(r,e.total_in>>8&255),Xe(r,e.total_in>>16&255),Xe(r,e.total_in>>24&255)):(Oe(r,e.adler>>>16),Oe(r,65535&e.adler)),Ye(e),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?pe:he)},deflateEnd:e=>{if(!e||!e.state)return fe;const t=e.state.status;return 42!==t&&69!==t&&73!==t&&91!==t&&t!==ze&&t!==xe&&t!==Be?Se(e,fe):(e.state=null,t===xe?Se(e,ge):pe)},deflateSetDictionary:(e,t)=>{let n=t.length;if(!e||!e.state)return fe;const i=e.state,r=i.wrap;if(2===r||1===r&&42!==i.status||i.lookahead)return fe;if(1===r&&(e.adler=Q(e.adler,t,n,0)),i.wrap=0,n>=i.w_size){0===r&&(Ze(i.head),i.strstart=0,i.block_start=0,i.insert=0);let e=new Uint8Array(i.w_size);e.set(t.subarray(n-i.w_size,n),0),t=e,n=i.w_size}const o=e.avail_in,a=e.next_in,s=e.input;for(e.avail_in=n,e.next_in=0,e.input=t,Ae(i);i.lookahead>=3;){let e=i.strstart,t=i.lookahead-2;do{i.ins_h=Ie(i,i.ins_h,i.window[e+3-1]),i.prev[e&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=e,e++}while(--t);i.strstart=e,i.lookahead=2,Ae(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,e.next_in=a,e.input=s,e.avail_in=o,i.wrap=r,pe},deflateInfo:"pako deflate (from Nodeca project)"};const Je=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var Qe=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const n=t.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(const t in n)Je(n,t)&&(e[t]=n[t])}}return e},qe=e=>{let t=0;for(let n=0,i=e.length;n<i;n++)t+=e[n].length;const n=new Uint8Array(t);for(let t=0,i=0,r=e.length;t<r;t++){let r=e[t];n.set(r,i),i+=r.length}return n};let $e=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){$e=!1}const et=new Uint8Array(256);for(let e=0;e<256;e++)et[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;et[254]=et[254]=1;var tt=e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,n,i,r,o,a=e.length,s=0;for(r=0;r<a;r++)n=e.charCodeAt(r),55296==(64512&n)&&r+1<a&&(i=e.charCodeAt(r+1),56320==(64512&i)&&(n=65536+(n-55296<<10)+(i-56320),r++)),s+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Uint8Array(s),o=0,r=0;o<s;r++)n=e.charCodeAt(r),55296==(64512&n)&&r+1<a&&(i=e.charCodeAt(r+1),56320==(64512&i)&&(n=65536+(n-55296<<10)+(i-56320),r++)),n<128?t[o++]=n:n<2048?(t[o++]=192|n>>>6,t[o++]=128|63&n):n<65536?(t[o++]=224|n>>>12,t[o++]=128|n>>>6&63,t[o++]=128|63&n):(t[o++]=240|n>>>18,t[o++]=128|n>>>12&63,t[o++]=128|n>>>6&63,t[o++]=128|63&n);return t},nt=(e,t)=>{const n=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let i,r;const o=new Array(2*n);for(r=0,i=0;i<n;){let t=e[i++];if(t<128){o[r++]=t;continue}let a=et[t];if(a>4)o[r++]=65533,i+=a-1;else{for(t&=2===a?31:3===a?15:7;a>1&&i<n;)t=t<<6|63&e[i++],a--;a>1?o[r++]=65533:t<65536?o[r++]=t:(t-=65536,o[r++]=55296|t>>10&1023,o[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&$e)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let n="";for(let i=0;i<t;i++)n+=String.fromCharCode(e[i]);return n})(o,r)},it=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let n=t-1;for(;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+et[e[n]]>t?n:t};var rt=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const ot=Object.prototype.toString,{Z_NO_FLUSH:at,Z_SYNC_FLUSH:st,Z_FULL_FLUSH:dt,Z_FINISH:ct,Z_OK:lt,Z_STREAM_END:ut,Z_DEFAULT_COMPRESSION:pt,Z_DEFAULT_STRATEGY:ht,Z_DEFLATED:ft}=te;function gt(e){this.options=Qe({level:pt,method:ft,chunkSize:16384,windowBits:15,memLevel:8,strategy:ht},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new rt,this.strm.avail_out=0;let n=Ge.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==lt)throw new Error(ee[n]);if(t.header&&Ge.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?tt(t.dictionary):"[object ArrayBuffer]"===ot.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,n=Ge.deflateSetDictionary(this.strm,e),n!==lt)throw new Error(ee[n]);this._dict_set=!0}}function mt(e,t){const n=new gt(t);if(n.push(e,!0),n.err)throw n.msg||ee[n.err];return n.result}gt.prototype.push=function(e,t){const n=this.strm,i=this.options.chunkSize;let r,o;if(this.ended)return!1;for(o=t===~~t?t:!0===t?ct:at,"string"==typeof e?n.input=tt(e):"[object ArrayBuffer]"===ot.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;)if(0===n.avail_out&&(n.output=new Uint8Array(i),n.next_out=0,n.avail_out=i),(o===st||o===dt)&&n.avail_out<=6)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else{if(r=Ge.deflate(n,o),r===ut)return n.next_out>0&&this.onData(n.output.subarray(0,n.next_out)),r=Ge.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===lt;if(0!==n.avail_out){if(o>0&&n.next_out>0)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else if(0===n.avail_in)break}else this.onData(n.output)}return!0},gt.prototype.onData=function(e){this.chunks.push(e)},gt.prototype.onEnd=function(e){e===lt&&(this.result=qe(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var wt={Deflate:gt,deflate:mt,deflateRaw:function(e,t){return(t=t||{}).raw=!0,mt(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,mt(e,t)},constants:te};var bt=function(e,t){let n,i,r,o,a,s,d,c,l,u,p,h,f,g,m,w,b,v,M,y,_,D,E,T;const N=e.state;n=e.next_in,E=e.input,i=n+(e.avail_in-5),r=e.next_out,T=e.output,o=r-(t-e.avail_out),a=r+(e.avail_out-257),s=N.dmax,d=N.wsize,c=N.whave,l=N.wnext,u=N.window,p=N.hold,h=N.bits,f=N.lencode,g=N.distcode,m=(1<<N.lenbits)-1,w=(1<<N.distbits)-1;e:do{h<15&&(p+=E[n++]<<h,h+=8,p+=E[n++]<<h,h+=8),b=f[p&m];t:for(;;){if(v=b>>>24,p>>>=v,h-=v,v=b>>>16&255,0===v)T[r++]=65535&b;else{if(!(16&v)){if(0==(64&v)){b=f[(65535&b)+(p&(1<<v)-1)];continue t}if(32&v){N.mode=12;break e}e.msg="invalid literal/length code",N.mode=30;break e}M=65535&b,v&=15,v&&(h<v&&(p+=E[n++]<<h,h+=8),M+=p&(1<<v)-1,p>>>=v,h-=v),h<15&&(p+=E[n++]<<h,h+=8,p+=E[n++]<<h,h+=8),b=g[p&w];n:for(;;){if(v=b>>>24,p>>>=v,h-=v,v=b>>>16&255,!(16&v)){if(0==(64&v)){b=g[(65535&b)+(p&(1<<v)-1)];continue n}e.msg="invalid distance code",N.mode=30;break e}if(y=65535&b,v&=15,h<v&&(p+=E[n++]<<h,h+=8,h<v&&(p+=E[n++]<<h,h+=8)),y+=p&(1<<v)-1,y>s){e.msg="invalid distance too far back",N.mode=30;break e}if(p>>>=v,h-=v,v=r-o,y>v){if(v=y-v,v>c&&N.sane){e.msg="invalid distance too far back",N.mode=30;break e}if(_=0,D=u,0===l){if(_+=d-v,v<M){M-=v;do{T[r++]=u[_++]}while(--v);_=r-y,D=T}}else if(l<v){if(_+=d+l-v,v-=l,v<M){M-=v;do{T[r++]=u[_++]}while(--v);if(_=0,l<M){v=l,M-=v;do{T[r++]=u[_++]}while(--v);_=r-y,D=T}}}else if(_+=l-v,v<M){M-=v;do{T[r++]=u[_++]}while(--v);_=r-y,D=T}for(;M>2;)T[r++]=D[_++],T[r++]=D[_++],T[r++]=D[_++],M-=3;M&&(T[r++]=D[_++],M>1&&(T[r++]=D[_++]))}else{_=r-y;do{T[r++]=T[_++],T[r++]=T[_++],T[r++]=T[_++],M-=3}while(M>2);M&&(T[r++]=T[_++],M>1&&(T[r++]=T[_++]))}break}}break}}while(n<i&&r<a);M=h>>3,n-=M,h-=M<<3,p&=(1<<h)-1,e.next_in=n,e.next_out=r,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=r<a?a-r+257:257-(r-a),N.hold=p,N.bits=h};const vt=15,Mt=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),yt=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),_t=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),Dt=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var Et=(e,t,n,i,r,o,a,s)=>{const d=s.bits;let c,l,u,p,h,f,g=0,m=0,w=0,b=0,v=0,M=0,y=0,_=0,D=0,E=0,T=null,N=0;const z=new Uint16Array(16),x=new Uint16Array(16);let B,S,k,Z=null,I=0;for(g=0;g<=vt;g++)z[g]=0;for(m=0;m<i;m++)z[t[n+m]]++;for(v=d,b=vt;b>=1&&0===z[b];b--);if(v>b&&(v=b),0===b)return r[o++]=20971520,r[o++]=20971520,s.bits=1,0;for(w=1;w<b&&0===z[w];w++);for(v<w&&(v=w),_=1,g=1;g<=vt;g++)if(_<<=1,_-=z[g],_<0)return-1;if(_>0&&(0===e||1!==b))return-1;for(x[1]=0,g=1;g<vt;g++)x[g+1]=x[g]+z[g];for(m=0;m<i;m++)0!==t[n+m]&&(a[x[t[n+m]]++]=m);if(0===e?(T=Z=a,f=19):1===e?(T=Mt,N-=257,Z=yt,I-=257,f=256):(T=_t,Z=Dt,f=-1),E=0,m=0,g=w,h=o,M=v,y=0,u=-1,D=1<<v,p=D-1,1===e&&D>852||2===e&&D>592)return 1;for(;;){B=g-y,a[m]<f?(S=0,k=a[m]):a[m]>f?(S=Z[I+a[m]],k=T[N+a[m]]):(S=96,k=0),c=1<<g-y,l=1<<M,w=l;do{l-=c,r[h+(E>>y)+l]=B<<24|S<<16|k|0}while(0!==l);for(c=1<<g-1;E&c;)c>>=1;if(0!==c?(E&=c-1,E+=c):E=0,m++,0==--z[g]){if(g===b)break;g=t[n+a[m]]}if(g>v&&(E&p)!==u){for(0===y&&(y=v),h+=w,M=g-y,_=1<<M;M+y<b&&(_-=z[M+y],!(_<=0));)M++,_<<=1;if(D+=1<<M,1===e&&D>852||2===e&&D>592)return 1;u=E&p,r[u]=v<<24|M<<16|h-o|0}}return 0!==E&&(r[h+E]=g-y<<24|64<<16|0),s.bits=v,0};const{Z_FINISH:Tt,Z_BLOCK:Nt,Z_TREES:zt,Z_OK:xt,Z_STREAM_END:Bt,Z_NEED_DICT:St,Z_STREAM_ERROR:kt,Z_DATA_ERROR:Zt,Z_MEM_ERROR:It,Z_BUF_ERROR:Yt,Z_DEFLATED:Ht}=te,Xt=12,Ot=30,Rt=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function Ct(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const At=e=>{if(!e||!e.state)return kt;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,xt},Wt=e=>{if(!e||!e.state)return kt;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,At(e)},jt=(e,t)=>{let n;if(!e||!e.state)return kt;const i=e.state;return t<0?(n=0,t=-t):(n=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?kt:(null!==i.window&&i.wbits!==t&&(i.window=null),i.wrap=n,i.wbits=t,Wt(e))},Vt=(e,t)=>{if(!e)return kt;const n=new Ct;e.state=n,n.window=null;const i=jt(e,t);return i!==xt&&(e.state=null),i};let Ft,Ut,Lt=!0;const Pt=e=>{if(Lt){Ft=new Int32Array(512),Ut=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Et(1,e.lens,0,288,Ft,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Et(2,e.lens,0,32,Ut,0,e.work,{bits:5}),Lt=!1}e.lencode=Ft,e.lenbits=9,e.distcode=Ut,e.distbits=5},Kt=(e,t,n,i)=>{let r;const o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new Uint8Array(o.wsize)),i>=o.wsize?(o.window.set(t.subarray(n-o.wsize,n),0),o.wnext=0,o.whave=o.wsize):(r=o.wsize-o.wnext,r>i&&(r=i),o.window.set(t.subarray(n-i,n-i+r),o.wnext),(i-=r)?(o.window.set(t.subarray(n-i,n),0),o.wnext=i,o.whave=o.wsize):(o.wnext+=r,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=r))),0};var Gt={inflateReset:Wt,inflateReset2:jt,inflateResetKeep:At,inflateInit:e=>Vt(e,15),inflateInit2:Vt,inflate:(e,t)=>{let n,i,r,o,a,s,d,c,l,u,p,h,f,g,m,w,b,v,M,y,_,D,E=0;const T=new Uint8Array(4);let N,z;const x=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return kt;n=e.state,n.mode===Xt&&(n.mode=13),a=e.next_out,r=e.output,d=e.avail_out,o=e.next_in,i=e.input,s=e.avail_in,c=n.hold,l=n.bits,u=s,p=d,D=xt;e:for(;;)switch(n.mode){case 1:if(0===n.wrap){n.mode=13;break}for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(2&n.wrap&&35615===c){n.check=0,T[0]=255&c,T[1]=c>>>8&255,n.check=$(n.check,T,2,0),c=0,l=0,n.mode=2;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&c)<<8)+(c>>8))%31){e.msg="incorrect header check",n.mode=Ot;break}if((15&c)!==Ht){e.msg="unknown compression method",n.mode=Ot;break}if(c>>>=4,l-=4,_=8+(15&c),0===n.wbits)n.wbits=_;else if(_>n.wbits){e.msg="invalid window size",n.mode=Ot;break}n.dmax=1<<n.wbits,e.adler=n.check=1,n.mode=512&c?10:Xt,c=0,l=0;break;case 2:for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(n.flags=c,(255&n.flags)!==Ht){e.msg="unknown compression method",n.mode=Ot;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=Ot;break}n.head&&(n.head.text=c>>8&1),512&n.flags&&(T[0]=255&c,T[1]=c>>>8&255,n.check=$(n.check,T,2,0)),c=0,l=0,n.mode=3;case 3:for(;l<32;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.head&&(n.head.time=c),512&n.flags&&(T[0]=255&c,T[1]=c>>>8&255,T[2]=c>>>16&255,T[3]=c>>>24&255,n.check=$(n.check,T,4,0)),c=0,l=0,n.mode=4;case 4:for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.head&&(n.head.xflags=255&c,n.head.os=c>>8),512&n.flags&&(T[0]=255&c,T[1]=c>>>8&255,n.check=$(n.check,T,2,0)),c=0,l=0,n.mode=5;case 5:if(1024&n.flags){for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.length=c,n.head&&(n.head.extra_len=c),512&n.flags&&(T[0]=255&c,T[1]=c>>>8&255,n.check=$(n.check,T,2,0)),c=0,l=0}else n.head&&(n.head.extra=null);n.mode=6;case 6:if(1024&n.flags&&(h=n.length,h>s&&(h=s),h&&(n.head&&(_=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Uint8Array(n.head.extra_len)),n.head.extra.set(i.subarray(o,o+h),_)),512&n.flags&&(n.check=$(n.check,i,h,o)),s-=h,o+=h,n.length-=h),n.length))break e;n.length=0,n.mode=7;case 7:if(2048&n.flags){if(0===s)break e;h=0;do{_=i[o+h++],n.head&&_&&n.length<65536&&(n.head.name+=String.fromCharCode(_))}while(_&&h<s);if(512&n.flags&&(n.check=$(n.check,i,h,o)),s-=h,o+=h,_)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=8;case 8:if(4096&n.flags){if(0===s)break e;h=0;do{_=i[o+h++],n.head&&_&&n.length<65536&&(n.head.comment+=String.fromCharCode(_))}while(_&&h<s);if(512&n.flags&&(n.check=$(n.check,i,h,o)),s-=h,o+=h,_)break e}else n.head&&(n.head.comment=null);n.mode=9;case 9:if(512&n.flags){for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(c!==(65535&n.check)){e.msg="header crc mismatch",n.mode=Ot;break}c=0,l=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Xt;break;case 10:for(;l<32;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}e.adler=n.check=Rt(c),c=0,l=0,n.mode=11;case 11:if(0===n.havedict)return e.next_out=a,e.avail_out=d,e.next_in=o,e.avail_in=s,n.hold=c,n.bits=l,St;e.adler=n.check=1,n.mode=Xt;case Xt:if(t===Nt||t===zt)break e;case 13:if(n.last){c>>>=7&l,l-=7&l,n.mode=27;break}for(;l<3;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}switch(n.last=1&c,c>>>=1,l-=1,3&c){case 0:n.mode=14;break;case 1:if(Pt(n),n.mode=20,t===zt){c>>>=2,l-=2;break e}break;case 2:n.mode=17;break;case 3:e.msg="invalid block type",n.mode=Ot}c>>>=2,l-=2;break;case 14:for(c>>>=7&l,l-=7&l;l<32;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if((65535&c)!=(c>>>16^65535)){e.msg="invalid stored block lengths",n.mode=Ot;break}if(n.length=65535&c,c=0,l=0,n.mode=15,t===zt)break e;case 15:n.mode=16;case 16:if(h=n.length,h){if(h>s&&(h=s),h>d&&(h=d),0===h)break e;r.set(i.subarray(o,o+h),a),s-=h,o+=h,d-=h,a+=h,n.length-=h;break}n.mode=Xt;break;case 17:for(;l<14;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(n.nlen=257+(31&c),c>>>=5,l-=5,n.ndist=1+(31&c),c>>>=5,l-=5,n.ncode=4+(15&c),c>>>=4,l-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=Ot;break}n.have=0,n.mode=18;case 18:for(;n.have<n.ncode;){for(;l<3;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.lens[x[n.have++]]=7&c,c>>>=3,l-=3}for(;n.have<19;)n.lens[x[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,N={bits:n.lenbits},D=Et(0,n.lens,0,19,n.lencode,0,n.work,N),n.lenbits=N.bits,D){e.msg="invalid code lengths set",n.mode=Ot;break}n.have=0,n.mode=19;case 19:for(;n.have<n.nlen+n.ndist;){for(;E=n.lencode[c&(1<<n.lenbits)-1],m=E>>>24,w=E>>>16&255,b=65535&E,!(m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(b<16)c>>>=m,l-=m,n.lens[n.have++]=b;else{if(16===b){for(z=m+2;l<z;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(c>>>=m,l-=m,0===n.have){e.msg="invalid bit length repeat",n.mode=Ot;break}_=n.lens[n.have-1],h=3+(3&c),c>>>=2,l-=2}else if(17===b){for(z=m+3;l<z;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}c>>>=m,l-=m,_=0,h=3+(7&c),c>>>=3,l-=3}else{for(z=m+7;l<z;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}c>>>=m,l-=m,_=0,h=11+(127&c),c>>>=7,l-=7}if(n.have+h>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=Ot;break}for(;h--;)n.lens[n.have++]=_}}if(n.mode===Ot)break;if(0===n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=Ot;break}if(n.lenbits=9,N={bits:n.lenbits},D=Et(1,n.lens,0,n.nlen,n.lencode,0,n.work,N),n.lenbits=N.bits,D){e.msg="invalid literal/lengths set",n.mode=Ot;break}if(n.distbits=6,n.distcode=n.distdyn,N={bits:n.distbits},D=Et(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,N),n.distbits=N.bits,D){e.msg="invalid distances set",n.mode=Ot;break}if(n.mode=20,t===zt)break e;case 20:n.mode=21;case 21:if(s>=6&&d>=258){e.next_out=a,e.avail_out=d,e.next_in=o,e.avail_in=s,n.hold=c,n.bits=l,bt(e,p),a=e.next_out,r=e.output,d=e.avail_out,o=e.next_in,i=e.input,s=e.avail_in,c=n.hold,l=n.bits,n.mode===Xt&&(n.back=-1);break}for(n.back=0;E=n.lencode[c&(1<<n.lenbits)-1],m=E>>>24,w=E>>>16&255,b=65535&E,!(m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(w&&0==(240&w)){for(v=m,M=w,y=b;E=n.lencode[y+((c&(1<<v+M)-1)>>v)],m=E>>>24,w=E>>>16&255,b=65535&E,!(v+m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}c>>>=v,l-=v,n.back+=v}if(c>>>=m,l-=m,n.back+=m,n.length=b,0===w){n.mode=26;break}if(32&w){n.back=-1,n.mode=Xt;break}if(64&w){e.msg="invalid literal/length code",n.mode=Ot;break}n.extra=15&w,n.mode=22;case 22:if(n.extra){for(z=n.extra;l<z;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.length+=c&(1<<n.extra)-1,c>>>=n.extra,l-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=23;case 23:for(;E=n.distcode[c&(1<<n.distbits)-1],m=E>>>24,w=E>>>16&255,b=65535&E,!(m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(0==(240&w)){for(v=m,M=w,y=b;E=n.distcode[y+((c&(1<<v+M)-1)>>v)],m=E>>>24,w=E>>>16&255,b=65535&E,!(v+m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}c>>>=v,l-=v,n.back+=v}if(c>>>=m,l-=m,n.back+=m,64&w){e.msg="invalid distance code",n.mode=Ot;break}n.offset=b,n.extra=15&w,n.mode=24;case 24:if(n.extra){for(z=n.extra;l<z;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.offset+=c&(1<<n.extra)-1,c>>>=n.extra,l-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=Ot;break}n.mode=25;case 25:if(0===d)break e;if(h=p-d,n.offset>h){if(h=n.offset-h,h>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=Ot;break}h>n.wnext?(h-=n.wnext,f=n.wsize-h):f=n.wnext-h,h>n.length&&(h=n.length),g=n.window}else g=r,f=a-n.offset,h=n.length;h>d&&(h=d),d-=h,n.length-=h;do{r[a++]=g[f++]}while(--h);0===n.length&&(n.mode=21);break;case 26:if(0===d)break e;r[a++]=n.length,d--,n.mode=21;break;case 27:if(n.wrap){for(;l<32;){if(0===s)break e;s--,c|=i[o++]<<l,l+=8}if(p-=d,e.total_out+=p,n.total+=p,p&&(e.adler=n.check=n.flags?$(n.check,r,p,a-p):Q(n.check,r,p,a-p)),p=d,(n.flags?c:Rt(c))!==n.check){e.msg="incorrect data check",n.mode=Ot;break}c=0,l=0}n.mode=28;case 28:if(n.wrap&&n.flags){for(;l<32;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(c!==(4294967295&n.total)){e.msg="incorrect length check",n.mode=Ot;break}c=0,l=0}n.mode=29;case 29:D=Bt;break e;case Ot:D=Zt;break e;case 31:return It;default:return kt}return e.next_out=a,e.avail_out=d,e.next_in=o,e.avail_in=s,n.hold=c,n.bits=l,(n.wsize||p!==e.avail_out&&n.mode<Ot&&(n.mode<27||t!==Tt))&&Kt(e,e.output,e.next_out,p-e.avail_out),u-=e.avail_in,p-=e.avail_out,e.total_in+=u,e.total_out+=p,n.total+=p,n.wrap&&p&&(e.adler=n.check=n.flags?$(n.check,r,p,e.next_out-p):Q(n.check,r,p,e.next_out-p)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Xt?128:0)+(20===n.mode||15===n.mode?256:0),(0===u&&0===p||t===Tt)&&D===xt&&(D=Yt),D},inflateEnd:e=>{if(!e||!e.state)return kt;let t=e.state;return t.window&&(t.window=null),e.state=null,xt},inflateGetHeader:(e,t)=>{if(!e||!e.state)return kt;const n=e.state;return 0==(2&n.wrap)?kt:(n.head=t,t.done=!1,xt)},inflateSetDictionary:(e,t)=>{const n=t.length;let i,r,o;return e&&e.state?(i=e.state,0!==i.wrap&&11!==i.mode?kt:11===i.mode&&(r=1,r=Q(r,t,n,0),r!==i.check)?Zt:(o=Kt(e,t,n,n),o?(i.mode=31,It):(i.havedict=1,xt))):kt},inflateInfo:"pako inflate (from Nodeca project)"};var Jt=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const Qt=Object.prototype.toString,{Z_NO_FLUSH:qt,Z_FINISH:$t,Z_OK:en,Z_STREAM_END:tn,Z_NEED_DICT:nn,Z_STREAM_ERROR:rn,Z_DATA_ERROR:on,Z_MEM_ERROR:an}=te;function sn(e){this.options=Qe({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new rt,this.strm.avail_out=0;let n=Gt.inflateInit2(this.strm,t.windowBits);if(n!==en)throw new Error(ee[n]);if(this.header=new Jt,Gt.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=tt(t.dictionary):"[object ArrayBuffer]"===Qt.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=Gt.inflateSetDictionary(this.strm,t.dictionary),n!==en)))throw new Error(ee[n])}function dn(e,t){const n=new sn(t);if(n.push(e),n.err)throw n.msg||ee[n.err];return n.result}sn.prototype.push=function(e,t){const n=this.strm,i=this.options.chunkSize,r=this.options.dictionary;let o,a,s;if(this.ended)return!1;for(a=t===~~t?t:!0===t?$t:qt,"[object ArrayBuffer]"===Qt.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;){for(0===n.avail_out&&(n.output=new Uint8Array(i),n.next_out=0,n.avail_out=i),o=Gt.inflate(n,a),o===nn&&r&&(o=Gt.inflateSetDictionary(n,r),o===en?o=Gt.inflate(n,a):o===on&&(o=nn));n.avail_in>0&&o===tn&&n.state.wrap>0&&0!==e[n.next_in];)Gt.inflateReset(n),o=Gt.inflate(n,a);switch(o){case rn:case on:case nn:case an:return this.onEnd(o),this.ended=!0,!1}if(s=n.avail_out,n.next_out&&(0===n.avail_out||o===tn))if("string"===this.options.to){let e=it(n.output,n.next_out),t=n.next_out-e,r=nt(n.output,e);n.next_out=t,n.avail_out=i-t,t&&n.output.set(n.output.subarray(e,e+t),0),this.onData(r)}else this.onData(n.output.length===n.next_out?n.output:n.output.subarray(0,n.next_out));if(o!==en||0!==s){if(o===tn)return o=Gt.inflateEnd(this.strm),this.onEnd(o),this.ended=!0,!0;if(0===n.avail_in)break}}return!0},sn.prototype.onData=function(e){this.chunks.push(e)},sn.prototype.onEnd=function(e){e===en&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=qe(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var cn={Inflate:sn,inflate:dn,inflateRaw:function(e,t){return(t=t||{}).raw=!0,dn(e,t)},ungzip:dn,constants:te};const{Deflate:ln,deflate:un,deflateRaw:pn,gzip:hn}=wt,{Inflate:fn,inflate:gn,inflateRaw:mn,ungzip:wn}=cn;var bn={Deflate:ln,deflate:un,deflateRaw:pn,gzip:hn,Inflate:fn,inflate:gn,inflateRaw:mn,ungzip:wn,constants:te};const vn=new o.Z({prefix:"utf8: "});const Mn=function(e){try{if(window.TextEncoder)return new window.TextEncoder("utf-8").encode(e).buffer}catch(e){vn.debugf(null,"TextEncoder %o",e)}for(var t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length),i=0;i<t.length;i++)n[i]=t.charCodeAt(i);return n.buffer},yn=function(e){try{if(window.TextDecoder)return new window.TextDecoder("utf-8").decode(new Uint8Array(e))}catch(e){vn.debugf(null,"TextDecoder %o",e)}for(var t="",n=new Uint8Array(e),i=n.byteLength,r=0;r<i;r++)t+=String.fromCharCode(n[r]);return decodeURIComponent(escape(t))};var _n=__webpack_require__(616),Dn=new function(){var e="pid",t="nr",o=p(8,10);const a=_n.topmostAccessibleWindow.location.href;var s=n.Z.upoSettings.recoveryScriptVersion;let d;try{d=_n.topmostAccessibleWindow.__bt_intrnl.traceID}catch(e){d=""}var l=function(e,t){""==e&&(e="/");var n=e,i="?";(t=t||{}).upapi=["true"],t.tid=[d],t.cv=[s];for(var r=Object.keys(t),o=0;o<r.length;o++)for(var a=r[o],c=t[a],l=0;l<c.length;l++){var u=c[l];n+=i+encodeURIComponent(a)+"="+encodeURIComponent(u),i="&"}return n};this.sendLog=function(e){const t=n.Z.SharedObject.getItem("websiteConfig")||{},{organizationID:i,websiteID:r}=t,o={event:e.event,severity:e.severity,error:e.error&&{name:e.error.name,stack:e.error.stack,sourceFilename:e.error.sourceFilename},message:e.message,columnNumber:e.columnNumber,lineNumber:e.lineNumber,filename:e.filename,module:e.module,orgID:i,websiteID:r,meta:{...e.meta||{},pageURL:a}};var s={method:"POST",url:l("/log"),body:Mn(JSON.stringify(o))};return c.$fetch(s)},this.testCompliance=function(e){return new Promise((function(t,n){var i={};i.pid=[o],i.nr=["2"];var r=e,a=l("/tc",i),s=JSON.stringify(e);try{s&&s.length>=2048&&window.localStorage&&!window.localStorage.updebug?(r=bn.deflate(s).buffer,i.z=[1],a=l("/tc",i)):r=Mn(s)}catch(e){r=Mn(s)}var d={method:"POST",url:a,body:r};c.$fetch(d).then((function(e){var n=JSON.parse(yn(e.body)),i={};for(var r in n)n.hasOwnProperty(r)&&(i[r]={status:n[r].status,id:n[r].id,backup:n[r].backup});t(i)}),(function(e){n(new Error)}))}))},this.reportAuctionStarted=function(n,r,s,d,u,p,h,f){const g={[e]:[o],[t]:["1"]},m={websiteID:p,orgID:h,auctionID:n,spaceExternalID:r,spaceName:s,refreshDepth:f,pageURL:a};m.bids=u.map((e=>({bidderExternalID:e.bidderId,provider:e.provider}))),d&&(m.gamAdUnitPath=d),i.Y.fireEvent("auctionStartChangeRequestData",{query:g,body:m});const w={method:"POST",url:l("/as",g),body:Mn(JSON.stringify(m))};return c.$fetch(w)},this.reportAuctionEnd=function(n,r,s,d,u,p,h,f,g,m){const w={[e]:[o],seid:[h],[t]:["1"]},b={...p,websiteID:d,orgID:u,auctionID:n,spaceExternalID:r,spaceName:s,dfpAdUnit:h,adUnitCode:h,gamEnabled:g,refreshDepth:m,pageURL:a};f&&(b.gamAdUnitPath=f),i.Y.fireEvent("auctionEndChangeRequestData",{query:w,body:b});const v={method:"POST",url:l("/ae",w),body:Mn(JSON.stringify(b))};return c.$fetch(v)},this.reportRender=function(e,n,i,r,o,s,d,u,p,h,f){const g={[t]:["1"]},m={websiteID:p,orgID:h,auctionID:e,spaceExternalID:s,spaceName:d,bidderExternalID:n,...i,refreshDepth:f,pageURL:a,amount:r,currency:o};u&&(m.gamAdUnitPath=u);const w={method:"POST",url:l("/r",g),body:Mn(JSON.stringify(m))};return c.$fetch(w)},this.reportView=function(e,n,i,r,o,s,d,u,p){const h={[t]:["1"]},f={websiteID:d,orgID:u,auctionID:e,spaceExternalID:r,spaceName:o,bidderExternalID:n,...i,refreshDepth:p,pageURL:a};s&&(f.gamAdUnitPath=s);const g={method:"POST",url:l("/v",h),body:Mn(JSON.stringify(f))};return c.$fetch(g)},this.consentData=function(e){const t={},i={},d=[10,13,25,28,32,52,69,76,91,755],u={consents:{}},p=e.tcData,h=e.error,f=n.Z.SharedObject.getItem("websiteConfig")||{},{organizationID:g,websiteID:m}=f;g&&(t.organizationID=parseInt(g)),m&&(t.websiteID=parseInt(m)),t.pageID=o,t.clientVersion=s,p?(i.cmpVersion=p.cmpVersion,i.gdprApplies=p.gdprApplies,i.tcfPolicyVersion=p.tcfPolicyVersion,i.tcString=p.tcString,p.gdprApplies&&(i.purpose=p.purpose,d.forEach((e=>u.consents[e]=p.vendor.consents[e])),i.vendor=u)):(i.gdprApplies=null,i.error=r.Z.commonUtils.truncateString(h.message,1024)),t.tcData=i,t.pageURL=a;var w={method:"POST",url:l("/ce"),body:Mn(JSON.stringify(t))};return c.$fetch(w)}};const En=new o.Z({prefix:"report: "});var Tn=new function(){function e(e){const t={};return"relay"===e.bidderCode?(t.provider=n.Z.consts.btDemand.relay,t.demandBidder=e.rawBid.btBidderCode):"s2s"===e.rawBid.source?(t.provider=n.Z.consts.btDemand.snigel,t.demandBidder=e.bidderCode):t.provider=e.bidderCode,t}this.init=function(){const t=n.Z.SharedObject.getItem("websiteConfig");i.Y.addEventListener("FirePublisherEvent",(function(e){const{data:t}=e,{eventName:n}=t,i=t.payload||{bubbles:!1,cancelable:!1,detail:void 0};if(window.CustomEvent)try{const e=new window.CustomEvent(n,i);return void window.dispatchEvent(e)}catch(e){const t=document.createEvent("CustomEvent");return t.initCustomEvent(n,i.bubbles,i.cancelable,i.detail),void window.dispatchEvent(t)}const r=document.createEvent("CustomEvent");r.initCustomEvent(n,i.bubbles,i.cancelable,i.detail),window.dispatchEvent(r)})),i.Y.addEventListener("sendLog",(function(e){const t=e.data;Dn.sendLog(t).then((function(e){En.infof(null,"sendLog - %o",e)}),(function(e){En.errorf(null,"sendLog - %o",e)}))})),i.Y.addEventListener("onAuctionStarted",(function(e){var n,i;const r=e.data.auction,o=r.auctionId,a=r.unit.space.id,s=r.unit.space.templateSpaceName||r.unit.space.name,d=r.unit.gamAdUnitPath,c=null!==(n=null===(i=r.unit.space.prebidSettings)||void 0===i?void 0:i.bidders)&&void 0!==n?n:[],l=r.unit.space.dfpSettings,u=c.map((e=>({bidderId:e.id,provider:"relay"===e.name?"bt_server":e.name})));l&&(l.adxId&&u.push({bidderId:l.adxId,provider:"gad"}),l.directId&&u.push({bidderId:l.directId,provider:"direct"})),Dn.reportAuctionStarted(o,a,s,d,u,t.websiteID,t.organizationID,r.unit.countOfDispatches-1).then((function(e){En.infof(null,"onAuctionStarted - %o",e)}),(function(e){En.errorf(null,"onAuctionStarted - %o",e)}))})),i.Y.addEventListener("onAuctionEnded",(function(r){const o=r.data,a=o.auction,s=o.bid,d=a.bids,c=a.unit.space.templateSpaceName||a.unit.space.name,l=a.unit.gamAdUnitPath;let u=a.unit.space.name;const p="default-creative"===s.bidder&&s.disableAuctionEventLogging;try{if(t.dfpEnabled){const e=window.googletag.pubads().getSlots();for(let t=0;t<e.length;t++){const n=e[t],i=n.getSlotElementId();if(document.getElementById(i)===a.unit.element){u=n.getAdUnitPath().split("/")[n.getAdUnitPath().split("/").length-1];break}}}}catch(e){En.errorf(null,"onAuctionEnded: %o",e)}const h={bids:[],aliens:[],win:void 0};for(let t=0;t<d.length;t++){var f;const r=d[t],o={bid:{cpm:r.cpm,bidderCode:r.bidderCode,complianceStatus:r.complianceStatus}},a=i.Y.fireEvent("bidCpmAdjustment",o)||1,c=r.cpm/1e3*a,l=n.Z.upoSettings.prebidTimeout,p={bidderExternalID:r.bidderId,...e(r),amount:c,complianceStatus:r.complianceStatus,timeout:l,latency:r.timeToRespond,requestStatus:"OK",creativeID:r.contentIdHash,adUnit:u,adSize:String(r.width)+"x"+String(r.height),adID:r.adId,currency:r.currency,gamIteration:r.gamIteration};if(null!==(f=r.additionalBidsToRender[0])&&void 0!==f&&f.prebidTemplateType&&(p.prebidTemplateType=r.additionalBidsToRender[0].prebidTemplateType),r!==s)switch(p.complianceStatus){case n.Z.consts.complianceStatus.COMPLIANT:case n.Z.consts.complianceStatus.INCOMPLIANT:h.bids.push(p);break;default:h.aliens.push(p)}else h.win=p}if(p){const e={sendToServer:!0,event:"Default Creative",meta:{adUnitCode:u,aliens:h.aliens,auctionID:a.auctionId,bids:h.bids,dfpAdUnit:u,gamEnabled:t.dfpEnabled,orgID:t.organizationID,pageURL:_n.topmostAccessibleWindow.location.href,refreshDepth:a.unit.countOfDispatches-1,spaceExternalID:a.unit.space.id,spaceName:c,websiteID:t.websiteID,win:h.win}};En.infof(null,"Default Creative, auction ID -> ",a.auctionId||"N/A",e)}else Dn.reportAuctionEnd(a.auctionId,a.unit.space.id,c,t.websiteID,t.organizationID,h,u,l,t.dfpEnabled,a.unit.countOfDispatches-1).then((function(e){En.infof(null,"onAuctionEnded - %o",e)}),(function(e){En.errorf(null,"onAuctionEnded - %o",e)}))})),i.Y.addEventListener("onAuctionRendered",(function(n){const r=n.data,o=r.auction,a=r.bid,s=o.unit.space.templateSpaceName||o.unit.space.name;if(!("default-creative"===a.bidder&&a.disableAuctionEventLogging)){const n={bid:{cpm:a.cpm,bidderCode:a.bidderCode,complianceStatus:a.complianceStatus}},r=i.Y.fireEvent("bidCpmAdjustment",n)||1,d=a.cpm/1e3*r;Dn.reportRender(o.auctionId,a.bidderId,e(a),d,a.currency,o.unit.space.id,s,o.unit.gamAdUnitPath,t.websiteID,t.organizationID,o.unit.countOfDispatches-1).then((function(e){En.infof(null,"onAuctionRendered - %o",e)}),(function(e){En.errorf(null,"onAuctionRendered - %o",e)}))}})),i.Y.addEventListener("onAdViewed",(function(n){const i=n.data,r=i.auction,o=i.bid,a=r.unit.space.templateSpaceName||r.unit.space.name;"default-creative"===o.bidder&&o.disableAuctionEventLogging||Dn.reportView(r.auctionId,o.bidderId,e(o),r.unit.space.id,a,r.unit.gamAdUnitPath,t.websiteID,t.organizationID,r.unit.countOfDispatches-1).then((function(e){En.infof(null,"onAdViewed - %o",e)}),(function(e){En.errorf(null,"onAdViewed - %o",e)}))}))},i.Y.addEventListener("consentData",(function(e){const t=e.data;Dn.consentData(t).then((function(e){En.infof(null,"consentData - %o",e)}),(function(e){En.errorf(null,"consentData - %o",e)}))}))};const Nn=new o.Z({prefix:"verifications: "});const zn={Report:Tn,Verifications:new function(){this.run=function(){r(),e()};var e=function(){i.Y.addEventListener("getRestrictionSettingsEnded",(function(e){var t=i.Y.fireEvent("acceptableAbTest");if(t){var n="//static.criteo.net/images/pixel.gif?ch=1&upapi=true";t&&(n=t.src);var r=new Image;r.addEventListener("load",(function(){t.callback(!0)}),!1),r.addEventListener("error",(function(){t.callback(!1)}),!1),r.src=n}}))},t=!1,r=function(){i.Y.addEventListener("getRestrictionSettingsEnded",(function(e){var r=e.data;r.contentRestriction&&r.acceptableAds&&(window.pbjs=window.pbjs||{},window.pbjs.que=window.pbjs.que||[],window.pbjs.que.push((function(){window.pbjs.onEvent("bidResponse",(function(e){if(!t&&e&&e.length>0)for(var r=0;r<e.length;r++)if(e[r].cpm>0&&"emx_digital"!==e[r].bidder&&"districtmDMX"!==e[r].bidder){t=!0,i.Y.fireEvent("disableStopFlag")||(_n.topmostAccessibleWindow.__bt_intrnl.stopFlag=!0);var o=n.Z.SharedObject.getItem("renderedUnits"),a={adBlockDetectionType:n.Z.SharedObject.getItem("adBlockDetectionType"),stopedProcess:!o||0==o.length};const e={sendToServer:!0,event:"pbjsDetected",meta:a,sendPercentage:1};Nn.noticef(null,"pub's pbjs was detected -> ",a,e)}if(e){var s={cpm:e.cpm?e.cpm:0,creativeLength:e.ad?e.ad.length:0,bidderCode:e.bidderCode||"",adUnitCode:e.adUnitCode||""};const t={sendToServer:!0,event:"pbjsBidReceived",meta:s};Nn.noticef(null,"pub's pbjs bid was received -> ",s,t)}}))})))}))}}};var xn=__webpack_require__(17);function Bn(e){for(var t=e.length,n=5381,i=52711;t--;){var r=e.charCodeAt(t);n=33*n^r,i=33*i^r}return 4096*(n>>>0)+(i>>>0)}const Sn=function(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"bidder_";const r=i+Bn(e+"_".concat(t,"_")+JSON.stringify(n).trim());return r.substr(0,500)};function kn(){return i.Y.hasEventListener("enableRelayAdapter")||i.Y.hasEventListener("snigelAdapterConfiguration")||i.Y.hasEventListener("addBTDemand")}function Zn(e){const{relayBidderParams:t}=i.Y.fireEvent("enableRelayAdapter",{spaceName:e.name})||{},n=e.prebidSettings.bidders.find((e=>"relay"===e.name));if(t&&!n){const n={name:"relay",id:Sn(e.id,"relay",t,xn.v.btDemand.btDemandPrefix),params:t};e.prebidSettings.bidders.push(n),e.prebidSettings.enabled=!0}}function In(e){const{adUnitStoredRequestId:t}=i.Y.fireEvent("snigelAdapterConfiguration",{spaceName:e.name})||{};if(t){const n={name:xn.v.btDemand.snigel,id:Sn(e.id,"snigel",t,xn.v.btDemand.btDemandPrefix)};e.prebidSettings.bidders.push(n),e.prebidSettings.enabled=!0}}function Yn(e){const t=i.Y.fireEvent("addBTDemand",{space:e});if(t)for(const n in t)if(t.hasOwnProperty(n)){e.prebidSettings.bidders.find((e=>e.name===n))||(e.prebidSettings.bidders.push({name:n,id:Sn(e.id,n,e,xn.v.btDemand.btDemandPrefix),params:t[n]}),e.prebidSettings.enabled=!0)}}var Hn=__webpack_require__(586);const Xn=new o.Z({prefix:"moveElementPosition: "});var On=new function(){var e=[],t=[];this.setMovePositionRules=function(t){e=t||[]},this.dispatch=function(i){try{if(!e||e.length<=0)return;if(!(i=i.filter((e=>t.indexOf(e)<0)))||i.length<=0)return;var r=function(o,a){if(!(o>a)){for(var s=0;s<i.length;s++){for(var d=i[s],c=[],l=0;l<e.length;l++){var u=e[l];n(u,{space:d})&&(t.push(d),u.stayLive||c.push(u))}e=c.length>0?e.filter((e=>c.indexOf(e)<0)):e}e.length>0&&setTimeout((function(){r(o+1,a)}),100)}};r(0,20)}catch(e){Xn.errorf(null,"error in `movePositionService` `dispatch` function: %o",e)}};var n=function(e,t){var n=e.elementToMove(t),i=e.relativeElement(t);return!(!n||!i||n.__upo_moved)&&(r.Z.ElementInsertion.insertElement(n,i,e.htmlElementInsertionType),n.__upo_moved=!0,!0)}},Rn=__webpack_require__(143),Cn=__webpack_require__(905);const An=new o.Z({prefix:"whitelistingIFrame: "});const Wn="BT_WHITELISTING_IFRAME_ACCESS";function jn(){if("firefox"===(0,Cn.Xh)())return Promise.resolve(Rn.W)}function Vn(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Rn.I.whitelistingIFrameSettings.publisherDomainWhitelistingIFrameCandidates,t=jn();if(!t){const n=i.Y.fireEvent("customWhitelistingIFrameURL"),r=i.Y.fireEvent("keepBTDomainWhitelistingIFrame");t=n?Promise.resolve(n):r?Promise.resolve(null):Fn(e,0)}return t.then((e=>{Rn.I.whitelistingIFrameSettings.defaultWhitelistingIFrameURL=e||Rn.I.whitelistingIFrameSettings.defaultWhitelistingIFrameURL,An.infof(null,"Finished setupWhitelistingIFrameSettings: %o",Rn.I.whitelistingIFrameSettings)})),t}function Fn(e,t){const n=e[t];return n?new Promise((i=>{const o=n.src,a=n.acceptHTMLType,s=r.Z.addAcceptableParam(o),d=new window.XMLHttpRequest;d.open("GET",s),d.addEventListener("load",(n=>{try{if(!d.status.toString().startsWith("4")&&d.responseURL==="".concat(_n.topmostAccessibleWindow.location.origin).concat(s)&&function(e){const t=e.getResponseHeader("x-frame-options");if(t&&"deny"===t.toLowerCase())return!1;const n=e.getResponseHeader("content-security-policy"),i=n&&n.split(","),r=i&&i.find((e=>e.startsWith("frame-ancestors")))&&r.split(" ");return!(r&&!r.some((e=>e===_n.topmostAccessibleWindow.location.origin)))}(d)&&(a||!(0,_n.isFileHTML)(d)))return void function(e){try{let t=_n.topmostAccessibleWindow.localStorage.getItem(Wn);if(t=t&&JSON.parse(t),t&&void 0!==t.canAccess&&t.expiration&&t.url&&t.version&&Date.now()<t.expiration&&t.url===e&&"1"===t.version)return Promise.resolve(t.canAccess)}catch(e){An.noticef(null,"whitelisting flawed cached value structure")}return new Promise((t=>{const n=document.createElement("iframe");n.src=e;const i=()=>{n.removeEventListener("load",i);let r=!1;n.contentDocument&&(r=!0),t(r);const o={canAccess:r,url:e,expiration:Date.now()+6048e5,version:"1"};_n.topmostAccessibleWindow.localStorage.setItem(Wn,JSON.stringify(o)),n.parentElement.removeChild(n)};n.addEventListener("load",i),n.style.setProperty("visibility","hidden"),document.body.appendChild(n)}))}(s).then((e=>{i(e?s:null)}));Fn(e,t+1).then((e=>i(e)))}catch(n){Fn(e,t+1).then((e=>i(e)))}})),d.addEventListener("error",(n=>{Fn(e,t+1).then((e=>i(e)))})),d.send()})):Promise.resolve(null)}function Un(e){const t=!!e,n=e||Rn.I.whitelistingIFrameSettings.defaultWhitelistingIFrameURL,i=n===Rn.W;var r=document.createElement("iframe"),o=function(){if(this.removeEventListener("load",o),i||t||this.contentDocument||(Rn.I.whitelistingIFrameSettings.defaultWhitelistingIFrameURL=Rn.W,_n.topmostAccessibleWindow.localStorage.removeItem(Wn),this.src=Rn.I.whitelistingIFrameSettings.defaultWhitelistingIFrameURL),n.includes("about:blank"))try{!function(e){var t=e.contentWindow,n=function(e){return 0===e.indexOf("//")&&(e=_n.topmostAccessibleWindow.location.protocol+e),e};const i=function(e,t){if(e&&""===e.src&&e.outerHTML){const i=new RegExp(t+'="([^"]+)"',"g").exec(e.outerHTML);i&&i[1]&&(e[t]=n(i[1]))}};var r=t.XMLHttpRequest.prototype.open;t.XMLHttpRequest.prototype.open=function(){try{var e=Array.prototype.slice.call(arguments);e[1]=n(e[1])}catch(e){An.errorf(null,"error in XHRHttpRequest.open hook: %o",e)}return r.apply(this,e)};var o=t.open;t.open=function(){try{var e=Array.prototype.slice.call(arguments);e[0]=n(e[0])}catch(e){An.errorf(null,"error in `window.open` hook: %o",e)}return o.apply(this,e)};const a=function(e){return function(){try{var t=Array.prototype.slice.call(arguments);["SCRIPT","IFRAME"].indexOf(t[0].tagName)>-1&&i(t[0],"src"),"LINK"===t[0].tagName&&i(t[0],"href")}catch(e){An.errorf(null,"error in `hookOnFunc`: %o",e)}return e.apply(this,t)}},s=t.HTMLElement.prototype.insertBefore;t.HTMLElement.prototype.insertBefore=a(s);const d=t.HTMLElement.prototype.appendChild;t.HTMLElement.prototype.appendChild=a(d);var c=t.HTMLElement.prototype.__lookupGetter__("innerHTML"),l=t.HTMLElement.prototype.__lookupSetter__("innerHTML");t.HTMLElement.prototype.__defineSetter__("innerHTML",(function(){try{var e=Array.prototype.slice.call(arguments),t=l.apply(this,e),n=this.firstChild;i(n,"src")}catch(e){An.errorf(null,'error in HTMLElement "innerHTML" property setter hook: %o',e)}return t})),t.HTMLElement.prototype.__defineGetter__("innerHTML",(function(){try{return c.apply(this)}catch(e){An.errorf(null,'error in HTMLElement "innerHTML" property getter hook: %o',e)}}));for(var u=xn.v.htmlElements,p=0;p<u.length;p++)t[u[p]]&&function(e){var t=e.prototype,i="src",r=t.__lookupGetter__(i),o=t.__lookupSetter__(i);r&&(t.__defineSetter__(i,(function(){try{var e=Array.prototype.slice.call(arguments);e[0]=n(e[0])}catch(e){An.errorf(null,'error in <html> "src" attribute setter hook: %o',e)}return o.apply(this,e)})),t.__defineGetter__(i,(function(){try{return r.apply(this)}catch(e){An.errorf(null,'error in <html> "src" attribute getter hook: %o',e)}})))}(t[u[p]])}(this)}catch(e){An.errorf(null,"error calling `addAboutBlankHooks` in `createWhitelistingIFrame`: %o",e)}};return r.addEventListener("load",o),r.src=n,r}const Ln={btDemandService:e,commonBLUtils:Hn,movePositionService:On,whitelistingIFrame:t},Pn=new o.Z({prefix:"utils: "});function Kn(e,t){if(i.Y.fireEvent("omitBTAdLabel",{unit:e}))return;const{element:n}=e,r=n.querySelector(".default-creative-container")||n.querySelector(".ahover")||n.querySelector('[id^="google_ads_iframe_"]'),o="upo-label",a=!(!r||!r.querySelector(".".concat(o)));if(!r||a)return;const s=function(e,t,n){const i=document.createElement("div");return i.className=e,i.setAttribute("style","text-align:left;padding:0px;margin:0px;position:absolute;top:0;left:0;z-index:10000;transition:opacity 1s ease-out;opacity:0;cursor:pointer;"),window.setTimeout((function(){i.style.opacity="1"}),2e3),i.innerHTML='<span style="display:block;background:rgba(255, 255, 255, 0.7);height:fit-content;width:fit-content;top:0;left:0;color:#444;font-size:10px;font-weight:bold;font-family:sans-serif;line-height:normal;text-decoration:none;margin:0px;padding:6px;border-radius:0 0 5px 0;">&#65;&#68;</span>',i.addEventListener("click",(()=>{if(!document.getElementById("bt_blocklist-confirmation_".concat(i.parentElement.parentElement.id))){const e=document.createElement("div");e.setAttribute("id","bt_blocklist-confirmation_".concat(i.parentElement.parentElement.id)),e.setAttribute("style","left:50%;top:50%;transform: translate(-50%, -50%);position:absolute;background:rgba(255, 255, 255, 0.9);height:fit-content;width:fit-content;border-radius:5px 5px 5px 5px;padding:8px;line-height:normal !important;");const r=document.createElement("p");r.innerHTML="Report this ad as animated",r.setAttribute("style","text-align:center;font-size:14px;font-family:sans-serif;color:#444;"),e.appendChild(r);const o=document.createElement("button");o.classList.add("bt_blocklist_cancel_btn"),o.setAttribute("style","font-size:12px;padding:1px;float:right;font-family:sans-serif;cursor:pointer;"),o.innerHTML="Cancel",o.addEventListener("click",(e=>i.parentElement.removeChild(e.target.parentElement))),e.appendChild(o);const a=document.createElement("button");a.classList.add("bt_blocklist_confirmation_btn"),a.setAttribute("style","font-size:12px;margin-right:2px;padding:1px;float:right;font-family:sans-serif;cursor:pointer;"),a.innerHTML="Confirm",a.addEventListener("click",(e=>{const r=document.querySelector('[src="'.concat(Rn.W,'"][style*="display: none !important;"]'));i.parentElement.removeChild(e.target.parentElement),t.element.classList.add("up-hide"),t.element.classList.remove("up-show");const o=n.contentIdHash||n.creativeId;if(!o){const e={sendPercentage:100,sendToServer:!0,meta:{SSP:n.bidder},event:"Blocked creative without id"};Pn.errorf(null,"Blocked creative without contentIdHash or creativeId from %o",[n.bidder],e)}if(r&&o){const e=n.contentIdHash?"contentIdHash":"creativeId";r.contentWindow.postMessage({message:"Set Blocklist Creative",creativeId:o},"https://".concat(Rn.I.staticDomain));const t={sendPercentage:100,sendToServer:!0,meta:{creativeId:o,idType:e},event:"Blocked animated creative"};Pn.infof(null,"Blocked animated creative with %o %o",[e,o],t)}})),e.appendChild(a),i.parentElement.appendChild(e)}})),i}(o,e,t);r.appendChild(s),e.adLabelElement=s}const Gn=new o.Z({prefix:"auction: "});var Jn=function(e){var t=!1,o=new r.Z.SubscriptionLayer;this.auctionId=p(8,9),this.unit=e.unit,this.state=Jn.States.UNOFFERED,this.creationTime=new Date,this.lastUpdate=this.creationTime,this.bids=[],this.subscribeForEvent=function(e,t){o.subscribeForEvent(e,t)},this.cancelAuction=function(){t=!0,a(this)},this.getWinningBid=function(){for(var e=void 0,t=0;t<this.bids.length;t++){var i=this.bids[t];(!e||i.cpm>e.cpm)&&i.complianceStatus===n.Z.consts.complianceStatus.COMPLIANT&&(e=i)}return e},this.addBids=function(e){if(e)for(var t=0;t<e.length;t++){var n=e[t];this.bids.push(n)}};this.getComplianceBids=function(){for(var e=[],t=0;t<this.bids.length;t++){var i=this.bids[t];i.complianceStatus===n.Z.consts.complianceStatus.COMPLIANT&&e.push(i)}return e},this.renderWinningBid=function(){var e=this.getWinningBid();this.renderBid(e)};var a=function(e){e.bids.forEach((e=>{e.cancelBid()}))};function s(e){return new Promise(((t,n)=>{window.setTimeout((function(){try{e&&"none"===window.getComputedStyle(e).display&&e.style.setProperty("display","block","important"),t()}catch(e){n(e)}}),1e3)}))}this.renderBid=function(e){try{if(i.Y.fireEvent("renderBidInElementStarted",{element:this.unit&&this.unit.element}),this.state=Jn.States.DONE,function(){if(!document.getElementById("bt-render-styles")){var e=document.createElement("style");e.id="bt-render-styles",e.type="text/css",e.textContent=".up-hide { display: none !important; }",e.textContent+='.ahover + [id^="google_ads_iframe_"] { width: 1px !important; height:1px !important; display: grid !important; }',(document.head||document.body||document.documentElement).appendChild(e)}}(),function(e,t){for(var n=0;n<e.bids.length;n++){var i=e.bids[n];i!==t&&i.cancelBid()}}(this,e),!e||t||!r.Z.commonUtils.isElementInBody(this.unit.element))return this.unit.currentBid||((c=this.unit).element.classList.add("up-hide"),c.element.classList.remove("up-show")),e&&e.cancelBid(),void o.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!1});{this.unit.cleanup(),d(this.unit.element),function(e,t){e.element.classList.add("up-show"),e.element.classList.remove("up-hide")}(this.unit),this.unit.element._adData_=e,e.onRenderedEvent(function(){!function(e,t,n){var i=e.querySelector(".default-creative-container")||e.querySelector(".ahover")||e.querySelector('[id^="google_ads_iframe_"]');i.style.position||i.style.setProperty("position","relative");if(i.style.setProperty("width","max-content","important"),["sharethrough","triplelift"].indexOf(t.bidderCode)>=0){var r=t.width,o=function(e){var t=e.sizes,n=0;return t.forEach((e=>{var t=e.split("x")[0];(t=parseInt(t))>n&&(n=t)})),n}(n);(r>o||r<120)&&(r=o),i.style.setProperty("max-width",r+"px","important")}i.style.setProperty("z-index",0),i.style.setProperty("margin","0 auto"),i.style.setProperty("display","block")}(this.unit.element,e,this.unit.space),Kn(this.unit,e),function(e){return new Promise(((t,n)=>{try{if(i.Y.fireEvent("skipEnsureElementVisibility",{unit:e}))t();else{const i=e.element;i.classList.contains("up-show")||i.classList.add("up-show"),Promise.all([s(i),s(i.parentElement),s(i.parentElement.parentElement)]).then(t).catch(n)}}catch(e){n(e)}}))}(this.unit).then((()=>{!function(e){if(0===e.offsetWidth&&0===e.offsetHeight){const t={sendToServer:!0,sendPercentage:1,event:"ad-unit-hidden-by-css",meta:{elementId:e.id||"N/A"}};Gn.infof(null,"detectAndLogHiddenAdUnit, element ID -> ",e.id||"N/A",t)}}(this.unit.element)})).catch((e=>{Gn.errorf(null,"bid.onRenderedEvent: ensureElementVisibility/detectAndLogHiddenAdUnit: %o",e)})),o.invokeEventCallbacks("auctionRendered",e),this.unit.rendered(e),n.Z.SharedObject.getItem("renderedUnits")||n.Z.SharedObject.setItem("renderedUnits",[]),n.Z.SharedObject.getItem("renderedUnits").push(this.unit)}.bind(this));var a={placement:this.unit.element};const t=e.additionalBidsToRender&&e.additionalBidsToRender.length>0&&e.additionalBidsToRender[0];t?(t.onRenderedEvent((()=>e.renderBid(a))),t.renderBid()):e.renderBid(a),o.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!0})}}catch(e){Gn.errorf(null,"renderBid err:%o",e)}var c};var d=function(e){e.style.removeProperty("background-image"),e.style.removeProperty("background-repeat")}};Jn.States={UNOFFERED:0,DISPATCHED:1,DONE:3};var Qn=function(e,t,n,i,r,o,a,s){this.bidId=p(16,24),this.ad=e.ad,this.adId=e.adId,this.adUrl=e.adUrl,this.bidderId=e.bidderId,this.bidder=e.bidder,this.bidderCode=e.bidderCode,this.contentIdHash=e.contentIdHash,this.currency=e.currency,this.creativeId=e.creativeId,this.c=e.c,this.cpm=e.cpm,this.complianceStatus=e.complianceStatus||0,this.disableAuctionEventLogging=e.disableAuctionEventLogging,this.height=e.height,this.isBackupCreative=e.isBackupCreative,this.timeToRespond=e.timeToRespond,this.size=e.size,this.width=e.width,this.rawBid=t,this.type=n,this.status=Qn.Status.LIVE,this.additionalBidsToRender=[],this.renderBid=r,this.cancelBid=function(){this.status!==Qn.Status.CANCELED&&(this.status=Qn.Status.CANCELED,o&&o(),this.additionalBidsToRender.forEach((e=>e.cancelBid())))},this.getGPTTargeting=function(e){return i&&i.call(this,e)},this.onRenderedEvent=a||function(){},this.makeEntryForTestCompliance=s||function(){}};Qn.Types={EMPTY:0,PREBID:1,RTK:2,ADX:3,ADX_TEXT:4,DFP_PREBID:5,ADSENSE:6,DIRECT:7,SMART_AS:8,DEFAULT_CREATIVE:9},Qn.Status={LIVE:0,CANCELED:1},Qn.PrebidTemplateTypes={RENDER_AD:"renderAd",APSTAG:"apstag",HB_ADID:"hb_adid",UC_TAG_DATA:"ucTagData",DISTRICTM_ADSLOT:"districtm_adslot"};var qn=function(e){this.unitID=p(16,24),this.element=e.element,this.space=e.space,this.state=e.state||qn.States.PENDING,this.gamAdUnitPath,this.currentBid,this.countOfDispatches=0,this.countOfRenders=0,this.lastInvokeTime,this.cleanup=function(){var e=this.element.children,n=[];for(let i=0;i<e.length;i++)n.push(t(e[i]));for(let e=0;e<n.length;e++)n[e]()},this.rendered=function(e){this.currentBid=e};var t=function(e){return function(){e&&e.parentNode&&e.parentNode.removeChild(e)}}};qn.States={PENDING:0,CHECKING:1,DISPATCHED:2};const $n={Auction:Jn,Bid:Qn,Space:function(e){var t,n,r,o;if(this.id=e.id,this.name=e.name,this.templateSpaceName=e.templateSpaceName,this.staging=e.staging,this.deviceType=e.deviceType,this.selector={position:e.selector.position,value:e.selector.value},this.sizes=e.sizes,this.prebidSettings={enabled:null!==(t=null===(n=e.prebidSettings)||void 0===n?void 0:n.enabled)&&void 0!==t&&t,bidders:(null!==(r=null===(o=e.prebidSettings)||void 0===o?void 0:o.bidders)&&void 0!==r?r:[]).filter((e=>e.id&&e.name&&e.params)).map((e=>{let{name:t,id:n,params:i}=e;return{name:t,id:n,params:i}}))},Zn(this),In(this),Yn(this),this.dfpSettings={enabled:!1},e.dfpSettings&&e.dfpSettings.enabled){this.dfpSettings={adxId:e.dfpSettings.adxId,directId:e.dfpSettings.directId,enabled:e.dfpSettings.enabled,order:[]};for(let t of e.dfpSettings.order)i.Y.fireEvent("removeAdServerRequestIteration",{iterationConfig:t})||this.dfpSettings.order.push({params:{keyValues:t.params.keyValues||{},queryParams:t.params.queryParams||{}},adx:{bidderID:t.adx.bidderID,testCompliance:t.adx.testCompliance},direct:{bidderID:t.direct.bidderID}})}},Unit:qn};function ei(e){const t=Cn.tq();switch(e){case"mobile":return t;case"desktop":return!t;default:return!0}}function ti(e){let{string:t,condition:n,candidates:i=[]}=e;if(1===i.length)switch(n){case"equals":case"equalsOneOf":return t===i[0];case"startsWith":case"endsWith":case"includes":return t[n](i[0]);case"startsWithOneOf":case"endsWithOneOf":case"includesOneOf":{const e=n.split("OneOf")[0];return t[e](i[0])}}else if(i.length>1)switch(n){case"equalsOneOf":return i.includes(t);case"startsWithOneOf":case"endsWithOneOf":case"includesOneOf":{const e=n.split("OneOf")[0];return i.some((n=>t[e](n)))}}}const ni={addBTDemand:{hookName:"addBTDemand",handler:e=>{let{btDemandConfig:t={}}=e;return t}},enableAmazon:{hookName:"amazonBidderConfiguration",handler:e=>{let{amazonConfig:t={},pubID:n,keepHbPb:i=!1}=e;const{amazonCPMCurrency:r="USD",amazonCPMChart:o}=t;return window.upo_amzn={amazonCPMCurrency:r,amazonCPMChart:o},{pubID:n,keepHbPb:i}}},enableLegacySizesReplacer:{hookName:"enableLegacySizesReplacer",handler:e=>e},enableRelay:{hookName:"enableRelayAdapter",handler:e=>{let{relayConfig:t={},sid:n}=e;return{relayBidderParams:{...t},sid:n}}},enableSnigel:{hookName:"snigelAdapterConfiguration",handler:(e,t)=>{var n;let{snigelConfig:i={},websiteStoredRequestId:r}=e;const o=(null==t||null===(n=t.data)||void 0===n?void 0:n.spaceName)||"",a={websiteStoredRequestId:r,adUnitStoredRequestId:null};return a.adUnitStoredRequestId=i[o],a}},hideDOMElementsViaCSS:{parseSettingValue:e=>{const{org:t=[],website:n=[],websiteOverridesOrg:i}=e;return i?n:[...t,...n]},handler:e=>{const t=[];if(e.forEach((e=>{let{whenDevice:n,selectors:i}=e;ei(n)&&t.push(...i)})),t.length>0){const e=document.createElement("style");e.textContent="".concat(t.join(", ")," { display: none !important; }"),(document.head||document.body||document.documentElement).appendChild(e)}}},insertCustomCSS:{parseSettingValue:e=>{const{org:t=[],website:n=[],websiteOverridesOrg:i}=e;return i?n:[...t,...n]},handler:e=>{let t="";if(e.forEach((e=>{let{whenDevice:n,customCSS:i=""}=e;ei(n)&&(t="".concat(t,"\n").concat(i))})),""!==t){const e=document.createElement("style");e.textContent=t,(document.head||document.body||document.documentElement).appendChild(e)}}},prebidConfig:{hookName:"prebidDoneInit",parseSettingValue:e=>{const{org:t={},website:n={},websiteOverridesOrg:i}=e;return i?n:{...t,...n}},handler:(e,t)=>{const n=e,i=t.data.cpbjs;i.que.push((function(){i.setConfig(n)}))}},prebidTimeout:{hookName:"prebidTimeout",handler:e=>e},priceFloor:{hookName:"priceFloor",handler:(e,t)=>{const n=t.data.cpbjs,{currency:i="USD",priceFloor:r}=e;r&&n.que.push((()=>{n.setConfig({floors:{enforcement:{floorDeals:!0},data:{currency:i,schema:{fields:["mediaType"]},values:{banner:r}}}})}))}},removeSizes:{hookName:"sizesToRemoveBySpace",parseSettingValue:e=>{const{org:t={},website:n={},websiteOverridesOrg:i}=e,{forAllSpaces:r=[],forSpaces:o=[]}=t,{forAllSpaces:a=[],forSpaces:s=[]}=n;return{forAllSpaces:i?a:[...r,...a],forSpaces:i?s:[...o,...s]}},handler:(e,t)=>{let{forAllSpaces:n,forSpaces:i}=e;const r=t.data.spaceName,o=t.hookFileData||[],a=new Set(o);return n.forEach((e=>{let{whenDevice:t,sizes:n=[]}=e;ei(t)&&n.forEach((e=>{a.add(e)}))})),i.forEach((e=>{let{name:t,nameList:n,whenName:i,whenDevice:o,sizes:s=[]}=e;ei(o)&&ti({string:r,condition:i,candidates:t?[t]:n})&&s.forEach((e=>{a.add(e)}))})),[...a].map((e=>{if("fluid"===e)return"fluid";{let t,n;return"string"==typeof e?[t,n]=e.split("x").map((e=>parseInt(e,10))):"object"==typeof e&&(t=e.width,n=e.height),isNaN(t)||isNaN(n)?null:{width:t,height:n}}})).filter((e=>null!==e))}},rewriteGAMSlots:{hookName:"rewriteGAMSlots",handler:(e,t)=>{let n,{rewritePathMethod:i,rewritePathData:r}=e;switch(i){case"insertBTAdUnit":{const{btUnitName:e,insertionDepth:t,maxDepth:i}=r||{};t&&(n=n=>{let r=n.getAdUnitPath();"/"!==r[0]&&(r="/".concat(r));const o=e||"Blockthrough";let a=r.split("/");a.splice(t,0,o),i&&i>0&&(a=a.slice(0,i+1));return a.join("/")});break}}if(n)return{parseSlotAdUnitPath:n,shouldCopyTargeting:!0}}},scrapeGoogletagSlots:{hookName:"scrapeGoogletagSlots",parseSettingValue:e=>{const{org:t={},website:n={},websiteOverridesOrg:i}=e;if(i)return n;{const e={},{slots:i}=t.filterOut||{},{slots:r}=n.filterOut||{};return(i||r)&&(e.filterOut={},e.filterOut.slots=i&&r?[...i,...r]:i||r),e}},handler:(e,t)=>{let{dontScrape:n,filterOut:i}=e;const r=t.data&&t.data.slot;let o=!0;if(n||!r)o=!1;else{const e=i&&i.slots;if(e&&e.length>0){o=!e.some((e=>{let{divId:t,divIdList:n,whenDivId:i,whenDevice:o}=e;return ei(o)&&ti({string:r.getSlotElementId(),condition:i,candidates:t?[t]:n})}))}}return o}},scrapePrebid:{hookName:"scrapePrebidAdUnits",parseSettingValue:e=>{const{org:t={},website:n={},websiteOverridesOrg:i}=e;if(i)return n;{const e={};e.adUnitsVar=t.adUnitsVar||n.adUnitsVar;const{removeBidders:i}=t.parse||{},{removeBidders:r}=n.parse||{};(i||r)&&(e.parse={},e.parse.removeBidders=i&&r?{forAllAdUnits:[...i.forAllAdUnits||[],...r.forAllAdUnits||[]],forAdUnits:[...i.forAdUnits||[],...r.forAdUnits||[]]}:i||r);const{adUnits:o}=t.filterOut||{},{adUnits:a}=n.filterOut||{};return(o||a)&&(e.filterOut={},e.filterOut.adUnits=o&&a?[...o,...a]:o||a),e}},handler:(e,t)=>{let n,{dontScrape:i,adUnitsVar:o,parse:a,filterOut:s}=e;if(i)n=!1;else{if(n=t.hookFileData||{},o&&(n.getAdUnits=()=>r.Z.commonUtils.extractVariableFromString(window,o)),a){const e=a.removeBidders?function(){let{forAllAdUnits:e=[],forAdUnits:t=[]}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(e.length>0||t.length>0)return n=>{const i=[];return e.forEach((e=>{let{whenDevice:t,bidders:n=[]}=e;ei(t)&&i.push.apply(i,n)})),t.forEach((e=>{let{code:t,codeList:r,whenCode:o,whenDevice:a,bidders:s=[]}=e;const d=t?[t]:r;ei(a)&&ti({string:n.code,condition:o,candidates:d})&&i.push.apply(i,s)})),n.bids=n.bids.filter((e=>{let{bidder:t}=e;return!i.includes(t)})),n}}(a.removeBidders):null,t=n.parseAdUnit;e&&(n.parseAdUnit=t?n=>e(t(n)):e)}if(s){const e=s.adUnits?(d=s.adUnits,e=>d.some((t=>{let{code:n,codeList:i,whenCode:r,whenDevice:o}=t;return ei(o)&&ti({string:e.code,condition:r,candidates:n?[n]:i})}))):null,t=n.filterOutAdUnit;e&&(n.filterOutAdUnit=t?n=>t(n)||e(n):e)}}var d;return n}}},ii=new o.Z({prefix:"scriptsettings: "}),ri=ni,oi={"prebidConfig__org":{"_enabled":true,"value":{"enableSendAllBids":false,"syncsPerBidder":20}},"removeSizes__org":{"_enabled":true,"value":{"forAllSpaces":[{"sizes":["970x250"],"whenDevice":"any"}],"forSpaces":[]}},"scrapePrebid__org":{"_enabled":true,"value":{"adUnitsVar":"","filterOut":{"adUnits":[{"code":"_adhesion","whenCode":"includes","whenDevice":"any"}]},"parse":{"removeBidders":{"forAdUnits":[{"bidders":["gumgum"],"codeList":["_adhesion","_sticky"],"whenCode":"endsWithOneOf","whenDevice":"any"}]}}}}},ai=Object.entries(oi).reduce(((e,t)=>{let[n,i]=t;if(i._enabled)if(n.endsWith("__org")){const t=n.split("__org")[0];e[t]=e[t]||{},e[t].org=i.value}else if(n.endsWith("__website")){const t=n.split("__website")[0];e[t]=e[t]||{},e[t].websiteOverridesOrg=!!i._overrides_org,e[t].website=i.value}else e[n]=i.value;return e}),{});const si={rawSettings:oi,parsed:ai},di=new o.Z({prefix:"domutils.location"});const ci=new o.Z({prefix:"domutils.pageVisibility"});function li(){try{let t;const n=r.Z.commonUtils.debounce((e=>{if("document.hidden"===e&&t)t=!1,window.dispatchEvent(new Event("onUserLeftPage"));else if("focus"===e){if(void 0===t)return void(t=!0);t||(t=!0,dispatchEvent(new Event("onUserReturnedToPage")))}}),420);document.addEventListener("visibilitychange",(()=>{document.hidden&&n("document.hidden")})),e=()=>{n("focus")},window.addEventListener("focus",(function(t){e()}))}catch(e){ci.errorf(null,"setupPageVisibilityChangeEvents - error: %o",e)}var e}function ui(e){if("complete"===document.readyState||"loaded"===document.readyState||"interactive"===document.readyState)e();else{var t=!1;document.addEventListener("DOMContentLoaded",(function(){t||(t=!0,e())}),!1),window.addEventListener("load",(function(){t||(t=!0,e())}))}}function pi(e){window.addEventListener("scroll",(function(t){e()}))}const hi=new o.Z({prefix:"Hooks: "});var fi=new function(){this.Types={XHR_OPEN_PRE:"xhropenpre",FETCH_PRE:"fetchpre",REMOVE_CHILD_PRE:"removechildpre",INSERT_BEFORE_PRE:"insertbeforepre",APPEND_CHILD_PRE:"appendchildpre",APPEND_CHILD_POST:"appendchildpost",IMG_SET_ATTRIBUTE_PRE:"imgsetattributepre",SET_ATTRIBUTE_PRE:"setattributepre",WIN_OPEN_PRE:"winopenpre",HTML_SRC_PROP_PRE:"htmlsrcproppre",HTML_ELEMENT_INNERHTML_PRE:"htmlelementinnerhtmlpre",HTML_ELEMENT_INNERHTML_POST:"htmlelementinnerhtmlpost",HTML_ELEMENT_HAS_CHILD_NODES_PRE:"htmlelementhaschildnodespre",HTML_ELEMENT_TEXTCONTENT_PRE:"htmlelementtextcontentpre"};var e=["xhrThwartOpen","fetchThwartOpen"];this.hookFunction=function(t,n,r,o,a){var s=t[n];s&&(t[n]=function(){var t=Array.prototype.slice.call(arguments);if(_n.topmostAccessibleWindow.__bt_intrnl.stopFlag)return s.apply(this,t);if(r)try{const e=i.Y.fireEvent(r,t,this);if(null!=e)return e}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}const n=s.apply(this,t);if(o)try{i.Y.fireEvent(o,n,this)}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}return n})},this.hookPropertySetter=function(t,n,r,o,a){var s=t.__lookupGetter__(n),d=t.__lookupSetter__(n);s&&(t.__defineSetter__(n,(function(){var t=Array.prototype.slice.call(arguments);if(_n.topmostAccessibleWindow.__bt_intrnl.stopFlag)return d.apply(this,t);if(r)try{const e=i.Y.fireEvent(r,t,this);if(null!=e)return e}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}const n=d.apply(this,t);if(o)try{i.Y.fireEvent(o,n,this)}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}return n})),t.__defineGetter__(n,(function(){try{return s.apply(this)}catch(e){hi.errorf(null,"error in `hookPropertySetter` object getter hook: %o",e)}})))},this.addEventListener=function(e,t){i.Y.addEventListener(e,t)}};const gi=new o.Z({prefix:"testCompliance: "});var mi=new function(){this.init=function(){i.Y.addEventListener("onAuctionGroupStarted",(function(e){gi.infof(null,"onAuctionGroupStarted: %o",e)})),i.Y.addEventListener("onAuctionGroupEnded",(function(e){gi.infof(null,"onAuctionGroupEnded: %o",e)})),i.Y.addEventListener("onAuctionStarted",(function(e){gi.infof(null,"onAuctionStarted: %o",e)})),i.Y.addEventListener("onAuctionEnded",(function(e){gi.infof(null,"onAuctionEnded: %o",e)})),i.Y.addEventListener("onPrebiddingStarted",(function(e){gi.infof(null,"onPrebiddingStarted: %o",e)})),i.Y.addEventListener("onPrebiddingEnded",(function(e){gi.infof(null,"onPrebiddingEnded: %o",e)})),i.Y.addEventListener("onPostbiddingStarted",(function(e){gi.infof(null,"onPostbiddingStarted: %o",e)})),i.Y.addEventListener("onPostbiddingEnded",(function(e){gi.infof(null,"onPostbiddingEnded: %o",e)})),i.Y.addEventListener("onAuctionBidResponse",(function(e){gi.infof(null,"onAuctionBidResponse: %o",e)})),i.Y.addEventListener("onNewUnitFound",(function(e){gi.infof(null,"onNewUnitFound: %o",e)}))}},wi=__webpack_require__(96),bi=__webpack_require__.n(wi);const vi=function(e){return e.filter(((t,n)=>{const i=JSON.stringify(t);return n===e.findIndex((e=>JSON.stringify(e)===i))}))},Mi=new o.Z({prefix:"adUnitParser: "});function yi(e,t,n){var i=window.googletag.defineSlot(e,t,n);return i&&i.addService(window.googletag.pubads()),i}function _i(e){if(e){var t=i.Y.fireEvent("rewriteGAMSlots")||i.Y.fireEvent("GAMSpecialAdUnit");if(t&&t.parseSlotAdUnitPath&&!e._is_rewritten_slot){var n=e.getSlotElementId(),r=e.getSizes();r=function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n];i&&i.getWidth&&i.getHeight?t.push([i.getWidth(),i.getHeight()]):i&&"fluid"===i&&t.push("fluid")}return t}(r);try{var o=t.parseSlotAdUnitPath(e);if(t.shouldSkipDestroySlot&&t.shouldSkipDestroySlot(e,o)||function(e){var t=e.getSlotElementId();window.googletag.destroySlots([e]);const n=document.getElementById(t),i=n&&n.querySelector("div[id^='google_ads_iframe_']");n&&i&&n.removeChild(i)}(e),!o)return;var a=yi(o,r,n);return a&&(a._is_rewritten_slot=!0,t.shouldCopyTargeting&&function(e,t){var n=e.getTargetingMap();for(var i in n)if(n.hasOwnProperty(i)){var r=n[i][0];t.setTargeting(i,r)}}(e,a),t.postSlotCreation&&t.postSlotCreation(a)),a}catch(e){Mi.errorf(null,"error redefining GAM slot (e.g. for SAU or BT AdX unit)",e)}}}}const Di=new function(){let e=[];const t={},n={};this.set=function(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=i;Array.isArray(r)||(r=[r]);for(let i=0;i<r.length;i++){const o=r[i],a=!o.deviceType||o.deviceType===Cn.yC||o.deviceType===Cn.l7();o&&a&&(e.push(o),t[o.name]=t[o.name]||[],t[o.name].push(o),n[o.id]=n[o.id]||[],n[o.id].push(o))}return e},this.getSpacesByName=function(e){return t[e]||[]},this.getSpacesByID=function(e){return n[e]||[]},this.getAll=()=>e,this.remove=function(i){e=e.filter((e=>e!=i));const r=n[i.id].indexOf(i);r>=0&&n[i.id].splice(r,1);const o=t[i.name].indexOf(i);o>=0&&t[i.name].splice(o,1)}},Ei=new o.Z({prefix:"visibility: "});var Ti=new Map,Ni=new Map;function zi(e){const t=e.getBoundingClientRect(),n=function(){let e,t,n=window,i=[];for(;n!==window.top;){e=n.parent;for(let r of e.document.getElementsByTagName("iframe"))r.contentWindow===n&&(t=r.getBoundingClientRect(),i.push({x:t.x,y:t.y}));n=e}return i.reduce(((e,t)=>({x:e.x+t.x,y:e.y+t.y})),{x:0,y:0})}();try{return window.top.document.hasFocus()&&t.top+t.height/2+n.y>0&&t.left+t.width/2+n.x>0&&t.top+t.height/2+n.y<(window.top.innerHeight||window.top.document.documentElement.clientHeight)&&t.left+t.width/2+n.x<(window.top.innerWidth||window.top.document.documentElement.clientWidth)}catch(e){Zi(e)}}async function xi(e,t,n){const i=await Bi((()=>zi(e)?{stopIterations:!1}:{stopIterations:!0}),10,100);r.Z.commonUtils.isElementInBody(e)||n(),i&&t()}async function Bi(e,t,n){if(!t)return!0;const{stopIterations:i}=e();return!i&&new Promise((i=>{setTimeout((()=>{i(Bi(e,t-1,n))}),n)}))}function Si(){Ti.forEach(((e,t)=>{let[n,i]=e;xi(t,n,i)}))}try{window.top.addEventListener("scroll",(()=>{Si()})),window.top.addEventListener("focus",(()=>{Si()}))}catch(Se){Zi(Se)}function ki(e){let t,{selector:i,id:r,element:o,useIABDefinition:a}=e;if(!o)try{if(i)o=document.querySelector(i);else{if(!r)throw new Error("No selector, id, or element provided.");o=document.getElementById(r)}if(!o)throw new Error("Could not find element on page with id/selector provided.")}catch(e){return Ei.warningf(null,"getElementVisibility - selector: `%o`, id: `%o` - error: %o",[i,r,e]),n.Z.consts.elementVisibility.NOT_FOUND}if(a)t=zi(o)?n.Z.consts.elementVisibility.VISIBLE:n.Z.consts.elementVisibility.HIDDEN;else{let e,i,r;"none"===window.getComputedStyle(o).display&&(i=o.style.getPropertyValue("display"),r=o.style.getPropertyPriority("display"),o.style.setProperty("display","block","important"),e=!0);const a=function(e){var t,n;if(e)return(n=e.getBoundingClientRect()).width||n.height?(t=document.documentElement,{top:n.top+window.pageYOffset-t.clientTop,left:n.left+window.pageXOffset-t.clientLeft}):n}(o),s=document.documentElement.scrollLeft||window.scrollX,d=document.documentElement.scrollTop||window.scrollY,c=window.innerHeight,l=window.innerWidth,u=o.offsetHeight,p=o.offsetWidth;t=a.left>=s&&a.top>=d&&p+a.left<=s+l&&u+a.top<=d+c||(a.left<=s&&a.left+p>s||a.left>=s&&a.left<=s+l)&&(a.top<=d&&a.top+u>d||a.top>=d&&a.top<=d+c)?n.Z.consts.elementVisibility.VISIBLE:n.Z.consts.elementVisibility.HIDDEN,e&&o.style.setProperty("display",i,r)}return t}function Zi(e){const t={sendToServer:!0,event:"noViewabilityFromCrossDomainIframe",sendPercentage:1,meta:{error:e}};Ei.warningf(null,"noViewabilityFromCrossDomainIframe","N/A",t)}const Ii=function(){let e,t;this.fate="unresolved",this.state="pending",this.promise=new Promise((function(n,i){e=n,t=i})),this.promise.then((e=>(this.state="fulfilled",e)),(e=>(this.state="rejected",e))),this.resolve=function(t){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved",e(t)},this.reject=function(e){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved",t(e)}},Yi=new o.Z({prefix:"prebidAdapter: "});var Hi=new function(){var e=!1,t={},o={},a=new r.Z.SubscriptionLayer;this.subscribeForEvent=function(e,t){a.subscribeForEvent(e,t)},this.dispatch=function(r){try{e||(e=!0,t=n.Z.cpbjs,m(),i.Y.fireEvent("wrapPrebidRequestBids")&&b());var o={};r.forEach((e=>{o[e.spaceName]={hbAdUnit:e,deferred:new Ii}}));var d=function(e){return e.map((e=>{const{websiteStoredRequestId:t,adUnitStoredRequestId:n}=i.Y.fireEvent("snigelAdapterConfiguration",{spaceName:e.spaceName})||{},r=c(e),o=[];e.biddersSettings.forEach((e=>{const t={bidder:e.name,params:e.params};o.push(t)}));const a={code:e.spaceName,bids:o,sizes:r,mediaTypes:{banner:{sizes:r}}};return t&&n&&(a.ortb2Imp={ext:{prebid:{storedrequest:{id:n}}}}),a}))}(r);s(),function(e,t){for(let n=0;n<e.length;n++){let i=t.find((t=>t.code===e[n].spaceName)),r=[];i.bids.forEach((e=>{r.push(e.bidder)}));const o={sendToServer:!0,sendPercentage:1,event:"prebid-size-filtering",meta:{spaceName:e[n].spaceName,auctionId:e[n].auctionId,sizesBeforeFiltering:e[n].sizes,sizesAfterFiltering:i.sizes,biddersNames:r}};Yi.infof(null,"logAdUnitSizesPrebid, spaceName -> ",e[n].spaceName,o)}}(r,d),t.requestBids({adUnits:d,bidsBackHandler:function(e){try{for(var t in o)if(o.hasOwnProperty(t)){var n=o[t],i=n.hbAdUnit;if(e){var r=e[t],s=[];if(r){var c=d.find((e=>e.code===t)).sizes;r.bids=p(r.bids,c),s=h(r.bids,n.hbAdUnit)}var l={auctionId:i.auctionId,bids:s};n.deferred.resolve(l),s.forEach((e=>{const t={auctionId:i.auctionId,bid:e};a.invokeEventCallbacks("bidReceived",t)}))}else{var u={auctionId:i.auctionId,bids:[]};n.deferred.resolve(u)}}}catch(e){Yi.errorf(null,"dispatch: bidsBackHandler: - %o",e)}}});var l=[];for(var u in o)if(o.hasOwnProperty(u)){var f=o[u];l.push(f.deferred.promise)}return l}catch(e){Yi.errorf(null,"dispatch: - %o",e)}};var s=function(){if(t.bidderSettings&&t.bidderSettings.standard&&t.bidderSettings.standard.adserverTargeting){const e=!!t.bidderSettings.standard.adserverTargeting.find((e=>"hb_pb_org"===e.key)),n=!!t.bidderSettings.standard.adserverTargeting.find((e=>"hb_pb"===e.key));!e&&n&&t.bidderSettings.standard.adserverTargeting.push({key:"hb_pb_org",val:function(e){var n=t.getConfig().priceGranularity;return"auto"===n?e.pbAg:"dense"===n?e.pbDg:"low"===n?e.pbLg:"medium"===n?e.pbMg:"high"===n?e.pbHg:"custom"===n?e.pbCg:e.pbHg}})}},d=function(e){var t=e.split("x");if(2!==t.length)throw new Error;var n=parseInt(t[0]),i=parseInt(t[1]);if(isNaN(n)||isNaN(i))throw new Error;return{width:n,height:i}},c=function(e){for(var t=[],n=0;n<e.sizes.length;n++){var o=d(e.sizes[n]),a=o.width,s=o.height;t.push({width:a,height:s})}var c=i.Y.fireEvent("sizesToReplaceBySpace",{spaceName:e.spaceName});c&&(t=t.map((e=>{var t=c.find((t=>t.size.width===e.width&&t.size.height===e.height));return t?{width:t.replacement.width,height:t.replacement.height}:e})));const l=googletag&&googletag.pubads&&googletag.pubads().getSlots()||[],u=e.element&&e.element.getAttribute("id")||e.spaceName,p=l.find((e=>e.getSlotElementId()===u));var h=i.Y.fireEvent("sizesToRemoveBySpace",{spaceName:e.spaceName,slot:p});h&&(t=t.filter((e=>!h.some((t=>t.width===e.width&&t.height===e.height)))));var f=r.Z.sizesRemover(e.element,t);return f=f.filter((e=>!!e)).map((e=>[e.width,e.height]))};var l=function(e,t){if(e.ad&&e.ad.indexOf(atob("c2VydmluZy1zeXMuY29t"))>-1&&e.ad.indexOf(atob("QnVyc3RpbmdQaXBlL2FkU2VydmVyLmJz"))>-1){var i=atob("PHNjcmlwdD53aW5kb3cuZWJDZmcgPSB7fTt3aW5kb3cuZWJDZmdfXyA9IHt9O3dpbmRvdy5fX2RlZmluZUdldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7cmV0dXJuIHdpbmRvdy5lYkNmZ19fO30pO3dpbmRvdy5fX2RlZmluZVNldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7YS5hZEh0bWxQYXRoPScnO3JldHVybiB3aW5kb3cuZWJDZmdfXz1hO30pOzwvc2NyaXB0Pg==");e.ad.indexOf("<body>")>-1?e.ad=e.ad.replace("<body>",i):e.ad=i+e.ad}"amazon"===e.bidder&&(e=function(e){try{var t=JSON.parse(e.adTargeting);for(var i in t.amzniid=e.adId,t)e.adserverTargeting[i]=t[i];e.ad=e.adHtml;try{!n.Z.upoSettings.amazonBidderConfiguration.keepHbPb&&delete e.adserverTargeting.hb_pb}catch(e){Yi.errorf(null,"changeAmazonBid - deleting hb_pb - %o",e)}delete e.adUrl}catch(e){Yi.errorf(null,"changeAmazonBid - %o",e)}return e}(e)),e.bidder&&"smartadserver"===e.bidder&&(e.bidder="smart"),e.btBidderCode&&("index"===e.btBidderCode?e.btBidderCode="ix":"magnite"===e.btBidderCode&&(e.btBidderCode="rubicon")),e.bidder&&("triplelift"===e.bidder&&e.ad&&e.ad.indexOf("render_options_bm")>-1||"sharethrough"===e.bidder)&&(e.width=u(t)),e.ad&&e.cpm&&e.ad.replace(/\$\{AUCTION_PRICE\}/g,e.cpm),e.ad&&e.currency&&e.ad.replace(/\$\{AUCTION_CURRENCY\}/g,e.currency)},u=function(e){for(var t=c(e),n=0,i=0;i<t.length;i++){var r=t[i][0];r>n&&(n=r)}return n};const p=(e,t)=>e.filter((e=>t.some((t=>e.width===t[0]&&e.height===t[1]))));var h=function(e,a){const s=e.map((e=>{if(e.bidderId=function(e,t){const i=t.biddersSettings.find((t=>{const i="s2s"===e.source?n.Z.consts.btDemand.snigel:e.bidderCode;return t.name===i}));if(i)return i.id}(e,a),e.bidderId){l(e,a),o[e.adId]=new Ii;var r={ad:e.ad,adId:e.adId,adUrl:e.adUrl,bidderId:e.bidderId,bidder:e.bidder,bidderCode:e.bidderCode,currency:e.currency,creativeId:g(e),cpm:e.cpm,complianceStatus:0,height:e.height,timeToRespond:e.timeToRespond,size:e.size,width:e.width},s=new $n.Bid(r,e,$n.Bid.Types.PREBID,(function(n){var r=n.complianceBidsInAuction.length>0?n.complianceBidsInAuction.map((e=>e.rawBid&&e.rawBid)):void 0,o=e.adUnitCode,a=t.getAdserverTargeting(o,r)[o];return""===a.hb_pb&&a.hb_pb_org&&(a.hb_pb=a.hb_pb_org),a=i.Y.fireEvent("customAdserverTargeting",{adServerTargeting:a})||a}),(function(e){try{w(this);var t=e.placement;v(t,this)}catch(e){Yi.errorf(null,"renderBid - %o",e)}}),void 0,function(e){this.renderedDeferred.promise.then((function(){e()}))}.bind({renderedDeferred:o[e.adId]}),(function(){return f(this)}));return s}Yi.errorf(null,"dispatch: bidsBackHandler: - No corresponding bidderSettings found in ad unit: %o for Prebid auction response bid: %o",[a,e])}));return s.filter((e=>!r.Z.commonUtils.isNil(e)))};var f=function(e){var t={bidderExternalID:e.bidderId,markup:e.ad,url:e.adUrl,hint:{provider:e.bidderCode,uid:e.creativeId},width:parseInt(e.width),height:parseInt(e.height)};if("underdogmedia"===e.bidderCode&&(t.hintID=t.hintID+"_"+e.width+"_"+e.height),"gumgum"===e.bidderCode&&e.creative&&(t.markup=e.creative),"komoona"===e.bidderCode)try{var n=0,i=JSON.parse(unescape(e.ad.split('"creative_data":"')[1].split('","')[0]));for(var r in i.hdbd_data.hbbids){var o=i.hdbd_data.hbbids[r];o.cpm>n&&(n=o.cpm,t.markup=o.creative_data.creative)}}catch(e){Yi.errorf(null,'innerMakeEntryForTestCompliance - handling "komoona" bid - %o',e)}return e.ad&&e.ad.indexOf("https://googleads.g.doubleclick.net/pagead/adfetch?client=ca-pub-")>-1&&(t.url="https://googleads.g.doubleclick.net/pagead/adfetch"+e.ad.split("https://googleads.g.doubleclick.net/pagead/adfetch")[1].split("&rfl=")[0],t.markup=""),t},g=function(e){return"komoona"===e.bidder||"criteo"===e.bidder||"consumable"===e.bidder?null:e.c?String(e.c):e.adid&&"0"!==e.adid?String(e.adid):e.crid&&"0"!==e.crid?String(e.crid):e.creativeId&&"0"!==e.creativeId?String(e.creativeId):e.creative_id&&"0"!==e.creative_id?String(e.creative_id):null},m=function(){t.onEvent("bidWon",(function(e){o[e.adId].resolve()}))},w=function(e){var t=e.rawBid;t&&t.bidder&&(i.Y.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsRender",payload:{detail:t}}),i.Y.fireEvent("FirePublisherEvent",{eventName:"uponitRender",payload:{detail:t}}))},b=function(){var e=window.pbjs||window.jitaJS;if(e&&e.requestBids){var t=e.requestBids;e.requestBids=function(e){for(var n=[],r=e&&e.adUnits,o=0;o<r.length;o++)n.push(r[o].code);if(a.invokeEventCallbacks("refresh",n),!i.Y.fireEvent("skipOriginalRequestBidsFunction"))return t.apply(this,arguments)}}},v=function(e,n){var i=y(),r=i.container,o=i.iframe,a=function(){try{o.removeEventListener("load",a);var e=o.src===Rn.W;o.style.setProperty("visibility",""),e||(o.contentWindow.document.documentElement.innerHTML="<html><body></body></html>");var i=!e&&o.contentWindow.document,r=Cn.Xh();"sharethrough"===n.bidder&&window.setTimeout((function(){for(var e=document.querySelectorAll(".str-thumbnail"),t=0;t<e.length;t++){var n=e[t].style.backgroundImage;!n||-1!==n.indexOf("upapi")||-1!==n.indexOf("criteo.net")||-1!==n.indexOf("imgix.net")&&-1!==n.indexOf(".gif")?n.indexOf("imgix.net")>-1&&n.indexOf(".gif")>-1&&(n.indexOf("?")>-1?e[t].style.backgroundImage=n.replace('")','&adunit=true")'):e[t].style.backgroundImage=n.replace('")','?adunit=true")')):n.indexOf("?")>-1?e[t].style.backgroundImage=n.replace('")','&upapi=true")'):e[t].style.backgroundImage=n.replace('")','?upapi=true")')}}),3e3),"edge"===r&&(n.rawBid.ad=n.rawBid.ad.replace(/\.html[?#]/,".html?upapi=true&"),n.rawBid.ad=n.rawBid.ad.replace(/\.html%23/,".html%23upapi=true%26"),window.setTimeout((function(){if(e){o.contentWindow.postMessage({type:"eval",code:"try { var styleSheets = document.styleSheets; for (var i = 0; i < styleSheets.length; i++) { if (styleSheets[i].cssText && styleSheets[i].cssText.indexOf(\"a[href^='http://ads2.williamhill.com/redirect.aspx?']\") > -1) { styleSheets[i].cssText = ''; } } } catch (e) { }"},"*")}else try{for(var t=i.styleSheets,n=0;n<t.length;n++)t[n].cssText&&t[n].cssText.indexOf("a[href^='http://ads2.williamhill.com/redirect.aspx?']")>-1&&(t[n].cssText="")}catch(e){Yi.errorf(null,"innerRenderBid - `onLoad` Edge browser patch - %o",e)}}),3e3)),window.setTimeout((function(){var a="edge"===r||"ie"===r;if(a||M(n,o,e),e){var s='window.parent.postMessage(JSON.stringify({ adId: "'+n.adId+'", message: "Prebid Request" }), "*");';o.contentWindow.postMessage({type:"eval",code:s},"*")}else t.renderAd(i,n.adId);a&&M(n,o,e)}),0),o.style.width=n.width+"px",o.style.height=n.height+"px"}catch(e){Yi.errorf(null,"renderBid - %o",e)}};o.addEventListener("load",a),e.insertBefore(r,e.children[0])};function M(e,t,i){if(!1!==e.isBackupCreative)if(i)t.contentWindow.postMessage({type:"eval",code:n.Z.backupCreativeScriptForPostMessage},"*");else try{t.contentWindow.eval(atob(n.Z.backupCreativeScript))}catch(e){Yi.errorf(null,"evalBackupCreativeScript: - %o",e)}}var y=function(){var e=document.createElement("div");e.className="ahover";var t=Ln.whitelistingIFrame.createWhitelistingIFrame();return t.style.width="1px",t.style.height="1px",t.style.border="0px",t.setAttribute("marginwidth","0"),t.setAttribute("marginheight","0"),t.scrolling="no",e.appendChild(t),{container:e,iframe:t}}};const Xi=new o.Z({prefix:"testCompliance: "});var Oi=!1;try{Oi=_n.topmostAccessibleWindow.location.href&&_n.topmostAccessibleWindow.location.href.indexOf("bt_tc=false")>=0||"false"===_n.topmostAccessibleWindow.localStorage.getItem("bt_tc")}catch(Se){Xi.errorf(null,"testComplianceDisabled: %o",Se)}function Ri(e,t){return r.Z.sizeValidation.isUnacceptable(e.unit.element,{width:t.width,height:t.height})}function Ci(e,t,n,i){const r={sendToServer:!0,sendPercentage:1,event:"client_tc_applied",meta:{client_tc_type:i,auctionID:t,bidderID:n.bidderId}};Xi.noticef(null,e,n,r)}function Ai(e,t){var r;let o=n.Z.consts.complianceStatus.UNKNOWN;const a=i.Y.fireEvent("customComplianceCheck",{bid:e}),s=e.contentIdHash||e.creativeId;return null!==(r=n.Z.SharedObject.getItem("creativesIdBlocklist"))&&void 0!==r&&r.includes(s)?o=n.Z.consts.complianceStatus.INCOMPLIANT:Oi?(o=n.Z.consts.complianceStatus.COMPLIANT,Xi.debugf(null,"compliance is disabled for the current bid: ",e)):a?(o=a,Ci("custom hook file tc check: ",t.auctionId,e,"custom_hook_file_tc_check")):Ri(t,e)&&(o=n.Z.consts.complianceStatus.INCOMPLIANT,Ci("bid with unacceptance size: ",t.auctionId,e,"bid_with_unacceptance_size")),o}function Wi(e){var t={},i={};const r=n.Z.SharedObject.getItem("websiteConfig"),o=r.websiteID,a=r.organizationID;var s={};if(e.forEach((e=>{var r=e.auction,o=e.bids;s[r.auctionId]=s[r.auctionId]||{};for(var a=0;a<o.length;a++){var d=o[a];const e=Ai(d,r);if(e==n.Z.consts.complianceStatus.UNKNOWN){s[r.auctionId][d.bidId]={bid:d,result:{}};var c=d.makeEntryForTestCompliance();c.auctionID=r.auctionId,c.spaceExternalID=r.unit.space.id,c.spaceName=r.unit.space.name,c.refreshDepth=r.unit.countOfDispatches-1;var l=parseFloat(d.cpm);c.cpm=isNaN(l)?0:l,ji(c);var u=p(5,8);t[u]=c,i[u]=d}else s[r.auctionId][d.bidId]={bid:d,result:{status:e,backup:!1}}}})),Object.keys(t).length<=0){for(var d in s)if(s.hasOwnProperty(d)){var c=s[d];for(var l in c)if(c.hasOwnProperty(l)){var u=c[l];s[d][l]=u.result}}return Promise.resolve(s)}let h;try{h=(new Intl.DateTimeFormat).resolvedOptions()}catch(e){h={locale:void 0,timeZone:void 0}}const f={domain:_n.topmostAccessibleWindow.location.host,websiteID:o,orgID:a,bids:t,locale:h.locale,timezone:h.timeZone,pageURL:_n.topmostAccessibleWindow.location.href};return Dn.testCompliance(f).then((function(e){for(var r in e){var o;if(!e.hasOwnProperty(r))continue;const l=t[r].auctionID;var a=s[l],d=i[r],c=a[d.bidId];c.result.status=e[r].status,c.result.bidContentIdHash=e[r].id,c.result.backup=e[r].backup||"true"===_n.topmostAccessibleWindow.localStorage.getItem("bt_force_backup_creative");const u=null!==(o=n.Z.SharedObject.getItem("creativesIdBlocklist"))&&void 0!==o?o:[];(u.includes(e[r].id)||u.includes(d.creativeId))&&(c.result.status=n.Z.consts.complianceStatus.INCOMPLIANT)}for(const e in s)if(s.hasOwnProperty(e)){var l=s[e];for(var u in l)if(l.hasOwnProperty(u)){var p=l[u];s[e][u]=p.result}}return s}))}function ji(e){if(e.markup&&e.markup.indexOf("://secure.ace.advertising.com/")>-1)try{var t="https://secure.ace.advertising.com/site="+e.markup.split("Site: '")[1].split("'")[0]+"/size="+e.markup.split("Size: '")[1].split("'")[0]+"/rip="+e.markup.split("/rip=")[1].split("/")[0];t&&(e.markup='\x3c!-- "'+t+'"--\x3e'+e.markup)}catch(e){Xi.errorf(null,"generalEntryFix: %o",e)}e.markup&&!e.url&&-1===e.markup.indexOf("<body")&&(e.markup="<body>"+e.markup+"</body>")}Xi.debugf(null,"test Compliance disabled? ",Oi);const Vi=new o.Z({prefix:"dfpAdapter: "});function Fi(e){if(e){if(/\.(renderAd|renderAdNew)\(document,(\s+)?['"][a-zA-Z0-9\-_]+['"]/gm.test(e))return $n.Bid.PrebidTemplateTypes.RENDER_AD;if(/apstag\.renderImp\(document,/gm.test(e))return $n.Bid.PrebidTemplateTypes.APSTAG;const t=["requestAdFromPrebid(","PATTERN:hb_adid"];if(/"hb_adid":[\s\r\n\t]{0,9}?\["[a-z-A-Z0-9\-_]+"\]/gm.test(e)||t.some((t=>e.includes(t))))return $n.Bid.PrebidTemplateTypes.HB_ADID;if(/ucTagData\.ad[Ii]d(:?\s+)?=(:?\s+)?['"]([a-zA-Z0-9\-_]+)['"]/gm.test(e))return $n.Bid.PrebidTemplateTypes.UC_TAG_DATA;if(e.indexOf("districtm_adslot = ")>-1)return $n.Bid.PrebidTemplateTypes.DISTRICTM_ADSLOT}}var Ui=new function(){var e=!1,t={},o={},a={},s=[],d=[],c=new r.Z.SubscriptionLayer,l={_height_:5,_width_:6,_empty_:7,_is_afc_:8,_fluid_:9,_creative_ids_:14,_adgroup2_ids_:15};this.init=function(){e||(e=!0,C())},this.dispatch=function(e){try{this.init();var n=[];return i.Y.fireEvent("onBeforeDfpRefreshDispatch"),i.Y.fireEvent("tryDisableGoogletagLazyLoad")&&u(),e.forEach((e=>{const i=new Ii;n.push(i.promise),t[e.slotElementId]={asAdUnit:e,deferred:i};const r=new Ii;o[e.slotElementId]=r})),window.googletag.cmd.push((function(){try{Vi.debugf(null,"onAdsRequestPrepareStarted");var t=window.googletag.pubads().getSlots(),n=[];t.forEach((t=>{e.forEach((e=>{var r=t.getSlotElementId();if(r===e.slotElementId){n.push(t);var o=p(16,24);if(a[o]=r,t.setTargeting("uponitSlotIterationId",o),i.Y.fireEvent("preTargetingSetting",{dfpSlot:t,ASAdUnit:e}),m(t,e.params.keyValuesParams.toRemove),t.__up_display||(t.__up_display=!0,window.googletag.display(e.slotElementId)),w(t,e.params.keyValuesParams.toAdd),window.uponit&&window.uponit.modifiers&&window.uponit.modifiers.dfpTargeting&&window.uponit.modifiers.dfpTargeting.length>0)try{for(var s=window.uponit.modifiers.dfpTargeting,d=0;d<s.length;d++){var c=t.getTargetingMap(),l={};for(const e in c)l[e]=c[e];var u=null;!e||null==e.floorPrice&&null==e.floorPrice||(u=e.floorPrice);var h=s[d](l,t,u);if(h)for(const e in h)c[e]&&c[e]===h[e]||t.setTargeting(e,h[e])}}catch(e){Vi.errorf(null,"dispatch: uponit-modifiers: %o",e)}t.setForceSafeFrame(!0),t.setCollapseEmptyDiv(!1)}}))})),Vi.debugf(null,"onAdsRequestSlotsPrepare - slots: %o",g(n)),h(n);const s=googletag.pubads().isSRA()&&(o=0,n.forEach((e=>{const t=e.getTargetingMap();Object.entries(t).forEach((e=>{const t=e[0]?e[0].length:0,n=e[1]&&e[1][0]?e[1][0].length:0;o+=t+n}))})),o>=6e3);if(i.Y.fireEvent("forceNotSingleRequestRefresh")||s)for(var r=0;r<n.length;r++){const e=n[r];setTimeout((()=>{window.googletag.pubads().refresh([e],void 0,!0)}),0)}else setTimeout((()=>{window.googletag.pubads().refresh(n,void 0,!0)}),0)}catch(e){Vi.errorf(null,"dispatch: %o",e)}var o})),n}catch(e){Vi.criticalf(null,"google cmd function failed: %o",e)}};var u=function(){window.googletag.cmd.push((function(){window.googletag.pubads().enableLazyLoad({fetchMarginPercent:-1,renderMarginPercent:-1})}))},h=function(e){e.forEach((e=>e.setTargeting("upstdfp",!0)))},f=function(e){var t=[];try{for(var n=0;n<e.length;n++){var i=e[n];"fluid"===i?t.push(i):t.push([i.getWidth(),i.getHeight()])}}catch(e){Vi.errorf(null,"getNormalizedDfpSizes errored - %o",e)}return t},g=function(e){var t=[];try{for(var n=0;n<e.length;n++){var i=e[n];t.push({elementId:i.getSlotElementId(),dfpAdUnitPath:i.getAdUnitPath(),sizes:f(i.getSizes()),targetingMap:i.getTargetingMap()})}}catch(e){Vi.errorf(null,"getNormalizedDFPAdSlots errored - %o",e)}return t},m=function(e,t){for(let n=0;n<t.length;n++){const i=t[n],r=e.getTargetingKeys();for(let t=0;t<r.length;t++){const n=r[t];i.test(n)&&e.clearTargeting(n)}}},w=function(e,t){for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];e.setTargeting(n,i)}};function b(e){if(!e)return!1;const t=i.Y.fireEvent("isPrebidResponse",{str:e});if(void 0!==t)return t;return!!Fi(e)}var v=function(e,t,n,r){e&&e._html_&&e._html_.indexOf("googletag.pubads().definePassback(")>-1&&(e._html_=e._html_.replace(").setTargeting('",").setTargeting('up_recovery','true').setTargeting('"),e._html_=e._html_.replace(').setTargeting("',').setTargeting("up_recovery","true").setTargeting("')),e&&e._html_&&-1===e._html_.indexOf("ca-pub-15988")&&(e._html_=e._html_.replace("data-ad-slot=",'data-ad-type="text" data-ad-slot=').replace("data-ad-client\\x3d","data-ad-type\\x3d\\x22text\\x22 data-ad-client\\x3d").replace('google_ad_client = "ca-pub','google_ad_type = "text";google_ad_client = "ca-pub'));var o=i.Y.fireEvent("dfpResponseCustomReplace",{googleReponse:e,googleFrame:r,googleSlot:t});if(o&&(e=o),!(e._fluid_||e._height_&&e._width_)&&n.length>0)for(var a=0;a<n.length;a++){var s=n[a];if("fluid"!=s&&s.getWidth()>=120){e._width_=parseInt(s.getWidth()),e._height_=parseInt(s.getHeight());break}}};function M(e){switch(e){case $n.Bid.Types.ADX:return"gad";case $n.Bid.Types.ADX_TEXT:return"gad_text";case $n.Bid.Types.DIRECT:return"gad_dfp_direct";case $n.Bid.Types.ADSENSE:return"gam_adsense"}}var y=function(e,t){switch(e){case $n.Bid.Types.ADSENSE:case $n.Bid.Types.ADX:case $n.Bid.Types.ADX_TEXT:return t.adxBidderId;case $n.Bid.Types.DIRECT:return t.directBidderId}},_=function(e,t){try{if(e==$n.Bid.Types.DIRECT&&t._adgroup2_ids_&&t._adgroup2_ids_[0]&&t._creative_ids_&&t._creative_ids_[0])return t._adgroup2_ids_[0].toString()+"_"+t._creative_ids_[0].toString()}catch(e){Vi.errorf(null,"getCreativeId: %o",e)}};function D(e){const n=t[e],i={auctionId:n.asAdUnit.auctionId,bids:[]};n.deferred.resolve(i)}var E=function(e,t){s.push(t),e._html_=i.Y.fireEvent("CustomPrebidHTMLModification",e._html_)||e._html_.replace(/w=w.parent/gm,"w=window").replace(/w = w.parent/gm,"w = window").replace(/pbjs/gm,"upbjs").replace(/renderAd/gm,"renderAdNew")},T=function(e){var t=e.getSlotElementId(),n=r.Z.commonUtils.escapeSelector("#"+t),o=document.querySelector(n+' [id^="google_ads_iframe_"]');return o=i.Y.fireEvent("customInnerContainer",{googleSlot:e})||o},N=function(e,t,n){var i=new RegExp("([?&]"+t+"=)([^&#]*)([&#$].*)","g");return e.replace(i,"$1".concat(encodeURIComponent(n),"$3"))},z=function(e,t){var n=new RegExp("(^|[&])"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[3]?decodeURIComponent(n[3].replace(/\+/g," ")):"":null},x=function(e){try{for(var n={},i=0;i<e.length;i++){var r=e[i],o=t[r.getSlotElementId()].asAdUnit;if(o&&o.params&&o.params.queryParams)for(var a in o.params.queryParams)if(o.params.queryParams.hasOwnProperty(a)){var s=o.params.queryParams[a];n[a]=s}}return n}catch(e){Vi.errorf(null,"getSlotsQueryParams: %o",e)}};var B=function(e,n,i,r){try{const a=n.map(((e,t)=>{if(i.indexOf(t)>-1)return n[t]}));return function(e,n){try{if(e){for(var i={},r=[],a=0;a<e.length;a++){var s=e[a].response.parsedData,l=e[a].response.rawResponse,u=e[a].slot;if(!u){r.push(Promise.resolve({injectToDom:!1}));continue}var p=n[a],h=u.getSlotElementId();const d=new Ii;i[h]=d,r.push(d.promise);var f=t[h],g=T(u);if(!s||s&&!s._html_||s&&s._empty_)i[h].resolve({injectToDom:!1}),D(h);else{v(s,u,p,g),b(s._html_)&&E(s,h);var m=(k=u,Z=void 0,Z=(S=s)._html_,S._empty_?$n.Bid.Types.EMPTY:b(Z)?$n.Bid.Types.DFP_PREBID:S._is_afc_?"text"===x([k]).ad_type?$n.Bid.Types.ADX_TEXT:$n.Bid.Types.ADX:Z.indexOf("js/adsbygoogle.js")>-1||Z.indexOf("pagead/show_ads.js")>-1?$n.Bid.Types.ADSENSE:$n.Bid.Types.DIRECT),w={ad:s._html_,adId:null,bidder:M(m),bidderId:y(m,f.asAdUnit.params),bidderCode:M(m),creativeId:_(m,s),width:s._width_,height:s._height_,cpm:f.asAdUnit.floorPrice+.01},N=new $n.Bid(w,l,m,void 0,function(e){return function(){var t=i[e];"unresolved"==t.fate&&t.resolve({injectToDom:!0,injectBackupCreative:this.isBackupCreative})}}(h),function(e){return function(){var t=i[e];"unresolved"==t.fate&&t.resolve({injectToDom:!1})}}(h),function(e){return function(t){o[e].promise.then((function(){t()}))}}(h),function(e){return function(){return{bidderExternalID:this.bidderId,url:this.adUrl,hint:{provider:this.bidderCode,uid:this.creativeId},width:parseInt(this.width),height:parseInt(this.height),lineItemID:e._adgroup2_ids_&&e._adgroup2_ids_[0],creativeID:e._creative_ids_&&e._creative_ids_[0],markup:this.ad.replace(/\\(n|r|\\)/g,(function(e,t){return"n"==t?"\n":"r"==t?"\r":"\\"}))}}}(s));m===$n.Bid.Types.DFP_PREBID&&(N.prebidTemplateType=Fi(w.ad));var z={auctionId:f.asAdUnit.auctionId,bids:[N]};f.deferred.resolve(z);var B={auctionId:f.asAdUnit.auctionId,bid:N};c.invokeEventCallbacks("bidReceived",B)}}return Promise.all(r).then(function(e){try{for(var t=[],n=0;n<this.responsesWithSlots.length;n++){const i=e[n],r=this.responsesWithSlots[n].response,o=r.parsedData,a=this.responsesWithSlots[n].slot,s=a&&a.getSlotElementId();i&&!i.injectToDom&&(s&&d.push(s),o._html_="",o._empty_=!0,o._width_=1,o._height_=1),r.injectBackupCreative=i.injectBackupCreative,t.push(r)}return t}catch(e){Vi.errorf(null,"handleDfpBidResponses: Promise.all: %o",e)}}.bind({responsesWithSlots:e,deferredsPromises:r}))}}catch(e){Vi.errorf(null,"handleDfpBidResponses: %o",e)}var S,k,Z}(e.map(((e,t)=>({slot:a[t],response:e}))),r)}catch(e){Vi.errorf(null,"invokeMiddleware: %o",e)}},S=function(e,t,i,r){return Vi.debugf(null,"onAdsServerResponse - slots: %o, relevantIndexes: %o",[g(t),i]),new Promise((function(o,a){try{if(""===e.responseText)return t.forEach((e=>D(e.getSlotElementId()))),void o();var s=function(e){for(var t=e.split("\n"),n=[],i=0;i<t.length;i++){var r=t[i];if(i%2==0&&""!=r){try{var o=window.JSON.parse(r)}catch(e){Vi.errorf(null,"parseGoogleExpandableResponse: 1 %o",e)}var a=Object.keys(o)[0],s=o[a],d={adUnitPath:a,rawResponse:s,parsedData:{}};try{for(var c in l)if(l.hasOwnProperty(c)){var u=l[c];void 0!==s[u]&&null!==s[u]&&(d.parsedData[c]=s[u])}}catch(e){Vi.errorf(null,"parseGoogleExpandableResponse: 2 %o",e)}n.push(d)}else i%2!=0&&(n[n.length-1].parsedData._html_=r)}return n}(e.responseText);B(s,t,i,r).then((function(t){!function(e){for(let t=0;t<e.length;t++){const i=e[t];if(!i.injectBackupCreative)continue;const r=i.parsedData,o=r._html_,a="<\/script>";r._html_=o.substr(0,o.indexOf(a)+a.length)+"<script>"+atob(n.Z.backupCreativeScript)+"<\/script>"+o.substr(o.indexOf(a)+a.length)}}(t);var i=function(e){for(var t="",n=0;n<e.length;n++){var i=e[n],r=i.parsedData,o=r._html_;delete r._html_;var a=i.rawResponse,s={};try{for(var d in l)if(l.hasOwnProperty(d)){var c=l[d];1==r[d]?a[c]=1:0==r[d]?a[c]=0:a[c]=r[d]}s[i.adUnitPath]=a}catch(e){Vi.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 1 %o",e)}try{t=t+JSON.stringify(s)+"\n"+o+"\n"}catch(e){Vi.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 2 %o",e)}}return t}(t);!function(e,t){t.__defineGetter__("responseText",(function(){return e})),t.__defineGetter__("response",(function(){return e})),t.__defineGetter__("status",(function(){return 200})),t.__defineGetter__("readyState",(function(){return 4}))}(i,e),o()}))}catch(e){Vi.criticalf(null,"handleResponsesFromXHR errored: %o",e)}}))},k=function(e){var t="sz",n=r.Z.commonUtils.extractQueryParamFromUrl(t,e);if(n||(t="prev_iu_szs",n=r.Z.commonUtils.extractQueryParamFromUrl(t,e)),!n)return;return n.split(",").map((e=>e.split("|"))).map((e=>e.map((e=>{const[t,n]=e.split("x");return{width:parseInt(t),height:parseInt(n)}}))))},Z={width:320,height:50};function I(e,t,n){return!("fluid"!==e||!n)||t.some((t=>t.width===e.width&&t.height===e.height))}function Y(e){const t=r.Z.commonUtils.extractQueryParamFromUrl("fluid",e);if(t){let e=t.split(",");return e=e.map((e=>isNaN(e)?e:parseInt(e))),e}}var H=function(e,n,o){var a;if(e)try{var s;if(e.indexOf("&sz=")>-1)s="sz";else{if(!(e.indexOf("&prev_iu_szs=")>-1))return;s="prev_iu_szs"}var d=k(e);if(!d)return;const h=d.length;a=d.filter(((e,t)=>o.indexOf(t)>-1));const f=(Y(e)||Array(h).fill(0)).filter(((e,t)=>o.includes(t)));var c=[],l=[];!function(){var t=i.Y.fireEvent("removeSizesDfpConfig");if(t){var r=t.forAll||[];a=a.map(((i,o)=>{var a=n[o].getSlotElementId(),s=(t[a]||[]).concat(r);return s=s.map((t=>{if("fluid"==t){var n=new RegExp("fluid=(.*?)&","g");return e=e.replace(n,""),{width:Z.width,height:Z.height}}return t})),i.filter((e=>!s.some((t=>t.width==e.width&&t.height==e.height))))}))}}(),a=a.map(((e,r)=>{var o=n[r],a=o.getSlotElementId(),s=t[a].asAdUnit.spaceName;const d=f[r];var c=i.Y.fireEvent("sizesToRemoveBySpace",{spaceName:s,slot:o});return c?(c.includes("fluid")&&d&&(f[r]=0),e.filter((e=>!c.some((t=>"fluid"===t?Z.width==e.width&&Z.height==e.height:t.width===e.width&&t.height===e.height))))):e}));try{a.forEach(((e,r)=>{var o=n[r].getSlotElementId(),a=t[o].asAdUnit;const s=f[r];var d=i.Y.fireEvent("sizesToAddBySpace",{ASAdUnit:a});if(!d)return e;d.forEach((t=>{I(t,e,s)||("fluid"===t?(I(Z,e,s)||e.push({width:Z.width,height:Z.height}),f[r]="height"):e.push({width:t.width,height:t.height}))}))}))}catch(e){Vi.errorf(null,"sizesToAddBySpace error - %o",e)}a.forEach(((e,t)=>{var i=n[t].getSlotElementId(),o=document.getElementById(i),a=r.Z.sizesRemover(o,e);0==(a=a.filter((e=>!!e))).length&&(a=[{width:2,height:3}]),c.push(a);var s=a.map((e=>{let t={getWidth:function(){return e.width},getHeight:function(){return e.height}};return e.width==Z.width&&e.height==Z.height&&(t="fluid"),t}));l.push(s)}));var u,p=0;return u=d.map(((e,t)=>{if(o.indexOf(t)<0)return e;var n=c[p];return p++,n})).map((e=>e.map((e=>e.width+"x"+e.height)))).map((e=>e.join("|"))).join(","),{url:e=function(e,t){const n=!!Y(e),i=t.join(",");return n?N(e,"fluid",i):"".concat(e,"&fluid=").concat(encodeURIComponent(i))}(e=N(e,s,u),f),modifiedSizes:l}}catch(t){return Vi.errorf(null,"modifySizesInUrl errored - %o",t),{url:e,modifiedSizes:n.map((e=>e.getSizes()))}}},X=function(){fi.addEventListener(fi.Types.XHR_OPEN_PRE,(function(e){try{var n=e.data;if(O(n[1])){var o=n[1],s=function(e){var t=[],n=r.Z.commonUtils.extractQueryParamFromUrl("scp",e);if(n||(n=r.Z.commonUtils.extractQueryParamFromUrl("prev_scp",e)),n){for(var i=n.split("|"),o=0;o<i.length;o++){var s=i[o],d=z("uponitSlotIterationId",s);a[d]&&t.push(a[d])}return t}}(n[1]),d=function(e){for(var t=[],n=window.googletag.pubads().getSlots(),i=0;i<n.length;i++)for(var r=n[i],o=0;o<e.length;o++){var a=e[o];r.getSlotElementId()==a&&t.push(r)}return t}(s),c=function(e){var t=[],n=r.Z.commonUtils.extractQueryParamFromUrl("scp",e);if(n||(n=r.Z.commonUtils.extractQueryParamFromUrl("prev_scp",e)),n){var i,o=r.Z.commonUtils.extractQueryParamFromUrl("csp",e);o&&(i=z("upstdfp",o),Vi.debugf(null,"onCommonSlotTargetDetected - upstdfp: %o",i));for(var a=n.split("|"),s=0;s<a.length;s++){var d=a[s];(i||z("upstdfp",d))&&t.push(s)}return t}}(n[1]);d.forEach((e=>e.clearTargeting("upstdfp"))),n[1]=r.Z.addAcceptableParam(n[1]),n[1]=function(e,t){var n=x(t);if(n)for(var i in n)if(n.hasOwnProperty(i)){var r=n[i];e.indexOf("?")<0?e=e+"?"+i+"="+r:e.indexOf("&"+i+"=")<0&&e.indexOf("?"+i+"=")<0&&(e=e+"&"+i+"="+r)}return e}(n[1],d);var l=H(n[1],d,c);n[1]=l.url;var u=l.modifiedSizes;!function(e,n,i,r){for(let o=0;o<e.length;o++){const a=e[o],s=t[n[a]];let d=[];for(let e=0;e<i[a].length;e++)i[a][e]&&(i[a][e].width&&i[a][e].height?d.push([i[a][e].width,i[a][e].height]):"fluid"===i[a][e]&&d.push("fluid"));let c=[];for(let e=0;e<r[a].length;e++)r[a][e]&&(r[a][e].getWidth&&r[a][e].getHeight?c.push([r[a][e].getWidth(),r[a][e].getHeight()]):"fluid"===r[a][e]&&c.push("fluid"));const l={sendToServer:!0,sendPercentage:1,event:"dfp-size-filtering",meta:{spaceName:s.asAdUnit.spaceName,auctionId:s.asAdUnit.auctionId,sizesBeforeFiltering:d,sizesAfterFiltering:c}};Vi.infof(null,"logAdUnitSizesDfp, spaceName -> ",s.asAdUnit.spaceName,l)}}(c,s,k(o),u),n[1]=function(e){var t=[],n=["21063911","21063048","21063670","21063817","21063671"],i=r.Z.commonUtils.extractQueryParamFromUrl("eid",e);if(!i)return e;for(var o=i.split(","),a=0;a<o.length;a++){var s=o[a];n.indexOf(s)<0&&t.push(s)}return N(e,"eid",t.join(","))}(n[1]),i.Y.fireEvent("onBeforeDfpAdsRequest",{url:n[1]}),Vi.debugf(null,"onDfpAdsRequest - url: %s, slots: %o, relevantIndexes: %o",[n[1],g(d),c]);var p=null,h=null,f=this,m=!1;this.onload=function(){try{if(!p||m)return;m=!0,S(f,d,c,u).then((function(){p.call(f)}))}catch(e){Vi.errorf(null,"addListenersOnHooks: onload: %o",e)}},this.onreadystatechange=function(e){try{if(!h||m)return;4===this.readyState&&(200===this.status?(m=!0,S(f,d,c,u).then((function(){h.call(f,e)}))):Vi.criticalf(null,"onDfpAdsRequestError, status: %s, responseText: %s",[this.status,this.responseText]))}catch(e){Vi.criticalf(null,"onReadyStateChangeError, err %o",e)}},this.__defineGetter__("onload",(function(){return p})),this.__defineSetter__("onload",(function(e){return p=e,e})),this.__defineGetter__("onreadystatechange",(function(){return h})),this.__defineSetter__("onreadystatechange",(function(e){return h=e,e}))}}catch(e){Vi.errorf(null,"addListenersOnHooks: %o",e)}}))},O=function(e){try{return e&&e.indexOf("doubleclick.net/gampad/ads")>-1&&e.indexOf("upstdfp")>-1}catch(e){}};this.subscribeForEvent=function(e,t){c.subscribeForEvent(e,t)};var R=function(){window.googletag.pubads().addEventListener("slotRenderEnded",(function(e){var t=e.slot,n=t.getSlotElementId(),i=T(t),a=i&&i.querySelector("iframe");if(d.indexOf(n)>=0)d.splice(d.indexOf(n),1);else{var c=o[n];if(c&&"unresolved"==c.fate&&c.resolve(),function(e){setTimeout((()=>{const t=e.getSlotElementId(),n=document.getElementById(t),i=T(e);if(!(i&&i.querySelector("iframe")&&i&&r.Z.commonUtils.isElementInBody(n)&&n)){const e={sendToServer:!0,sendPercentage:1,event:"creative-removed",meta:{creativeId:t}};Vi.infof(null,"removed creative id -> ",e,e)}}),1e3)}(t),a)if(s.indexOf(n)>-1){s.splice(s.indexOf(n),1);try{i.style.width="1px",i.style.height="1px",a.width="1",a.height="1"}catch(e){Vi.errorf(null,"setGoogletagEvents: %o",e)}}else if("0"===a.width)a.style.setProperty("width","max-content","important");else{const e=a.width;a.style.setProperty("width",e+"px","important")}}}))};var C=function(){var e="push";window.googletag.cmd.unshift&&(e="unshift"),window.googletag.cmd[e]((function(){var e;i.Y.fireEvent("shouldNotWrapGoogleTagRefresh")||(e=window.googletag.pubads().refresh,window.googletag.pubads().refresh=function(t,n,i){if(i)return t?e(t,n):e();Vi.debugf(null,"pub invoked `googletag` refresh - %o",{slots:t&&g(t),settings:n}),t||(t=window.googletag.pubads().getSlots());for(var r=[],o=0;o<t.length;o++)try{var a=t[o].getSlotElementId();a&&r.push(a)}catch(e){Vi.errorf(null,"wrapGoogleTagRefresh: refresh-invoked-by-the-publisher: %o",e)}c.invokeEventCallbacks("refresh",r)}),R(),X(window)}))}};const Li=new o.Z({prefix:"dispatch: ",level:o.z.INFO});var Pi=new function(){var e=new r.Z.SubscriptionLayer;this.subscribeForEvent=function(t,n){e.subscribeForEvent(t,n)},this.dispatchPrebid=function(e){try{const t={},n=[],r=[];e.forEach((e=>{const i=new Ii;t[e.auctionId]=i,n.push(i.promise);const o=e.unit.space.prebidSettings;if(o&&o.enabled)r.push(e);else{var a={auctionId:e.auctionId,bids:[]};i.resolve(a)}}));const o=r.map((e=>{const t=e.unit.space.prebidSettings.bidders;return{auctionId:e.auctionId,biddersSettings:t,spaceName:e.unit.space.name,sizes:e.unit.space.sizes,element:e.unit.element}})),a=o.filter((e=>e.biddersSettings.length>0));let s=[];a.length>0&&(s=Hi.dispatch(a));const d=o.map(((e,t)=>a.includes(e)?s[t]:{auctionId:e.auctionId,bids:[]}));return Promise.all(d).then((function(e){try{for(var n=[],o=0;o<e.length;o++){const t=e[o],d=t.auctionId,c=r.find((e=>e.auctionId==d));var a=t.bids;a=i.Y.fireEvent("passZeroCpmBidsFilter")?a:a.filter((e=>e.cpm>=.01));var s=i.Y.fireEvent("filterPrebidBids");if(s){const e=a.map((e=>({bid:e,rawBid:e.rawBid})));a=s(e)}c.addBids(a),t.bids=a,n.push({auction:c,bids:a})}Wi(n).then((function(n){for(var i in n)if(n.hasOwnProperty(i)){const a=n[i],s=e.find((e=>e.auctionId==i));var r=s.bids;for(var o in a)if(a.hasOwnProperty(o)){const e=a[o],t=r.find((e=>e.bidId==o));t.contentIdHash=e.bidContentIdHash,t.complianceStatus=e.status,t.isBackupCreative=e.backup}t[i].resolve(s)}}))}catch(e){Li.errorf(null,"error testing Prebid bid compliance: %o",e)}})),n}catch(e){Li.errorf(null,"error in `dispatchHB`: %o",e)}},this.dispatchDFP=function(e){try{const n={},i=[],r=[];e.forEach((e=>{const t=new Ii;n[e.auctionId]=t,i.push(t.promise);const o=e.unit.space.dfpSettings;if(null!=o&&o.enabled)r.push(e);else{const n={auctionId:e.auctionId,bids:[]};t.resolve(n)}}));return t(r,0).forEach((t=>{t.then((function(t){const i=t.auctionId;e.find((e=>e.auctionId==i)).addBids(t.bids),n[i].resolve(t)}))})),i}catch(e){Li.errorf(null,"error in `dispatchAS`: %o",e)}};var t=function(e,i){try{const d={},c=[];e.forEach((e=>{const t=new Ii;c.push(t.promise),d[e.auctionId]={auction:e,deferred:t}}));var o=[];e.forEach((e=>{e.unit.space.dfpSettings.order[i]?o.push(e):d[e.auctionId].deferred.resolve({auctionId:e.auctionId,bids:[]})}));var s=o.map((e=>{const t=e.unit.space.dfpSettings;var n=e.getWinningBid(),r=n?n.cpm:0;return{auctionId:e.auctionId,spaceName:e.unit.space.name,params:a(e,t.order[i]),slotElementId:e.unit.element.getAttribute("id"),floorPrice:r}}));return(s.length>0?Ui.dispatch(s):[]).forEach((e=>{e.then((function(e){try{var a=e.auctionId,c=e.bids[0];const l=o.find((e=>e.auctionId==a)),u=s.find((e=>e.auctionId==a)),p=l.getWinningBid();if(!c){t([l],i+1)[0].then((function(e){d[a].deferred.resolve(e)}));try{if(p&&1===i){const{ad:e,adId:t,bidderId:n,bidder:i,bidderCode:r,currency:o,creativeId:a,cpm:s,height:d,size:c,width:h,...f}=p,g={sendToServer:!0,event:"AAHBWithEmptyGAM",sendPercentage:1,meta:{auctionID:u.auctionId,winningBidData:f,spaceID:l.unit.space.id}};Li.infof(null,"AAHBWithEmptyGAM, auction ID -> ",u.auctionId||"N/A",g)}}catch(e){Li.errorf(null,'error checking for "AAHBWithEmptyGAM": %o',e)}return}if(c.gamIteration=i+1,c.type==$n.Bid.Types.DFP_PREBID)return p.additionalBidsToRender.push(c),c.complianceStatus=n.Z.consts.complianceStatus.COMPLIANT,void d[a].deferred.resolve({auctionId:a,bids:[]});if(!(c.type!=$n.Bid.Types.ADX_TEXT||u.params.adxShouldTestCompliance||Ri(l,c)||function(e){return e.type==Qn.Types.ADX_TEXT&&[["video-box"],["google-native-video"],["imasdk.googleapis.com/formats/outstream"],["video-in-display"],["vix.eu.criteo.net/concat"],[".video-container","googlevideo.com"],["product-video","googlevideo.com"],["twoOfTwoVertical","animation-container"],["animation:text2Frames","-webkit-animation"]].some((t=>r.Z.commonUtils.matchStringsOnString(t,e.ad)))}(c))){c.complianceStatus=n.Z.consts.complianceStatus.COMPLIANT,d[a].deferred.resolve(e);const t={sendToServer:!0,sendPercentage:1,event:"client_tc_applied",meta:{client_tc_type:"gad_text_ad",auctionID:a,bidderID:c.bidderId}};return void Li.noticef(null,"gam text ad: ",c,t)}Wi([{auction:l,bids:[c]}]).then((function(r){if(c.contentIdHash=r[a][c.bidId].bidContentIdHash,c.complianceStatus=r[a][c.bidId].status,c.isBackupCreative=r[a][c.bidId].backup,c.complianceStatus!=n.Z.consts.complianceStatus.COMPLIANT)return c.cancelBid(),void t([l],i+1)[0].then((function(e){e.bids.push(c),d[a].deferred.resolve(e)}));d[a].deferred.resolve(e)})).catch((function(e){c.cancelBid(),t([l],i+1)[0].then((function(e){e.bids.push(c),d[a].deferred.resolve(e)}))}))}catch(e){Li.errorf(null,"error handling auction responses from AS: %o",e)}}))})),c}catch(e){Li.errorf(null,"error in `innerInvokePostbid`: %o",e)}},o={},a=function(e,t){var n={},i=function(e,t){var n=e.getWinningBid(),i=e.getComplianceBids();const r={...s(n,e.unit),...n?n.getGPTTargeting({complianceBidsInAuction:i}):{},...t.keyValues},a=o[e.unit.unitID]?Object.keys(o[e.unit.unitID]).map((e=>new RegExp(e))):[];return a.push(...["hb_adid","hb_bidder","hb_pb","hb_format","hb_size","hb_source","amznbid","amzniid","amznp","amznsz"].map((e=>new RegExp("".concat(e,".*"))))),o[e.unit.unitID]=r,{toAdd:r,toRemove:a}}(e,t);return n.keyValuesParams=i,n.queryParams=t.params.queryParams||{},n.adxBidderId=t.adx.bidderID,n.adxShouldTestCompliance=t.adx.testCompliance,n.directBidderId=t.direct.bidderID,n},s=function(e,t){var i={up_bidder:!0};if(e&&e.bidder)if("s2s"===e.rawBid.source)i.up_bidder=xn.v.btDemand.snigel;else if("relay"===e.bidder)i.up_bidder=xn.v.btDemand.relay;else if(["true","false","undefined","152media","33across","a4g","aardvark","adblade","adbund","adbutler","adform","adkernel","adkerneladn","admedia","admixer","adocean","adsparc","adspirit","adsupply","adtelligent","adxcg","adyoulike","aerserv","amazon","andbeyond","aol","appnexus","appnexusAst","arteebee","atomx","audienceNetwork","automatad","beachfront","betweendigital","bidfluence","brainy","brealtime","bridgewell","brightcom","buysellads","c1x","carambola","clickforce","clickonometrics","colossus","connectad","consumable","contentIgnite","conversant","cox","cpx","criteo","defymedia","dgads","districtm","districtmDMX","e-planning","emx_digital","emxdigital","engagebdr","essens","fairtrade","featureForward","fidelityMedia","freewheel-ssp","fyber","gamma","gamoshi","getintent","gourmetAds","gumgum","gxone","imonomy","improvedigital","indexExchange","IndexExchange","inneractive","innity","inskin","insticator","invibes","iqm","ix","justpremium","kargo","komoona","kumma","lifestreet","lkqd","lockerdome","madvertise","marsmedia","matomy","media.net","medianet","mobfox","my6sense","mytarget","nginad","nobid","oftmedia","onemobile","oneplanetonly","onetag","openx","optimatic","optimera","orbitsoft","peak226","piximedia","platform.io","playgroundXyz","polluxNetwork","polymorph","prebidServer","pubgears","pubmatic","pulsepoint","pulsepointLite","quantcast","quantum","readpeak","realvu","rhythmone","rockyou","roxot","rtbdemandadk","rtbdemandBidder","rtbhouse","rubicon","rxrtb","sara","sekindoum","serverbid","sharethrough","smart","smartyads","soloway","somoAudience","sonobi","sortable","sovrn","spotx","springserve","stickyadstv","tapsense","teads","thoughtleadr","tremor","trionInteractive","triplelift","trustx","twenga","ucfunnel","underdogmedia","undertone","unruly","upo","upo1","upo10","upo2","upo3","upo4","upo5","upo6","upo7","upo8","upo9","vertamedia","vertoz","vi","vidazoo","vis.x","vuble","weborama","wideorbit","widespace","xaxis","xendiz","yahoossp","yieldbot","yieldlab","yieldmo","yieldone"].indexOf(e.bidder)>-1)i.up_bidder=e.bidder;else{const t={sendToServer:!0,event:"upBidder_unknownBidder",meta:{bidder:e.bidder,bidderCode:e.bidderCode},sendPercentage:1};Li.noticef(null,"unknown bidder for up_bidder targeting -> ",e.bidder,t)}var r=_n.topmostAccessibleWindow.location.hostname;0===r.indexOf("www.")&&(r=r.replace("www.",""));var o=r;o=o.match(/(co\.il|co\.uk|org\.il)/)?o.replace("www.","").split(".").splice(-3).join("."):o.replace("www.","").split(".").splice(-2).join("."),i.up_recovery="true";var a=Cn.Xh(),s=Cn.Uh(),d=Cn.Jv();i.up_browser=a,i.up_device=s,i.up_platform=d,i.up_domain=r,i.up_website=o,i.up_website_id=n.Z.SharedObject.getItem("websiteConfig").websiteID;const c=t.countOfDispatches-1;return i.up_refresh=c>30?"30":"".concat(c),i};Ui.subscribeForEvent("bidReceived",(function(t){e.invokeEventCallbacks("bidReceived",t)})),Ui.subscribeForEvent("refresh",(function(t){e.invokeEventCallbacks("refresh",t)})),Hi.subscribeForEvent("bidReceived",(function(t){e.invokeEventCallbacks("bidReceived",t)})),Hi.subscribeForEvent("refresh",(function(t){e.invokeEventCallbacks("refresh",t)}))},Ki=new function(){var e=[];this.set=function(t){e.push(t)},this.getBySpace=function(t){for(var n=0;n<e.length;n++){var i=e[n];if(i.space==t)return i}},this.getByElement=function(t){return e.find((e=>e.element===t))},this.getAll=function(){return e},this.purgeUnitsWithNoElementOnPage=function(){e=e.filter((e=>r.Z.commonUtils.isElementInBody(e.element)))}};const Gi=new o.Z({prefix:"refresh: "});var Ji=new function(){this.initialize=function(l){let{invokeSpaces:u}=l;const p=function(i){let{invokeSpaces:c}=i;function l(){if(!document.hasFocus())return void Gi.debugf(null,"triggerRefresh: User not on page (tab/window out of focus), no refreshes attempted.");if(0===e.size)return;const i=new Map;if(e.forEach(((t,r)=>{if(t.expiresAt&&t.expiresAt<Date.now())return void e.delete(r);let d,c;const l=ki({selector:r.selector.value});l===n.Z.consts.elementVisibility.VISIBLE?(d=t.skipComplianceCheck||function(){const e=Date.now();return e-o<(o===a?2500:500)+s}(),c="IS_VISIBLE"===t.whenVisibility||"ANY"===t.whenVisibility):l===n.Z.consts.elementVisibility.HIDDEN?(d=!0,c="IS_HIDDEN"===t.whenVisibility||"ANY"===t.whenVisibility):l===n.Z.consts.elementVisibility.NOT_FOUND&&e.delete(r),d&&c&&(e.delete(r),i.set(r,t))})),0===i.size)return void Gi.debugf(null,"triggerRefresh: No eligible refreshes in queue to attempt: %o",d(e));const l=[],u={};i.forEach(((e,t)=>{l.push(t),r.Z.commonUtils.isNumber(e.minTimeBetweenRefreshes)&&(u[t]=e.minTimeBetweenRefreshes)}));const p={filteringSettings:{minTimeBetweenRefreshesBySpace:u}};Gi.infof(null,"Attempting to refresh: %o\nLeft in queue: %o",[d(i),d(e)]),c(l,p).then((function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];const n=l.filter((t=>!e.includes(t)));n.length>0&&(n.forEach((e=>{t(i.get(e))})),Gi.infof(null,"Could not refresh & requeued: %o",n))}))}return r.Z.commonUtils.debounce(l,s)}({invokeSpaces:u});!function(e){let{triggerRefresh:n}=e;pi(n),window.addEventListener("onUserReturnedToPage",(()=>{!function(){const{unitVisibility:e}=i.Y.fireEvent("refreshOnReturnToPage")||{};if(e){const n=Ki.getAll().filter((t=>("ANY"===e||e===ki({element:t.element,useIABDefinition:!0}))&&t.lastInvokeTime&&Date.now()-t.lastInvokeTime.getTime()>5e3));if(n.length>0){n.forEach((e=>{t({space:e.space,whenVisibility:"ANY",skipComplianceCheck:!0,minTimeBetweenRefreshes:0,expiresAt:Date.now()+1e3})}));const e={event:"refreshOnReturnToPage",sendToServer:!0,sendPercentage:1,meta:{totalUnitsQueuedForRefresh:n.length,unitsQueuedForRefresh:n.map((e=>({elementId:e.element.id,space:{name:e.space.name,templateSpaceName:e.space.templateSpaceName},gamAdUnitPath:e.gamAdUnitPath,prevDispatchCount:e.countOfDispatches,prevRenderCount:e.countOfRenders,secsSinceLastAuction:e.lastInvokeTime?((Date.now()-e.lastInvokeTime.getTime())/1e3).toFixed(1):"Never"}))),secsSinceLastRefreshOnRTP:c?((Date.now()-c)/1e3).toFixed(1):"Never"}};Gi.infof(null,"refreshOnReturnToPage, units ->",n,e),c=Date.now()}}}(),n()})),window.addEventListener("locationChange",(()=>{!function(){let{locationChanged:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=Date.now();o=t,e&&(a=t)}({locationChanged:!0})}))}({triggerRefresh:p});(i.Y.hasEventListener("spaceRefreshOnInterval")||i.Y.hasEventListener("spaceRefreshSettings"))&&(this.spaceRefreshOnInterval=function(e){let{triggerRefresh:r}=e;return e=>{let{space:o,unitDispatchCount:a}=e;const s={space:o,unitDispatchCount:a},d=i.Y.fireEvent("spaceRefreshOnInterval",s)||i.Y.fireEvent("spaceRefreshSettings",s);if(d){let{whenVisibility:e,type:a,skipComplianceCheck:s=!1}=d;if(s=s||i.Y.fireEvent("skipVisibleAdRefreshComplianceCheck",{space:o}),!e){if(!a)return void Gi.errorf(null,"spaceRefreshSettings [deprecated]: Use new hook `spaceRefreshOnInterval` and provide `whenVisibility`.");switch(Ln.commonBLUtils.refreshTypeDecoder(a)){case n.Z.consts.refreshType.UNKNOWN:return void Gi.errorf(null,"spaceRefreshSettings [deprecated]: Invalid refresh `type` %s",a);case n.Z.consts.refreshType.ALL:case n.Z.consts.refreshType.VISIBLE:return void Gi.debugf(null,"spaceRefreshSettings [deprecated]: Ignoring refresh with `type` %s",a);case n.Z.consts.refreshType.HIDDEN:e="IS_HIDDEN"}}const c=d.interval||d.rate||3e4;setTimeout((function(){t({space:o,whenVisibility:e,skipComplianceCheck:s}),r()}),c),Gi.infof(null,"spaceRefreshOnInterval: Refresh to be enqueued (& attempted) in %i secs: %o",[c/1e3,{spaceName:o.name,space:o,whenVisibility:e,skipComplianceCheck:s}])}}}({triggerRefresh:p}));(function(e){let{triggerRefresh:r}=e;Pi.subscribeForEvent("refresh",(function(e){e.forEach((e=>{const r=document.getElementById(e),o=r&&Ki.getByElement(r),a=o&&o.space;if(a&&o.countOfDispatches>0){let e;const s=ki({element:r});if(s===n.Z.consts.elementVisibility.VISIBLE)e="IS_VISIBLE";else if(s===n.Z.consts.elementVisibility.HIDDEN)e="IS_HIDDEN";else if(s===n.Z.consts.elementVisibility.NOT_FOUND)return;const d=i.Y.fireEvent("skipVisibleAdRefreshComplianceCheck",{space:a});Gi.infof(null,"googletag refresh: Enqueuing: %o",{spaceName:a.name,space:a,correspondingUnit:o,whenVisibility:e,skipComplianceCheck:d}),t({space:a,whenVisibility:e,skipComplianceCheck:d})}})),r()}))})({triggerRefresh:p}),function(e){let{invokeSpaces:t}=e,n=[];i.Y.addEventListener("refreshByForce",(function(e){var i=e.data,r=i&&i.settings,o=Di.getAll(),a=r&&r.minTimeBetweenRefreshes,s=r&&r.shouldRefreshFailedSpaces,d=r&&r.spacesNames,c=r&&r.shouldRefreshAllSpaces,l=[],u={filteringSettings:{minTimeBetweenRefreshes:a}};c?l=o:(s&&(l=[...l,...n]),d&&o.forEach((e=>{d.indexOf(e.name)>-1&&l.push(e)}))),l=[...new Set(l)],Gi.infof(null,"refreshByForce (settings: %o): Re-auctioning Spaces: %o",[r,l]),t(l,u).then((function(e){n=l.filter((t=>e.indexOf(t)<0))}))}))}({invokeSpaces:u})},this.minTimeBetweenAuctionsUnitsFilter=function(e,t){let o=n.Z.upoSettings.minTimeBetweenRefreshes;i.Y.hasEventListener("minTimeBetweenRefreshes")&&(o=i.Y.fireEvent("minTimeBetweenRefreshes"));r.Z.commonUtils.isNumber(t.minTimeBetweenRefreshes)&&(o=t.minTimeBetweenRefreshes);const s=t.minTimeBetweenRefreshesBySpace||{};return e.filter((e=>{let t;if(e)if(e.lastInvokeTime){const n=r.Z.commonUtils.isNumber(s[e.space])?s[e.space]:o,i=Date.now()-e.lastInvokeTime.getTime();i>n||a&&e.lastInvokeTime.getTime()<a?(t=!0,Gi.infof(null,"Re-auctioning Unit: %o",e)):(t=!1,Gi.infof(null,"Must wait at least %i seconds before we can re-auction Unit: %o",[(n-i)/1e3,e]))}else t=!0;else t=!1;return t}))},this.spaceRefreshOnInterval;const e=new Map;function t(t){let{space:n,whenVisibility:r,skipComplianceCheck:o,minTimeBetweenRefreshes:a,expiresAt:s}=t;"IS_VISIBLE"===r&&i.Y.fireEvent("dontQueueViewableRefreshes",{space:n})?Gi.debugf(null,"queueSpaceForRefresh: `dontQueueViewableRefreshes` hook set to not enqueue refresh: &o",{spaceName:n.name,space:n,whenVisibility:r,skipComplianceCheck:o,minTimeBetweenRefreshes:a,expiresAt:s||"Never"}):e.set(n,{space:n,whenVisibility:r,skipComplianceCheck:o,minTimeBetweenRefreshes:a,expiresAt:s})}let o,a;const s=500;function d(e){return Array.from(e.values()).map((e=>{let{space:t,...n}=e;return{spaceName:t.name,space:t,...n}}))}let c};function Qi(e){const t=i.Y.fireEvent("maxAmountOfUnitDispatches");return t?e.filter((e=>e.countOfDispatches<t)):e}function qi(e,t){return Ji.minTimeBetweenAuctionsUnitsFilter(e,t)}function $i(e){return e.filter((e=>!i.Y.fireEvent("filterOutUnitToBeAuctioned",{unit:e})))}function er(e){const t=e.map((e=>e.element));return e.filter(((e,n)=>t.indexOf(e.element)==n))}function tr(e,t){return new Promise(((n,i)=>{t&&t.definedSlotsFilteringSettings&&(t.definedSlotsFilteringSettings.dfpEnabled||t.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots)?window.googletag.cmd.push((function(){const i=window.googletag.pubads().getSlots(),r=[];e.forEach((e=>{t.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots||e.space.dfpSettings.enabled?i.forEach((t=>{t.getSlotElementId()===e.element.getAttribute("id")&&(e.gamAdUnitPath=function(e){let t=e.getAdUnitPath();"/"===t.charAt(0)&&(t=t.slice(1));const[n,...i]=t.split("/");return{networkCode:n,adUnit:"/".concat(i.join("/"))}}(t),r.push(e))})):r.push(e)})),n(r)})):n(e)}))}var nr=function(){var e="push";window.googletag.cmd.unshift&&(e="unshift"),window.googletag.cmd[e]((function(){window.__cmp&&window.__cmp("getVendorConsents",null,(function(e){e&&e.gdprApplies&&(e.purposeConsents&&e.purposeConsents[1]&&e.purposeConsents[2]&&e.purposeConsents[3]&&e.purposeConsents[4]&&e.purposeConsents[5]||window.googletag.pubads().setRequestNonPersonalizedAds(1))})),i.Y.fireEvent("skipDisableInitialLoad")||window.googletag.pubads().disableInitialLoad(),i.Y.fireEvent("disableSingleRequest")||window.googletag.pubads().enableSingleRequest(),i.Y.fireEvent("collapseEmptyDivs")&&window.googletag.pubads().collapseEmptyDivs(!0),window.googletag.pubads().enableAsyncRendering(),window.googletag.enableServices()}))},ir=function(e){if("dfp"===e)return nr};const rr=new o.Z({prefix:"prebidPostset: "});let or;var ar=function(){or=n.Z.cpbjs,n.Z.upoSettings.prebidTimeout=i.Y.fireEvent("prebidTimeout")||n.Z.upoSettings.prebidTimeout,function(){const e=n.Z.SharedObject.getItem("whitelistingIFrame");e?or.setCookieFrame({frame:e,isBTSafeFrameDomain:e.src===Rn.W}):i.Y.addEventListener("whitelistingIFrameLoaded",(function(e){or.setCookieFrame({frame:e.data.whitelistingIFrame,isBTSafeFrameDomain:e.data.whitelistingIFrame.src===Rn.W})}))}(),function(){try{const e=window.pbjs,t=e&&e.version&&parseInt(e.version[1]);if(t&&!isNaN(t)&&t>=4){const t=e.getConfig("consentManagement");if(t&&(t.gdpr||t.usp))return void or.setConfig({consentManagement:t})}}catch(e){rr.errorf(null,"setConsentConfig: copy publisher consentManagement settings: %o",e)}try{"function"==typeof window.__tcfapi&&window.__tcfapi("ping",2,(function(e){if(e&&e.cmpLoaded&&e.gdprApplies){const e={consentManagement:or.getConfig().consentManagement||{}};e.consentManagement.gdpr={cmpApi:"iab",timeout:3e3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},or.setConfig(e)}}))}catch(e){rr.errorf(null,"setConsentConfig: __tcfapi: %o",e)}try{"function"==typeof window.__cmp&&"function"!=typeof window.__tcfapi&&window.__cmp("getConsentData",null,(function(e){if(e&&e.gdprApplies){const e={consentManagement:or.getConfig().consentManagement||{}};e.consentManagement.gdpr={cmpApi:"iab",timeout:3e3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},or.setConfig(e)}}))}catch(e){rr.errorf(null,"setConsentConfig: __cmp: %o",e)}try{"function"==typeof window.__uspapi&&window.__uspapi("getUSPData",1,(function(e,t){if(t&&e.uspString){const e={consentManagement:or.getConfig().consentManagement||{}};e.consentManagement.usp={cmpApi:"iab",timeout:100},or.setConfig(e)}}))}catch(e){rr.errorf(null,"setConsentConfig: __uspapi: %o",e)}}(),or.que.push((function(){or.setConfig({userSync:{userIds:[{name:"pubProvidedId",params:{eidsFunction:function(){return[{source:"blockthrough.com",uids:[{id:"bt-aauser",atype:1,ext:{stype:"ppuid"}}]}]}}},{name:"id5Id",params:{partner:993},storage:{type:"html5",name:"id5id",expires:90,refreshInSeconds:28800}}],auctionDelay:50}})})),function(){const e={};or.onSendLog((function(t,n,i,r){if(r.meta.fired){const t=1;e[r.meta.uid]=(0,_n.getTrueByProbability)(t)}if(e[r.meta.uid])return r={...r,sendPercentage:101,sendToServer:!0},void rr.infof(t,n,i,r);r.sendPercentage&&(r={...r,sendToServer:!0},rr.infof(t,n,i,r))}))}(),or.onBeforeRequest((function(e){let t=e&&r.Z.addAcceptableParam(e);if(t.includes("criteo.com/cdb")&&i.Y.fireEvent("addCriteoAdblockQueryParam")){const e=t.includes("abp=1");t=e?t:"".concat(t,"&abp=1")}return t})),or.aliasBidder("pulsepointLite","pulsepoint"),or.aliasBidder("indexExchange","ix"),or.aliasBidder("ix","indexExchange"),or.aliasBidder("my6sense","upo2"),or.aliasBidder("lockerdome","upo3"),or.aliasBidder("appnexus","appnexus_cl"),or.aliasBidder("rubicon","rubi_ttd"),or.aliasBidder("rubicon","rubi_mm"),or.aliasBidder("rubicon","pgRubicon"),or.aliasBidder("rubicon","rubiconAU"),or.aliasBidder("rubicon","rubi_ss"),or.aliasBidder("colossus","colossusssp"),or.aliasBidder("pubmatic","PubmaticAU"),or.aliasBidder("pubmatic","pubmatic_cl"),or.aliasBidder("pubmatic","pubmatic_alien"),function(){const e=window.pbjs||window.jitaJS;e&&e.bidderSettings&&(or.bidderSettings=e.bidderSettings);const t=e&&e.getConfig&&e.getConfig();let r,o="high";if(t){const e=t.customPriceBucket,n=t.priceGranularity;o="custom"===n?e:n,r=t.currency}or.setConfig({bidderTimeout:n.Z.upoSettings.prebidTimeout,maxRequestsPerOrigin:6,priceGranularity:o,userSync:{filterSettings:{iframe:{bidders:"*",filter:"include"}},syncsPerBidder:25,syncEnabled:!0},floors:{enforcement:{floorDeals:!0},data:{schema:{fields:["mediaType"]},values:{banner:.03}}}}),r&&or.setConfig({currency:r});i.Y.fireEvent("priceFloor",{cpbjs:or})}(),function(){const{websiteStoredRequestId:e}=i.Y.fireEvent("snigelAdapterConfiguration")||{};e&&or.setConfig({s2sConfig:[{defaultVendor:"snigel",accountId:"1000",bidders:[],extPrebid:{storedrequest:{id:e}}}]})}(),function(){if(i.Y.hasEventListener("enableRelayAdapter")){const{sid:e}=i.Y.fireEvent("enableRelayAdapter")||{},t=e||n.Z.SharedObject.getItem("websiteConfig").websiteID;or.setConfig({relayAccountId:12021}),or.setBidderConfig({bidders:["relay"],config:{schain:{validation:"strict",config:{ver:"1.0",complete:1,nodes:[{asi:"blockthrough.com",sid:t,hp:1}]}}}})}}(),or.setBidderConfig({bidders:["rubicon"],config:{ortb2:{site:{ext:{data:{keywords:"blockthrough"}}}}}});const e=i.Y.fireEvent("scrapePrebidRequestBids");e&&function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{onListenerAdded:t,pollingInterval:n=100,maxIntervalCount:i=50}=e;if(sr())dr(t);else{let e=0;const r=setInterval((function(){e++,e>=i?clearInterval(r):sr()&&(clearInterval(r),dr(t))}),n)}}(e),i.Y.fireEvent("addIndexExchangeWrappers")&&function(){const e={aol:"ix_aol_om",appnexus:"ix_apnx_om",beachfront:"ix_bft_cpm",colossusssp:"ix_clss_cpm",consumable:"ix_cnsm_cpm",conversant:"ix_conv_cpm",criteo:"ix_cdb_om",districtm:"ix_dism_om",districtmDMX:"ix_dis_cpm",emx_digital:"ix_brt_cpm",gumgum:"ix_gum_cpm",improvedigital:"ix_imdi_cpm",justpremium:"ix_justp_cpm",kargo:"ix_karg_om",lockerdome:"ix_lkdm_cpm",onedisplay:"ix_oath_cpm",onemobile:"ix_oath_cpm",openx:"ix_ox_om",optimera:"ix_opti_cpm",piximedia:"ix_pix_cpm",pubmatic:"ix_pubm_om",pulsepoint:"ix_pp_om",pxyz:"ix_pxyz_cpm",quantcast:"ix_qua_cpm",rubicon:"ix_rubi_om",sharethrough:"ix_shth_cpm",sonobi:"ix_sbi_om",sovrn:"ix_sovrn_om",triplelift:"ix_tpl_cpm",trustx:"ix_trstx_cpm",indexExchange:"IOM",ix:"IOM",undertone:"ix_undr_cpm"};function t(e){return(100*parseFloat(e)).toFixed()}for(const n in e)or.bidderSettings[n]={adserverTargeting:[{key:e[n],val:function(e){var n=or.getConfig().priceGranularity;return"auto"===n?e.size+"_"+t(e.pbAg):"dense"===n?e.size+"_"+t(e.pbDg):"low"===n?e.size+"_"+t(e.pbLg):"medium"===n?e.size+"_"+t(e.pbMg):"high"===n?e.size+"_"+t(e.pbHg):"custom"===n?e.size+"_"+t(e.pbCg):e.size+"_"+t(e.pbHg)}}]}}(),function(){const e=i.Y.fireEvent("provideSChainConfig");e&&or.que.push((function(){try{if(!window[e.prebidVariable].getConfig("schain"))throw new Error("Could not find publisher's schain in their prebid variable - use manual fallback.");or.setConfig({schain:window[e.prebidVariable].getConfig("schain")})}catch(t){try{const t=e.manualFallback||{};or.setConfig({schain:{validation:"strict",config:{ver:"1.0",complete:null!==t.complete&&void 0!==t.complete?t.complete:1,nodes:[{asi:t.asi,sid:t.sid,hp:null!==t.hp&&void 0!==t.hp?t.hp:1}]}}})}catch(e){rr.errorf(null,"setPublisherSChain: error within manual fallback cpbjs.setConfig(): %o",e)}}}))}(),i.Y.fireEvent("prebidDoneInit",{cpbjs:or})};function sr(){return window.pbjs&&window.pbjs.onEvent}function dr(e){try{window.pbjs.onEvent("beforeRequestBids",(function(e){const t=window.pbjs.adUnits||[],n=t.map((e=>{let{code:t}=e;return t})),i=e.filter((e=>!n.includes(e.code)));i.length>0&&(window.pbjs.adUnits=[...t,...i])})),e&&e()}catch(e){rr.errorf(null,"prebidPostset - listen to pbjs.requestBids: %o",e)}}var cr=function(e){if("prebid"===e)return ar},lr=new function(){var e=new r.Z.SubscriptionLayer;this.subscribeForEvent=function(t,n){e.subscribeForEvent(t,n)};this.load=function(){window.googletag=window.googletag||{},window.googletag.cmd=window.googletag.cmd||[],e.invokeEventCallbacks("preset"),new Promise((function(e,t){var n=document.createElement("script");n.async="true",n.type="text/javascript",n.addEventListener("load",(function(){Promise.all([new Promise((function(e,t){var n=document.createElement("script");n.async="true",n.type="text/javascript",n.addEventListener("load",(function(){e()})),n.addEventListener("error",(function(e){t(e)})),n.src="https://adservice.google.com/adsid/integrator.js?domain="+_n.topmostAccessibleWindow.location.hostname+"&upapi=true",(document.head||document.body||document.documentElement).appendChild(n)})),new Promise((function(e,t){var n=!1;try{if(window.googletag&&window.googletag.getVersion){n=!0;const i=document.createElement("script");i.async="true",i.type="text/javascript",i.addEventListener("load",(function(){e()})),i.addEventListener("error",(function(e){t(e)})),i.src="https://securepubads.g.doubleclick.net/gpt/pubads_impl_"+window.googletag.getVersion()+".js?upapi=true",(document.head||document.body||document.documentElement).appendChild(i)}}catch(e){t("error in getting pubads_impl -> "+e)}if(window.googletag._vars_){var i=window.googletag._vars_,r=[21063911,21063048,21063670,21063817,21063671],o=[];for(var a in i){var s=i[a];if("string"==typeof s&&s.indexOf("pubads_impl_")>-1&&!n)try{n=!0;const i=document.createElement("script");i.async="true",i.type="text/javascript",i.addEventListener("load",(function(){e()})),i.addEventListener("error",(function(e){t(e)})),s.indexOf("?")>-1?i.src=s+"&upapi=true":i.src=s+"?upapi=true",(document.head||document.body||document.documentElement).appendChild(i)}catch(e){t("error in getting pubads_impl -> "+e)}else if(Array.isArray(s))try{var d=s.length;if(r)for(;d--;){const e=s[d];r.indexOf(e)>-1&&s.splice(d,1)}if(o)for(var c=0;c<o.length;c++){const e=o[c];-1===s.indexOf(e)&&s.push(e)}}catch(e){console.error("error in adding/removing eids -> "+e)}}}n||t()}))]).then((function(){e()}),(function(e){t(e)}))})),n.addEventListener("error",(function(){t()})),n.src="//www.googletagservices.com/tag/js/gpt.js?upapi=true",(document.head||document.body||document.documentElement).appendChild(n)}))}},ur=__webpack_require__(228),pr=new r.Z.SubscriptionLayer,hr=!1,fr=function(e){switch(hr||hr||(hr=!0,lr.subscribeForEvent("preset",(function(){mr("dfp")})),lr.subscribeForEvent("postset",(function(){br("dfp")})),ur.k.subscribeForEvent("preset",(function(){mr("prebid")})),ur.k.subscribeForEvent("postset",(function(){br("prebid")}))),e){case"dfp":lr.load();break;case"prebid":ur.k.load()}},gr=function(e,t){pr.subscribeForEvent(e,t)},mr=function(e){pr.invokeEventCallbacks(e)},wr=function(e,t){pr.subscribeForEvent(e,t)},br=function(e){pr.invokeEventCallbacks(e)};const vr=new o.Z({prefix:"defaultCreativeBid: "});function Mr(e,t){var n=[],i=!1;function r(t){var r=e.height+"px",o=e.width+"px",a=e.creativeHTML,s=document.createElement("div");s.className="default-creative-container",s.style.height=r,s.style.width=o;var d=Ln.whitelistingIFrame.createWhitelistingIFrame(e.customWhitelistingIFrameURL);d.className="default-creative-iframe",d.setAttribute("scrolling","no"),d.setAttribute("marginwidth","0"),d.setAttribute("marginheight","0"),d.setAttribute("height",r),d.setAttribute("width",o),s.appendChild(d);const c=()=>{try{if(d.removeEventListener("load",c),d.src===Rn.W)d.contentWindow.postMessage(JSON.stringify({message:"Render Secure Creative",ad:a}),"*");else{var e=d.contentWindow.document;if(navigator.userAgent&&navigator.userAgent.toLowerCase().indexOf("firefox/")>-1){const t=/firefox\/([\d.]+)/;let n=navigator.userAgent.toLowerCase().match(t)[1];n&&parseInt(n,10)<67&&e.open("text/html","replace")}e.write(a),e.close()}i=!0,n.forEach((e=>e()))}catch(e){vr.errorf(null,"auction: createDefaultCreativeBid: renderDefaultCreative: %o",e)}};d.addEventListener("load",c),t.appendChild(s)}var o={ad:e.creativeHTML,bidder:"default-creative",bidderId:"default-creative-"+t.unit.space.name,bidderCode:e.providerName||"default-creative",width:e.width,height:e.height,disableAuctionEventLogging:e.disableAuctionEventLogging},a=new $n.Bid(o,o,$n.Bid.Types.DEFAULT_CREATIVE,void 0,(function(e){r(e.placement)}),void 0,(function(e){i?e():n.push(e)}),void 0);return a}const yr=new o.Z;var _r=new function(){var e,t=!1,o=[],a=[],s=!1;let d,c=_n.topmostAccessibleWindow.localStorage.getItem("btUserCountry");function l(){return window.pbjs&&window.pbjs.adUnits}function u(e){return p(v(e))}function p(t,r){const a=function(){const e=[],t=i.Y.fireEvent("auctionBlockerHook");return t&&e.push(t),e}();return Promise.all(a).then((()=>function(e){const t=[],n=[];return e.forEach((e=>{var r,o,a=Ln.commonBLUtils.getSpaceElement(e);a&&((r=Ki.getByElement(a))||((o=a).alreadyWraped||(fi.hookFunction(o,"setAttribute",fi.Types.SET_ATTRIBUTE_PRE,void 0,!0),o.alreadyWraped=!0),r=new $n.Unit({element:a,space:e}),i.Y.fireEvent("onNewUnitFound",r),Ki.set(r),n.push(r)),r&&r.space==e&&t.push(r))})),function(e){const{AD_UNIT_PATH_PREFIX:t,deriveDataFromUnitForSpaces:n,slotDataBySpaceName:r}=i.Y.fireEvent("newGAMSlotsOnUnitCreation")||{};e.length>0&&(n||r)&&window.googletag.cmd.push((function(){try{e.forEach((e=>{let i,o,a,{unitID:s,element:d,space:c}=e;const l=n&&n.includes(c.name)&&t,u=r&&r[c.name];(l||u)&&(u&&({adUnitPath:i,sizes:o,slotElementId:a}=r[c.name]||{}),!i&&t&&(i="".concat(t).concat(c.name)),o||(o=c.sizes.map((e=>e.split("x").map((e=>parseInt(e,10))))).filter((e=>2===e.length&&!isNaN(e[0])&&!isNaN(e[1])))),a||(d.id||d.setAttribute("id","bt-unit-".concat(s)),a=d.id),i&&o&&o.length>0&&a&&yi(i,o,a))}))}catch(e){Mi.errorf(null,"error defining new GAM slots on Unit creation",e)}}))}(n),t}(t))).then((t=>function(t,r){return new Promise((function(a,l){if(0!==t.length){i.Y.fireEvent("onBeforeInvokeDispatch",{spaces:t.map((e=>e.space))}),function(e){e.forEach((e=>{let{space:t}=e;i.Y.fireEvent("modifySpacesOnBeforeFetching",{space:t})}))}(t);var u={};r&&(u=r.filteringSettings||{}),async function(t,n){const i={definedSlotsFilteringSettings:{dfpEnabled:e.dfp,alwaysFilterByGoogletagSlots:s}};n={...i,...n};let r=t.filter((e=>e.state===$n.Unit.States.PENDING));if(r.length>0){r.forEach((e=>{e.state=$n.Unit.States.CHECKING}));let e=[...r];for(const t of b)if(r=await t(r,n),e=e.filter((e=>{const t=r.includes(e);return t||(e.state=$n.Unit.States.PENDING),t})),0===r.length)break}return r}(t,u).then((function(t){try{if(function(e){e&&0!==e.length&&n.Z.upoSettings.amazonBidderConfiguration.enabled&&e.forEach((e=>{const t=e.space;if(t.prebidSettings.bidders=t.prebidSettings.bidders||[],t.prebidSettings.bidders.some((e=>"amazon"===e.name))||!googletag||!googletag.pubads)return;const i=e.element,r=googletag.pubads().getSlots().find((e=>document.getElementById(e.getSlotElementId())===i)),o=r&&r.getAdUnitPath();o&&t.prebidSettings.bidders.push({id:o+"_amazon_bidder",name:"amazon",params:{pubID:n.Z.upoSettings.amazonBidderConfiguration.pubID,adUnitGPTPath:o}})}))}(t),a(t||[]),!t||0===t.length)return;const r=t.map((e=>e.space));Ln.movePositionService.dispatch(r);const s=t.map((e=>new $n.Auction({unit:e})));if(i.Y.fireEvent("onAuctionGroupStarted",s),function(e){e.forEach((e=>{e.state=$n.Auction.States.DISPATCHED,e.unit.state=$n.Unit.States.DISPATCHED,o.push(e),e.unit.countOfDispatches++,e.unit.lastInvokeTime=new Date,i.Y.fireEvent("onAuctionStarted",{auction:e})}))}(s),_n.topmostAccessibleWindow.__bt_intrnl.stopFlag)return;i.Y.fireEvent("onPrebiddingStarted",s);const l=Pi.dispatchPrebid(s);Promise.all(l).then((function(t){if(i.Y.fireEvent("onPrebiddingEnded",s),_n.topmostAccessibleWindow.__bt_intrnl.stopFlag)return;Pi.dispatchDFP(s).forEach((t=>{t.then((function(t){var n=s.find((e=>e.auctionId==t.auctionId));let r=n.getWinningBid();if(r&&r.type===$n.Bid.Types.PREBID&&0===r.additionalBidsToRender.length&&e.dfp&&n.unit.space.dfpSettings.enabled&&n.cancelAuction(),_n.topmostAccessibleWindow.__bt_intrnl.stopFlag)return;const o=d?function(e,t){const n=["120x600","250x250","300x250","336x280","728x90"],i=["120x600","250x250","300x250","336x280","728x90"];e=e.filter((e=>"RU"===t?n.includes(e):i.includes(e)));let r=e[Math.floor(Math.random()*e.length)];const o="RU"===t?"r":"b",a=function(e,t){const n={"120x600":["120x600-1.jpg","120x600-2.jpg","120x600-3.jpg","120x600-4.jpg","120x600-5.jpg","120x600-6.jpg","120x600-7.jpg","120x600-8.jpg","120x600-9.jpg","120x600-10.jpg","120x600-11.jpg","120x600-12.jpg"],"250x250":["250x250-1.jpg","250x250-2.jpg","250x250-3.jpg","250x250-4.jpg","250x250-5.jpg","250x250-6.jpg","250x250-7.jpg","250x250-8.jpg","250x250-9.jpg","250x250-10.jpg","250x250-11.jpg","250x250-12.jpg"],"300x250":["300x250-1.jpg","300x250-2.jpg","300x250-3.jpg","300x250-4.jpg","300x250-5.jpg","300x250-6.jpg","300x250-7.jpg","300x250-8.jpg","300x250-9.jpg","300x250-10.jpg","300x250-11.jpg","300x250-12.jpg"],"336x280":["336x280-1.jpg","336x280-2.jpg","336x280-3.jpg","336x280-4.jpg","336x280-5.jpg","336x280-6.jpg","336x280-7.jpg","336x280-8.jpg","336x280-9.jpg","336x280-10.jpg","336x280-11.jpg","336x280-12.jpg"],"728x90":["728x90-1.jpg","728x90-2.jpg","728x90-3.jpg","728x90-4.jpg","728x90-5.jpg","728x90-6.jpg","728x90-7.jpg","728x90-8.jpg","728x90-9.jpg","728x90-10.jpg","728x90-11.jpg","728x90-12.jpg"]},i={"120x600":["120x600-13.jpg","120x600-14.jpg"],"250x250":["250x250-13.jpg","250x250-14.jpg"],"300x250":["300x250-13.jpg","300x250-14.jpg"],"336x280":["336x280-13.jpg","336x280-14.jpg"],"728x90":["728x90-13.jpg","728x90-14.jpg"]},r="r"===t?n[e][Math.floor(Math.random()*n[e].length)]:i[e][Math.floor(Math.random()*i[e].length)];return"//ads2ads.net/"+t+"/"+e+"/"+r}(r,o),s=o+"PSA";r=r.split("x");const d="r"===o?"https://youtu.be/EJasSVlSGf8":"https://t.me/lukabekkk/16";return{width:r[0],height:r[1],creativeHTML:'<a href="'+d+'" target="_blank"><img src="'+a+'"></a>',disableAuctionEventLogging:!0,providerName:s}}(n.unit.space.sizes,c):i.Y.fireEvent("getDefaultCreative",{auction:n});if((_n.topmostAccessibleWindow.localStorage.getItem("forceDefaultCreative")&&o||d)&&(r=void 0),!r&&o)r=Mr(o,n),n.addBids([r]);else if(!r){const e=function(e){let t,n,i,r=!1;const o="https://helpua.nazk.gov.ua/?utm_source=adt_f&utm_medium=cpm&utm_campaign=Blockthrough&utm_id=adt_f_traffic";if(["728x90","300x250","120x600","250x250","336x280"].every((o=>{if(e.includes(o)){const e=o.split("x");return n=e[0],t=e[1],i=function(e){const t={"300x250":["300x250-1.jpg","300x250-2.png","300x250-3.jpg","300x250-4.jpg"],"160x600":["160x600-1.jpg","160x600-2.png","160x600-3.jpg","160x600-4.jpg"],"728x90":["728x90-1.jpg","728x90-2.png","728x90-3.jpg","728x90-4.jpg"]},n=t[e][Math.floor(Math.random()*t[e].length)];return"//ads2ads.net/ua/".concat(n)}(o),r=!0,!1}return!0})),r)return{width:n,height:t,creativeHTML:"<a href='".concat(o,"' target='_blank'><img src='").concat(i,"'></a>"),disableAuctionEventLogging:!0,providerName:"uaCharityV2"}}(n.unit.space.sizes);e&&(r=Mr(e,n),n.addBids([r]))}n.subscribeForEvent("auctionRendered",(function(){n.unit.countOfRenders++,i.Y.fireEvent("onAuctionRendered",{auction:n,bid:r}),i.Y.fireEvent("onAuctionRenderedWebsiteHook",{space:n.unit.space,element:n.unit.element,winningBid:r});const e=n.unit.countOfRenders;!function(e,t){let n,i;if(Ti.has(e))Ni.get(e).push(t);else{const r=new Promise(((e,t)=>{n=e,i=t}));Ti.set(e,[n,i]),Ni.set(e,[t]),r.then((()=>{Ni.get(e).forEach((e=>e()))})).finally((()=>{Ti.delete(e),Ni.delete(e)})),xi(e,n,i)}}(n.unit.element,(()=>{e==n.unit.countOfRenders&&(i.Y.fireEvent("onAdViewed",{auction:n,bid:r}),i.Y.fireEvent("onAdViewedWebsiteHook",{space:n.unit.space,element:n.unit.element,winningBid:r}))}))})),n.subscribeForEvent("renderBidDone",(function(e){i.Y.fireEvent("onAuctionEnded",{auction:n,bid:e.successfulyRenderedBid&&r}),i.Y.fireEvent("onAuctionEndedWebsiteHook",{element:n.unit.element,bid:e.successfulyRenderedBid&&r})})),n.renderBid(r),n.unit.state=$n.Unit.States.PENDING,Ji.spaceRefreshOnInterval&&Ji.spaceRefreshOnInterval({space:n.unit.space,unitDispatchCount:n.unit.countOfDispatches})}))}))}))}catch(e){yr.errorf(null,"recovery: filterUnits %o",e)}}))}else a([])}))}(t,r))).then((e=>e.map((e=>e.space))))}function h(e){const t='[id="'.concat(e,'"]');let n;if(n=r.Z.commonUtils.getElementWithSelector(t),!n)return;const i=Ki.getByElement(n);if(i)return i.space;return v().find((e=>{const t=Ln.commonBLUtils.getSpaceElement(e);return t&&t===n}))}c?d="RU"===c||"BY"===c:async function(){return await fetch("https://api.btloader.com/country").then((e=>e.json())).then((e=>e.country))}().then((e=>{c=e,d="RU"===c||"BY"===c,_n.topmostAccessibleWindow.localStorage.setItem("btUserCountry",c)})),this.invoke=function(d){if(_n.topmostAccessibleWindow.__bt_intrnl.stopFlag)return;if(t)return;t=!0,e=d.settings||{};const c=Di.set(d.spaces);var f;s=i.Y.fireEvent("alwaysFilterByGoogletagSlots")||n.Z.upoSettings.amazonBidderConfiguration.enabled,function(e){for(var t in e)if(e.hasOwnProperty(t)&&e[t]){var n=[],r=[],o=ir(t),a=cr(t);o&&n.push(o),a&&r.push(a);var s=i.Y.fireEvent("thirdPartyModulePreset",{type:t}),d=i.Y.fireEvent("thirdPartyModulePostset",{type:t});s&&n.push(s),d&&r.push(d),n.forEach((e=>gr(t,e))),r.forEach((e=>wr(t,e))),fr(t)}}(e),(e.dfp||s)&&function(){const e=window.googletag&&window.googletag.cmd.unshift?"unshift":"push";window.googletag.cmd[e]((function(){const e=window.googletag.defineSlot;if(window.googletag.defineSlot=function(t,n,i){const r=e(t,n,i);return setTimeout((function(){if(r){if(_i(r))return;m(r)}}),0),r},i.Y.fireEvent("overrideDefineOutOfPageSlot")){const e=window.googletag.defineOutOfPageSlot;window.googletag.defineOutOfPageSlot=function(t,n){const i=e(t,n);return setTimeout((function(){if(i){if(_i(i))return;m(i)}}),0),i}}}))}(),window.googletag.cmd.push((function(){window.googletag.pubads().getSlots().forEach((e=>_i(e)))})),f=Di.getAll(),i.Y.fireEvent("listenToNewSpaces",{spaces:f,callback:function(e){if(e){for(let t=0;t<e.length;t++){const n=e[t],i=n&&new $n.Space(n);Di.set(i)}u()}}}),(a=i.Y.fireEvent("movePositionRules")||[])&&a.length>0&&Ln.movePositionService.setMovePositionRules(a),function(){try{history.pushState=(e=history.pushState,function(){const t=e.apply(this,arguments);return window.dispatchEvent(new Event("pushstate")),window.dispatchEvent(new Event("locationChange")),t}),history.replaceState=(e=>function(){const t=e.apply(this,arguments);return window.dispatchEvent(new Event("replacestate")),window.dispatchEvent(new Event("locationChange")),t})(history.replaceState),window.addEventListener("popstate",(()=>{window.dispatchEvent(new Event("locationChange"))}))}catch(e){di.errorf(null,"setupLocationChangeEvent - error: %o",e)}var e}(),li();pi(bi()((()=>{u()}),500)),window.addEventListener("locationChange",(()=>{setTimeout(u,1001)})),Ji.initialize({invokeSpaces:p}),i.Y.addEventListener("websiteHooksGetSpaces",(function(){return Di.getAll()}));let g=i.Y.fireEvent("scrapePrebidAdUnits");g&&("boolean"==typeof g&&(g={}),function(e){var t,o=e.getAdUnits||l,a=e.filterOutAdUnit,s=e.parseAdUnit,d=e.postParsingAdUnits,c=e.parseInterval||1e3,p=[],h=function(){if((t=o()||[]).length>0){for(var e=[],c=[],l=0;l<t.length;l++){const n=t[l];if(!n||p.indexOf(n)>=0)continue;const i=JSON.parse(JSON.stringify(n)),r=s?s(i):i;!r||a&&a(r)||(p.push(n),e.push(r))}if(0===e.length)return;if((e=d?d(e):e).forEach((e=>{if(!e)return;const t=function(e){try{var t={},o=e.selector||r.Z.commonUtils.escapeSelector("#"+e.code),a=e.sizes;if(a||e.mediaTypes&&e.mediaTypes.banner&&e.mediaTypes.banner.sizes&&(a=e.mediaTypes.banner.sizes),!a)return;function l(e){return 2===e.length&&e.every((e=>!Array.isArray(e)&&!isNaN(e)))}function u(e){return"".concat(e[0],"x").concat(e[1])}let p;var s,d,c;p=l(a)?[u(a)]:a.filter(l).map(u),t.id=e.id,t.id||(t.id="space_"+Bn(e.code+"_"+o)),t.id=t.id.substr(0,500),t.name=e.code,t.deviceType=e.deviceType,t.sizes=p,t.selector={position:0,value:o},e.bids?t.prebidSettings={enabled:!0,bidders:null!==(s=null===(d=(c=e.bids).map)||void 0===d?void 0:d.call(c,(e=>(e.params=e.params||{},{id:Sn(t.id,e.bidder,e.params),name:e.bidder,params:e.params}))))&&void 0!==s?s:[]}:t.prebidSettings={enabled:!1,bidders:[]},t.prebidSettings.bidders=vi(t.prebidSettings.bidders);const h=n.Z.SharedObject.getItem("websiteConfig"),f=i.Y.fireEvent("enableComplianceSecondPass");return h.dfpEnabled?t.dfpSettings={adxId:t.name+"_adx",directId:t.name+"_direct",enabled:!0,order:[{params:{},adx:{bidderID:t.name+"_adx",testCompliance:!0},direct:{bidderID:t.name+"_direct"}},{params:{queryParams:f?{}:{ad_type:"text"}},adx:{bidderID:t.name+"_adx",testCompliance:!!f},direct:{bidderID:t.name+"_direct"}}]}:t.dfpSettings={enabled:!1},t}catch(e){Mi.errorf(null,"error in parsing prebid ad unit - err: %o",e)}}(e);var o=t&&new $n.Space(t);o&&(Di.getSpacesByName(o.name).length>0||c.push(o))})),0===c.length)return;Di.set(c),u(c)}};h(),setInterval((function(){h()}),c)}(g)),i.Y.hasEventListener("scrapeGoogletagSlots")&&window.googletag.cmd.push((function(){window.googletag.pubads().getSlots().forEach((e=>{!h(e.getSlotElementId())&&i.Y.fireEvent("scrapeGoogletagSlots",{slot:e})&&Di.set(w(e))}))})),(e.dfp||s)&&window.googletag.cmd.push((function(){window.googletag.pubads().getSlots().forEach((e=>{m(e)}))})),window.__upo_d.getSpaces=function(){return Di.getAll()},window.__upo_d.getUnits=function(){return Ki.getAll()},window.__upo_d.getAuctions=function(){return o},u(c);let b=1;const v=setInterval((function(){15===b&&clearInterval(v),b++,u(c)}),100)};var f,g=[];function m(e){var t=e.getSlotElementId(),n=e.getAdUnitPath(),o=Di.getAll(),a=h(t);if(!a){if(i.Y.fireEvent("useSlotPath"))a=Di.getSpacesByName(n.split("/")[n.split("/").length-1])[0];else{var s=i.Y.fireEvent("customGetSpace",{spaces:o,divId:t,slot:e});s&&(a=o.find((e=>e.name==s.name)))}(a=a&&JSON.parse(JSON.stringify(a)))&&(a.selector.value=r.Z.commonUtils.escapeSelector("#"+t),a.templateSpaceName=a.name,a.name=t,Di.set(a))}!a&&i.Y.fireEvent("scrapeGoogletagSlots",{slot:e})&&Di.set(w(e)),a&&g.indexOf(a)<0&&(g.push(a),clearTimeout(f),f=setTimeout((function(){p(g),g=[]}),100))}function w(t){if(!t)return;if(i.Y.fireEvent("shouldIgnoreGoogletagSlotScraping",{slot:t}))return;var o=t.getSlotElementId();let a=t.getSizes().map((e=>{if(e.getWidth)return e.getWidth()+"x"+e.getHeight()}));a.filter((e=>!!e));var s="adxId_"+o,d="directId_"+o;const c=i.Y.fireEvent("enableComplianceSecondPass");var l={id:o,name:o,staging:!1,selector:{value:r.Z.commonUtils.escapeSelector("#"+o),position:n.Z.consts.selectorPosition.APPEND_CHILD},sizes:a,prebidSettings:{enabled:!0,bidders:[]},dfpSettings:{adxId:s,directId:d,enabled:e.dfp,order:[{params:{},adx:{bidderID:s,testCompliance:!0},direct:{bidderID:d}},{params:{queryParams:c?{}:{ad_type:"text"}},adx:{bidderID:s,testCompliance:!!c},direct:{bidderID:d}}]}};return l.prebidSettings.bidders=[],new $n.Space(l)}const b=[Qi,qi,$i,er,tr];function v(e){const t=e||Di.getAll();return Ki.purgeUnitsWithNoElementOnPage(),t.filter((e=>!Ki.getBySpace(e)))}};function Dr(e){return _n.topmostAccessibleWindow.location.hostname.indexOf(e)>-1}const Er={isSite:Dr,isSiteOneOf:function(e){return e.some((function(e){return Dr(e)}))},showElement:function(e){e&&"none"===window.getComputedStyle(e).display&&e.style.setProperty("display","","")},hasClass:function(e,t){if(e&&t)return(" "+e.className+" ").indexOf(" "+t+" ")>-1},removeClass:function(e,t){if(!t||!e)return;const n=new RegExp("\\b"+e+"\\b","g");let i=t.className;i=i.replace(n,""),t.className=i},addClass:function(e,t){if(!t||!e)return;const n=t.className;n.indexOf(e)>-1||(""!==n&&(e=" "+e),t.className=n+e)}};const Tr=new o.Z({prefix:"main: "});window.__upo_d=window.__upo_d||{},window.__upo_d.v="v2",_n.topmostAccessibleWindow.__bt_intrnl=_n.topmostAccessibleWindow.__bt_intrnl||{},window.googletag=window.googletag||{},window.googletag.cmd=window.googletag.cmd||[];var Nr={"contentEnabled":true,"mobileContentEnabled":true,"dfpEnabled":true,"spaces":{}};let zr,xr;var Br=Nr.spaces||{},Sr="api.btloader.com";const kr=n.Z.upoSettings.staticDomain,Zr=n.Z.upoSettings.recoveryScriptVersion;(_n.topmostAccessibleWindow.location.href.indexOf("bt_debug=true")>=0||"true"===_n.topmostAccessibleWindow.localStorage.getItem("bt_debug"))&&(Nr.dfpEnabled="true"===_n.topmostAccessibleWindow.localStorage.getItem("forceGAM")||Nr.dfpEnabled,Nr.mobileContentEnabled="true"===_n.topmostAccessibleWindow.localStorage.getItem("forceMobileContent")||Nr.mobileContentEnabled,Nr.contentEnabled="true"===_n.topmostAccessibleWindow.localStorage.getItem("forceContent")||Nr.contentEnabled);var Ir,Yr={websiteData:Nr,scriptSettings:si,apiDomain:Sr,staticDomain:kr,websiteID:"5673650381389824",organizationID:"5714937848528896",dfpEnabled:Nr.dfpEnabled,prebidEnabled:!1,mobileContentEnabled:Nr.mobileContentEnabled,contentEnabled:Nr.contentEnabled,recoveryScriptVersion:Zr};window.__upo_d.websiteConfig=Yr,n.Z.SharedObject.setItem("websiteConfig",Yr);var Hr=function(){return{browser:Cn.Xh(),device:Cn.Uh(),platform:Cn.Jv(),isMobile:Cn.tq()}};var Xr=function(){Cr(window),Wr(),Ln.whitelistingIFrame.setupWhitelistingIFrameSettings().then(Rr),function(){window.addEventListener("message",(e=>{const{message:t,blocklistedCreatives:i}=e.data;"Get Blocklist Creatives"===t&&n.Z.SharedObject.setItem("creativesIdBlocklist",i)}));const e=Ln.whitelistingIFrame.createWhitelistingIFrame(Rn.W);e.style.width="0px",e.style.height="0px",e.style.setProperty("display","none","important"),e.addEventListener("load",(()=>{e.contentWindow.postMessage({message:"Get Blocklist Creatives"},"https://".concat(Rn.I.staticDomain))})),document.body?document.body.appendChild(e):window.addEventListener("DOMContentLoaded",(function(){document.body.appendChild(e)}))}(),i.Y.fireEvent("clearSpaces")&&(Br=[]),Or()},Or=function(){const e=[...Br],t=i.Y.fireEvent("customSpacesFilter",{spaces:e});t&&(Br=Br.filter((e=>t.some((t=>t.id===e.id)))))},Rr=function(){const e=Ln.whitelistingIFrame.createWhitelistingIFrame();e.addEventListener("load",(function(){zr=e,xr=e.src===Rn.W,n.Z.SharedObject.setItem("whitelistingIFrame",zr),i.Y.fireEvent("whitelistingIFrameLoaded",{whitelistingIFrame:zr})})),e.style.width="0px",e.style.height="0px",e.style.display="none",document.body?document.body.appendChild(e):window.addEventListener("DOMContentLoaded",(function(){document.body.appendChild(e)}))},Cr=function(e){e&&function(e,t){if(e.grumi){var n=document.createElement("iframe");n.style="display:none;width:1px;height:1px;",n.addEventListener("load",(function(){n.done||(n.done=!0,e.Node.prototype.appendChild=n.contentWindow.Node.prototype.appendChild,e.HTMLElement.prototype.appendChild=n.contentWindow.Node.prototype.appendChild,t())})),ui((function(){document.body.appendChild(n)}))}else t()}(e,(function(){try{e.XMLHttpRequest&&fi.hookFunction(e.XMLHttpRequest.prototype,"open",fi.Types.XHR_OPEN_PRE,void 0,!0),fi.hookFunction(e,"fetch",fi.Types.FETCH_PRE,void 0,!0),e.HTMLElement&&fi.hookFunction(e.HTMLElement.prototype,"insertBefore",fi.Types.INSERT_BEFORE_PRE,void 0,!0),e.HTMLElement&&fi.hookFunction(e.HTMLElement.prototype,"appendChild",fi.Types.APPEND_CHILD_PRE,fi.Types.APPEND_CHILD_POST,!0),e.HTMLImageElement&&fi.hookFunction(e.HTMLImageElement.prototype,"setAttribute",fi.Types.IMG_SET_ATTRIBUTE_PRE,void 0,!0),fi.hookFunction(e,"open",fi.Types.WIN_OPEN_PRE,void 0,!0),e.HTMLElement&&fi.hookPropertySetter(e.HTMLElement.prototype,"innerHTML",fi.Types.HTML_ELEMENT_INNERHTML_PRE,void 0,!0),e.HTMLElement&&fi.hookFunction(e.HTMLElement.prototype,"hasChildNodes",fi.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,void 0,!0),Ar(e)}catch(e){Tr.errorf(null,"`createHooksOnWindow` - %o",e)}}))},Ar=function(e){for(var t=n.Z.consts.htmlElements,i=0;i<t.length;i++)e[t[i]]&&fi.hookPropertySetter(e[t[i]].prototype,"src",fi.Types.HTML_SRC_PROP_PRE,void 0,!0)},Wr=function(){fi.addEventListener(fi.Types.HTML_SRC_PROP_PRE,(function(e){var t=e.data;if("object"==typeof t[0]&&t[0].toString&&(t[0]=t[0].toString()),r.Z.urlValidations.isWhitelistURL(t[0],this.tagName))t[0]=r.Z.addAcceptableParam(t[0]);else if(r.Z.urlValidations.isSyncUrl(t[0],this.tagName)&&zr){if(xr){const e="new window.Image().src = '"+t[0]+"'";return zr.contentWindow.postMessage({type:"eval",code:e},"*"),t[0]}return(new zr.contentWindow.Image).src=t[0]}})),fi.addEventListener(fi.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,(function(e){try{if(this.classList.contains("up-show"))return!1;if(this.childNodes&&this.childNodes.length>0){for(var t=!1,n=0;n<this.children.length;n++)if(this.children[n].classList.contains("up-show")){t=!0;break}if(t)return!1}}catch(e){Tr.errorf(null,"`hasChildNodes` hook - %o",e)}})),fi.addEventListener(fi.Types.HTML_ELEMENT_INNERHTML_POST,(function(e){if(this&&this.classList&&"adsbygoogle"===this.classList[0]){var t=this.querySelector("iframe"),n=t.contentWindow;"about:blank"!==t.src&&""!==t.src||Cr(n);var i=n.document.write;n.document.write=function(e){e&&e.indexOf("show_ads_impl.js")>-1&&(e=r.Z.addAcceptableParam(e)),i.call(this,e)}}})),fi.addEventListener(fi.Types.XHR_OPEN_PRE,(function(e){var t=e.data;r.Z.urlValidations.isWhitelistURL(t[1],"SCRIPT")&&(t[1]=r.Z.addAcceptableParam(t[1]))})),fi.addEventListener(fi.Types.IMG_SET_ATTRIBUTE_PRE,(function(e){var t=e.data;if("srcset"===t[0].toLowerCase()){this.src&&r.Z.urlValidations.isWhitelistURL(this.src,this.tagName)&&(this.src=r.Z.addAcceptableParam(this.src));for(var n=t[1].split(","),i=0;i<n.length;i++){var o=n[i],a=(o=o.trim()).split(" ")[0],s=o.split(" ")[1]||"";r.Z.urlValidations.isWhitelistURL(a,this.tagName)&&(o=r.Z.addAcceptableParam(a)+" "+s,n[i]=o)}t[1]=n.join(",")}else"src"===t[0].toLowerCase()&&r.Z.urlValidations.isWhitelistURL(t[1],this.tagName)&&(t[1]=r.Z.addAcceptableParam(t[1]))})),fi.addEventListener(fi.Types.INSERT_BEFORE_PRE,(function(e){var t=e.data;i.Y.fireEvent("InsertBeforeWebsiteHooksIntercept",{element:t[0]}),["SCRIPT","IFRAME"].indexOf(t[0].tagName)>-1&&t[0].src&&r.Z.urlValidations.isWhitelistURL(t[0].src,t[0].tagName)&&(t[0].src=r.Z.addAcceptableParam(t[0].src)),"LINK"===t[0].tagName&&t[0].href&&r.Z.urlValidations.isWhitelistURL(t[0].href,t[0].tagName)&&(t[0].href=r.Z.addAcceptableParam(t[0].href))})),fi.addEventListener(fi.Types.APPEND_CHILD_PRE,(function(e){var t=e.data;if(t[0]&&t[0].src&&0===t[0].src.indexOf("blob:"))e.shouldStop=!0;else{if(t[0].children&&t[0].children.length>0)for(var n=0;n<t[0].children.length;n++){var i=t[0].children[n];if(i.src&&r.Z.urlValidations.isWhitelistURL(i.src,i.tagName)&&(i.src=r.Z.addAcceptableParam(i.src)),i.src&&r.Z.urlValidations.isSyncUrl(i.src,i.tagName)&&zr){if(xr){const e="new Image().src = '"+t[0].src+"'";return zr.contentWindow.postMessage({type:"eval",code:e},"*"),t[0]}return zr.contentDocument.body.appendChild(t[0])}}if("LINK"===t[0].tagName&&t[0].href&&r.Z.urlValidations.isWhitelistURL(t[0].href,t[0].tagName)&&(t[0].href=r.Z.addAcceptableParam(t[0].href)),["SCRIPT","IFRAME"].indexOf(t[0].tagName)>-1&&t[0].src&&r.Z.urlValidations.isWhitelistURL(t[0].src,t[0].tagName)&&(t[0].src=r.Z.addAcceptableParam(t[0].src)),r.Z.urlValidations.isSyncUrl(t[0].src,t[0].tagName)&&zr){if(xr){const e="new Image().src = '"+t[0].src+"'";return zr.contentWindow.postMessage({type:"eval",code:e},"*"),t[0]}return zr.contentDocument.body.appendChild(t[0])}}})),fi.addEventListener(fi.Types.APPEND_CHILD_POST,(function(e){var t=e.data;"IFRAME"!==t.tagName||"about:blank"!==t.src&&""!==t.src||Cr(t.contentWindow)})),fi.addEventListener(fi.Types.WIN_OPEN_PRE,(function(e){if(e.data[0]&&(e.data[0].indexOf("clickout.sharethrough.com")>-1||e.data[0].indexOf("3lift.com/pass")>-1)&&zr&&!xr)return zr.contentWindow.open(e.data[0])})),fi.addEventListener(fi.Types.SET_ATTRIBUTE_PRE,(function(e){var t=e.data[0],n=e.data[1];"class"===t&&this.className.indexOf("up-show")>=0&&n.indexOf("up-show")<0&&(e.data[1]=e.data[1]+" up-show")}))},jr=function(){window.uponit=window.uponit||{que:[]},window.uponit.addModifier=function(e,t){window.uponit.modifiers=window.uponit.modifiers||{},window.uponit.modifiers[e]=window.uponit.modifiers[e]||[],window.uponit.modifiers[e].push(t)};for(var e=0;e<window.uponit.que.length;e++){var t=window.uponit.que[e];try{t()}catch(e){Tr.errorf(null,"window.uponit.que - %o",e)}}window.uponit.que.push=function(e){e()}};const Vr=e=>{const t=Object.entries(e).map((e=>{let[t,n]=e;const r={};r.id=t,r.name=n.name,r.staging=n.staging,r.deviceType=n.device_type,r.selector={position:n.selector.position,value:n.selector.value},r.sizes=n.sizes;const o=n.prebids&&Object.keys(n.prebids).length>0;r.prebidSettings={enabled:o,bidders:[]},o&&Object.entries(n.prebids).forEach((e=>{let[t,n]=e;const i={id:t,name:n.bidder,params:n.params};r.prebidSettings.bidders.push(i)}));const a=i.Y.fireEvent("enableComplianceSecondPass");return r.dfpSettings={adxId:n.adx,directId:n.direct,enabled:Yr.dfpEnabled&&"0"!=n.adx,order:[{params:{},adx:{bidderID:n.adx,testCompliance:!0},direct:{bidderID:n.direct}},{params:{queryParams:a?{}:{ad_type:"text"}},adx:{bidderID:n.adx,testCompliance:!!a},direct:{bidderID:n.direct}}]},[t,r]}));return Object.fromEntries(t)};var Fr=function(e){var t=[];for(var n in e)if(e.hasOwnProperty(n)){var i=e[n];i.id=n;var r=new $n.Space(i);t.push(r)}return t};!function(){if(window.uponitAlreadyLoaded)return;window.uponitAlreadyLoaded=!0,c.init(Sr,{secure:!0});try{mi.init(),zn.Verifications.run(),zn.Report.init()}catch(e){Tr.errorf(null,"init - initializing log, verification, and report layers - %o",e)}Ir=Hr(),window.__upo_d.isMobile=Ir.isMobile;var e={browser:Ir.browser,device:Ir.device,platform:Ir.platform,isMobile:Ir.isMobile};i.Y.addEventListener("getUserEnvDataWebsiteHooks",(function(){return e})),window.__upo_d.userEvnData=e,function(){try{window.__tcfapi("addEventListener",0,(function(e,t){if(!t||"useractioncomplete"!==e.eventStatus&&"tcloaded"!==e.eventStatus){if(!t){var n="Unable to attach event listener. tcfapi does not adhere to IAB spec. ";n+="listenerSuccess: "+t+". ",e&&(n+="eventStatus: "+e.eventStatus+"."),i.Y.fireEvent("consentData",{error:{message:n}})}}else i.Y.fireEvent("consentData",{tcData:e})}))}catch(e){i.Y.fireEvent("consentData",{error:e})}}(),function(){try{const e=new o.Z({prefix:"hook: "});window.eval.call(window,"(function (CustomEvents, websiteConfig, lg, hookUtils) {\n"+atob("Y29uc3QgdXNlckVudkRhdGEgPSBDdXN0b21FdmVudHMuZmlyZUV2ZW50KCdnZXRVc2VyRW52RGF0YVdlYnNpdGVIb29rcycpOwpjb25zdCBpc01vYmlsZSA9IHVzZXJFbnZEYXRhPy5pc01vYmlsZTsKCi8vIEZyZWVzdGFyIHdlYnNpdGVzIGNhbiBoYXZlIGVpdGhlciBGcmVlc3RhciAoYGZzcHJlYmlkYCkgb3IgU29ydGFibGUgKGBwYmpzU29ydGFibGVgKSBQcmViaWQgdmFyaWFibGUKLy8gZGVwZW5kaW5nIG9uIHRoaXMgd2UgYXBwbHkgZGlmZmVyZW50IHNldHRpbmdzCkN1c3RvbUV2ZW50cy5hZGRFdmVudExpc3RlbmVyKCdwcmViaWREb25lSW5pdCcsIGZ1bmN0aW9uIChldmVudCkgewogIC8vIFNldCB1cCBQRyBmb3IgU29ydGFibGUgd2Vic2l0ZXMgb25seSBbQU0tMjc1N10KICBpZiAod2luZG93LnBianNTb3J0YWJsZSkgewogICAgdmFyIGNwYmpzID0gZXZlbnQuZGF0YS5jcGJqczsKICAgIGNwYmpzWydxdWUnXS5wdXNoKGZ1bmN0aW9uICgpIHsKICAgICAgY3BianNbJ3NldENvbmZpZyddKHsKICAgICAgICBwcmljZUdyYW51bGFyaXR5OiB7CiAgICAgICAgICBidWNrZXRzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBpbmNyZW1lbnQ6IDAuMDEsCiAgICAgICAgICAgICAgbWF4OiAzLAogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgaW5jcmVtZW50OiAwLjAyLAogICAgICAgICAgICAgIG1heDogOCwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGluY3JlbWVudDogMC4wNSwKICAgICAgICAgICAgICBtYXg6IDEyLAogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgaW5jcmVtZW50OiAwLjEsCiAgICAgICAgICAgICAgbWF4OiAzMCwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGluY3JlbWVudDogMSwKICAgICAgICAgICAgICBtYXg6IDEwMCwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGluY3JlbWVudDogMTAsCiAgICAgICAgICAgICAgbWF4OiAzMDAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICBdLAogICAgICAgIH0sCiAgICAgIH0pOwogICAgfSk7CiAgfQp9KTsKCkN1c3RvbUV2ZW50cy5hZGRFdmVudExpc3RlbmVyKCdzY3JhcGVQcmViaWRBZFVuaXRzJywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgZXZlbnQuaG9va0ZpbGVEYXRhID0gewogICAgZ2V0QWRVbml0czogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gKAogICAgICAgICh3aW5kb3cuZnNwcmViaWQgJiYgd2luZG93LmZzcHJlYmlkLmFkVW5pdHMpIHx8CiAgICAgICAgKHdpbmRvdy5wYmpzU29ydGFibGUgJiYgd2luZG93LnBianNTb3J0YWJsZS5hZFVuaXRzKQogICAgICApOwogICAgfSwKICAgIHBhcnNlQWRVbml0OiBwYXJzZUFkVW5pdCwKICAgIGZpbHRlck91dEFkVW5pdDogZmlsdGVyT3V0QWRVbml0LAogIH07CiAgLy8gcmV0dXJuIHVuZGVmaW5lZCBzbyB0aGF0IHNjcmlwdCBzZXR0aW5ncyBldmVudCBsaXN0ZW5lciBpcyBjYWxsZWQKfSk7Cgp2YXIgcGFyc2VBZFVuaXQgPSBmdW5jdGlvbiAoYWRVbml0KSB7CiAgLy8gUGFyc2UgU29ydGFibGUgYWQgdW5pdHMgW0FNLTI3NTddCiAgaWYgKHdpbmRvdy5wYmpzU29ydGFibGUpIHsKICAgIC8vIE1hcCBhZCB1bml0cyB0byB0aGUgY29ycmVjdCBESVZzLCBQdWIgaGFzIGR5bmFtaWMgRElWIElEcyBhbmQgdGhleSBhcmUgc3RvcmVkIGluIGBhZFVuaXQuX3NydElkYAogICAgYWRVbml0LmNvZGUgPSBhZFVuaXQuX3NydElkOwogICAgcmV0dXJuIGFkVW5pdDsKICB9CgogIC8vIFBhcnNlIEZyZWVzdGFyIGFkIHVuaXRzIFtBTS0yNzU3XQogIHZhciBjb2RlUGFydHMgPSBhZFVuaXQuY29kZSAmJiBhZFVuaXQuY29kZS5zcGxpdCgnLycpOwoKICBhZFVuaXQuY29kZSA9IGNvZGVQYXJ0c1tjb2RlUGFydHMubGVuZ3RoIC0gMV07CiAgYWRVbml0LnNlbGVjdG9yID0gJ1tpZD0iJyArIGFkVW5pdC5jb2RlICsgJyJdJzsKCiAgLy8gUmVtb3ZlIDNsaWZ0IG1vYmlsZSBiaWRkZXIgd2hlbiBydW5uaW5nIHRoZSBzY3JpcHQgaW4gYSBkZXNrdG9wIGJyb3dzZXIKICBpZiAoYWRVbml0LmJpZHMgJiYgIXdpbmRvd1snX191cG9fZCddWydpc01vYmlsZSddKSB7CiAgICBhZFVuaXQuYmlkcyA9IGFkVW5pdC5iaWRzLmZpbHRlcihmdW5jdGlvbiAoYmlkU2V0dGluZ3MpIHsKICAgICAgcmV0dXJuICEoCiAgICAgICAgYmlkU2V0dGluZ3MucGFyYW1zICYmCiAgICAgICAgYmlkU2V0dGluZ3MucGFyYW1zLmludmVudG9yeUNvZGUgJiYKICAgICAgICBiaWRTZXR0aW5ncy5wYXJhbXMuaW52ZW50b3J5Q29kZS5pbmRleE9mKCdtb2JpbGUnKSAhPT0gLTEKICAgICAgKTsKICAgIH0pOwogIH0KCiAgLy8gW0FNLTU1MV0gLSBSZW1vdmUgYmlkcyB3aXRoIDk3MHgyNTAgc2l6ZSBpbm5lciBjb25maWd1cmF0aW9uIGZyb20gdGhlIGFkVW5pdCAtIG9ubHkgZm9yIHNoYXJldGhyb3VnaCBhbmQgdHJpcGxlbGlmdCBiaWRzCiAgYWRVbml0ID0gcmVtb3ZlU2hhcmV0aHJvdWdoQW5kVHJpcGxlbGlmdDk3MHgyNTBCaWRzKGFkVW5pdCk7CgogIHJldHVybiBhZFVuaXQ7Cn07CgovLyBbQU0tNTUxXSAtIFJlbW92ZSBiaWRzIHdpdGggOTcweDI1MCBzaXplIGlubmVyIGNvbmZpZ3VyYXRpb24gZnJvbSB0aGUgYWRVbml0IC0gb25seSBmb3Igc2hhcmV0aHJvdWdoIGFuZCB0cmlwbGVsaWZ0IGJpZHMKZnVuY3Rpb24gcmVtb3ZlU2hhcmV0aHJvdWdoQW5kVHJpcGxlbGlmdDk3MHgyNTBCaWRzKGFkVW5pdCkgewogIHRyeSB7CiAgICB2YXIgYmlkZGVycyA9IFtdOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhZFVuaXQuYmlkcy5sZW5ndGg7IGkrKykgewogICAgICB2YXIgYmlkID0gYWRVbml0LmJpZHNbaV07CiAgICAgIGlmICgKICAgICAgICAoYmlkLmJpZGRlciA9PT0gJ3RyaXBsZWxpZnQnIHx8IGJpZC5iaWRkZXIgPT09ICdzaGFyZXRocm91Z2gnKSAmJgogICAgICAgIGJpZC5zaXplICYmCiAgICAgICAgYmlkLnNpemVbMF0gJiYKICAgICAgICBiaWQuc2l6ZVswXVswXSA9PT0gOTcwICYmCiAgICAgICAgYmlkLnNpemVbMF1bMV0gPT09IDI1MAogICAgICApIHsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgICBiaWRkZXJzLnB1c2goYmlkKTsKICAgIH0KICAgIGFkVW5pdC5iaWRzID0gYmlkZGVyczsKICB9IGNhdGNoIChlKSB7CiAgICBsZy5lcnJvcmYobnVsbCwgJ2Vycm9yIHJlbW92aW5nIGJpZCBmcm9tIGFkIHVuaXQ6ICVvJywgZSk7CiAgfQogIHJldHVybiBhZFVuaXQ7Cn0KCi8vIGRlY2xhcmVkIGhlcmUsIGFuZCBkZWZpbmVkIGluIGEgRnJlZXN0YXIgd2Vic2l0ZSBob29rIGZpbGUgaWYgZGVzaXJlZAovLyBhdm9pZCB1c2luZyBgd2Vic2l0ZUhvb2tGaWx0ZXJPdXRBZFVuaXRgIGluIGZhdm9yIG9mIFNldHRpbmdzCnZhciB3ZWJzaXRlSG9va0ZpbHRlck91dEFkVW5pdDsKZnVuY3Rpb24gZmlsdGVyT3V0QWRVbml0KGFkVW5pdCkgewogIC8vIEZpbHRlciBvdXQgYWQgdW5pdCBpZiB0aGlzIGZ1bmN0aW9uIGlzIGRlZmluZWQgaW4gYSBGcmVlc3RhciB3ZWJzaXRlIGhvb2sgZmlsZSAodG8gYXZvaWQgYWRkaW5nIHRoYXQgbG9naWMgaGVyZSBhbmQgZ3Jvd2luZyB0aGUgb3JnIGhvb2sgZmlsZSkKICBpZiAod2Vic2l0ZUhvb2tGaWx0ZXJPdXRBZFVuaXQpIHsKICAgIHJldHVybiB3ZWJzaXRlSG9va0ZpbHRlck91dEFkVW5pdChhZFVuaXQpOwogIH0KfQoKLy8gRXh0ZW5kIHRoaXMgb3JnIGhvb2sgd2l0aCBgZ2V0U2l6ZXNUb1JlbW92ZUZvclNwYWNlT25XZWJzaXRlYCB3aGljaCBjYW4gYmUgZGVmaW5lZCBhcyBhIGZ1bmN0aW9uIGluIGFueSB3ZWJzaXRlIGhvb2sKLy8gYXZvaWQgdXNpbmcgYGdldFNpemVzVG9SZW1vdmVGb3JTcGFjZU9uV2Vic2l0ZWAgaW4gZmF2b3Igb2YgU2V0dGluZ3MKdmFyIGdldFNpemVzVG9SZW1vdmVGb3JTcGFjZU9uV2Vic2l0ZTsKQ3VzdG9tRXZlbnRzLmFkZEV2ZW50TGlzdGVuZXIoJ3NpemVzVG9SZW1vdmVCeVNwYWNlJywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgdmFyIHNwYWNlTmFtZSA9IGV2ZW50LmRhdGEuc3BhY2VOYW1lOwoKICBldmVudC5ob29rRmlsZURhdGEgPSBnZXRTaXplc1RvUmVtb3ZlRm9yU3BhY2VPbldlYnNpdGUKICAgID8gZ2V0U2l6ZXNUb1JlbW92ZUZvclNwYWNlT25XZWJzaXRlKHNwYWNlTmFtZSkKICAgIDogW107CiAgLy8gcmV0dXJuIHVuZGVmaW5lZCBzbyB0aGF0IHNjcmlwdCBzZXR0aW5ncyBldmVudCBsaXN0ZW5lciBpcyBjYWxsZWQKfSk7CgppZiAod2luZG93LmZyZWVzdGFyICYmIHdpbmRvdy5mcmVlc3Rhci5mc2RhdGEgJiYgd2luZG93LmZyZWVzdGFyLmZzZGF0YS5zaXRlSWQpIHsKICBDdXN0b21FdmVudHMuYWRkRXZlbnRMaXN0ZW5lcigncHJvdmlkZVNDaGFpbkNvbmZpZycsIGZ1bmN0aW9uIChldmVudCkgewogICAgcmV0dXJuIHsKICAgICAgcHJlYmlkVmFyaWFibGU6ICdmc3ByZWJpZCcsCiAgICAgIG1hbnVhbEZhbGxiYWNrOiB7CiAgICAgICAgYXNpOiAnZnJlZXN0YXIuaW8nLAogICAgICAgIHNpZDogd2luZG93LmZyZWVzdGFyLmZzZGF0YS5zaXRlSWQudG9TdHJpbmcoKSwKICAgICAgfSwKICAgIH07CiAgfSk7Cn0KCi8vIFJlc2V0IFhNTEh0dHBSZXF1ZXN0IGJhY2sgdG8gbmF0aXZlIGltcGxlbWVudGF0aW9uIGlmIHB1YiBoYXMgb3ZlcndyaXR0ZW4gaXQgW01heSA4IDIwMjAgKyBBTS0xMzA4ICsgQU0tMjM4MF0KaWYgKAogIGhvb2tVdGlscy5pc1NpdGVPbmVPZihbCiAgICAnaW5uZXJzdHJlbmd0aC56b25lJywKICAgICdicm9hZGNhc3R0cml2aWEuY29tJywKICAgICd0aGV0cml2aWFidWZmLmNvbScsCiAgICAnZGFpbHlzdGVhbHMuY29tJywKICBdKQopIHsKICB0cnkgewogICAgdmFyIG5hdGl2ZVhNTEh0dHBSZXF1ZXN0SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgIGlmICh3aW5kb3cuWE1MSHR0cFJlcXVlc3QudG9TdHJpbmcoKS5pbmRleE9mKCduYXRpdmUgY29kZScpID09PSAtMSkgewogICAgICAgIHZhciBpZnIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlmcik7CiAgICAgICAgaWZyLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJ25vbmUnKTsKICAgICAgICB3aW5kb3cuWE1MSHR0cFJlcXVlc3QgPSBpZnIuY29udGVudFdpbmRvdy5YTUxIdHRwUmVxdWVzdDsKICAgICAgICBjbGVhckludGVydmFsKG5hdGl2ZVhNTEh0dHBSZXF1ZXN0SW50ZXJ2YWwpOwogICAgICB9CiAgICB9LCAzMDApOwogIH0gY2F0Y2ggKGUpIHsKICAgIGxnLmVycm9yZihudWxsLCAnZXJyb3IgcmVzZXR0aW5nIGlmcmFtZTogJW8nLCBlKTsKICB9Cn0KCkN1c3RvbUV2ZW50cy5hZGRFdmVudExpc3RlbmVyKCdrZWVwQlREb21haW5XaGl0ZWxpc3RpbmdJRnJhbWUnLCBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHRydWU7Cn0pOwoKdmFyIHN0eWxlRWxlbWVudDsKdmFyIHN0eWxlUnVsZXMgPSBbCiAgJyNmcy1zdGlja3ktYnJhbmRpbmctZWxtLCAudXAtc2hvdyA+IC5mcy1icmFuZGluZy1lbG0geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0nLAogIC8vIEFkIGNvbnRhaW5lciAoLmFob3ZlciBvciAjZ29vZ2xlX2Fkc19pZnJhbWVfLy4uLiBkaXYpIGhhcyB0aGVpciBzdHlsZXMgd2Ugc2V0IGVyYXNlZCBmb3IgZm9vdGVyIHVuaXRzLCBuZWVkIHRoaXMgc3R5bGUgdG8gY2VudGVyIHRoZSBhZCBsYWJlbCkKICAnLnVwLXNob3cgPiAuYWhvdmVyLCAudXAtc2hvdyA+IFtpZF49Imdvb2dsZV9hZHNfaWZyYW1lXyJdIHsgcG9zaXRpb246IHJlbGF0aXZlOyB9JywKICAvLyBFbnN1cmUgaWYgSEIgd2lucyBhbmQgR0FNIGlzIGVuYWJsZWQsIHRoYXQgdGhlIDF4MSBHQU0gYWQgaWZyYW1lIHdlIHJlbmRlciB1bmRlcm5lYXRoIHRoZSBIQiBhZCBjcmVhdGl2ZSBkb2Vzbid0IGFkZCBleHRyYSBzcGFjZSB0byB0aGUgZm9vdGVyIFtBTS00OTldCiAgLy8gKEZvciBhbiBleHBsYW5hdGlvbiBvbiB3aHkgd2UgcmVuZGVyIHRoaXMgMXgxIGlmcmFtZSAtIHNlZSBgcmVjb3ZlcnkuanNgIGxpbmUgODMxICh3aGVyZSB3ZSBwcm9jZXNzIHRoZSBBZCBTZXJ2ZXIgKEdBTSkgYXVjdGlvbiByZXNwb25zZXMpKQogICcjc2xvdC1mb290ZXItd3JhcHBlciB7IGhlaWdodDogYXV0bzsgbGluZS1oZWlnaHQ6IDFweCB9JywKXS5qb2luKCcgJyk7CgpzdHlsZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwpzdHlsZUVsZW1lbnQudGV4dENvbnRlbnQgPSBzdHlsZVJ1bGVzOwooZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5ib2R5IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuYXBwZW5kQ2hpbGQoc3R5bGVFbGVtZW50KTsKCi8vIGRvIG5vdCBlbmFibGUgQW1hem9uIG9uICdyZXV0ZXJzLmNvbScsIGFzIHRoZSBQdWIgZG9lc24ndCBhbHdheXMgY3JlYXRlIEdQVCBzbG90cyB0aGVyZSBhbmQgd2UgYXJlIG5vdCBhYmxlIHRvIHJ1biBIQiBhdCBhbGwgW0FNLTI1NTddCmlmICghaG9va1V0aWxzLmlzU2l0ZSgncmV1dGVycy5jb20nKSkgewogIEN1c3RvbUV2ZW50cy5hZGRFdmVudExpc3RlbmVyKCdhbWF6b25CaWRkZXJDb25maWd1cmF0aW9uJywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICByZXR1cm4gewogICAgICBwdWJJRDogJzBhYjE5OGRkLWIyNjUtNDYyYS1hZTM2LTc0ZTE2M2FkNjE1OScsCiAgICB9OwogIH0pOwoKICB3aW5kb3cudXBvX2Ftem4gPSB7CiAgICBhbWF6b25DUE1DaGFydDogewogICAgICAxNjg3NDAwOiA2LjE1LAogICAgICAnMXBwd2w0dyc6IDAuMDUsCiAgICAgICcxdTVxMzljJzogMC4wOSwKICAgICAgJzFsYTMzMGcnOiAwLjEzLAogICAgICAnMXdkbXViayc6IDAuMTcsCiAgICAgICcxM3FhcmswJzogNi41NSwKICAgICAgJzF6dHppOCc6IDYuNywKICAgICAgdHFwZHMwOiA2LjgsCiAgICAgIGU3YzRjZzogNi45LAogICAgICBpbjVtZ3c6IDcsCiAgICAgICcxeTkyM25rJzogNy4wNSwKICAgICAgd2lsYmxzOiA3LjIsCiAgICAgICcxbjVpY2NnJzogNy4yNSwKICAgICAgb3F3b3cwOiA3LjQsCiAgICAgICcyanQ2OXMnOiA3LjUsCiAgICAgIHF5dGZ5ODogNy42LAogICAgICAnMTgxNGd6ayc6IDcuNzUsCiAgICAgIGx1MHlkYzogNy44LAogICAgICAnMWE5MTgxcyc6IDcuOTUsCiAgICAgIHFqdTF2azogOSwKICAgICAgdGJwenBjOiAxMCwKICAgICAgbDZheDM0OiAxMSwKICAgICAgZndpbXRjOiAxMi41LAogICAgICAnN3p1N2VvJzogMTMuNSwKICAgICAgYzVvNDVjOiAxNC41LAogICAgICAnM3dpNzBnJzogMTUuNSwKICAgICAgZGM0ZTB3OiAxNi41LAogICAgICAnNXVmY293JzogMTcuNSwKICAgICAgazR1ZndnOiAxOSwKICAgICAgd21jNjRnOiAyMCwKICAgICAgc29tZmk4OiAyMiwKICAgICAgeGpmYnBjOiAyNCwKICAgICAgbHllOXo0OiAyNywKICAgICAgdmUwZ3prOiAyOCwKICAgICAgamhxdnBjOiAzMSwKICAgICAgemIzcWlvOiAzMiwKICAgICAgbDBvbmI0OiAzNSwKICAgICAgcTdjazVjOiAwLjA0LAogICAgICB1bjYyOXM6IDAuMDgsCiAgICAgIGxyajIwdzogMC4xMiwKICAgICAgd3YydGMwOiAwLjE2LAogICAgICBuemZ0MzQ6IDAuMiwKICAgICAgJzFuaHp1Mm8nOiAwLjIxLAogICAgICBzZjliN2s6IDAuMjQsCiAgICAgIGFuemFwczogMC4yNiwKICAgICAgJzFqMjZieTgnOiAwLjI5LAogICAgICB4ejE2djQ6IDAuMzIsCiAgICAgICcxZnFiN2N3JzogMC4zNSwKICAgICAgJzFvbHk3bHMnOiAwLjM3LAogICAgICB0ajdvcW86IDAuNCwKICAgICAgZHp1ZmI0OiAwLjUsCiAgICAgICcxMDZ4eHhjJzogMC42MywKICAgICAgcG5kZGRzOiAwLjY4LAogICAgICAnMXRscXdocyc6IDAuNzMsCiAgICAgICczZzl1cmsnOiAwLjc4LAogICAgICBuZmdtYms6IDAuODQsCiAgICAgIHJ2YTRnMDogMC44OCwKICAgICAgaXpuNDc0OiAwLjkyLAogICAgICB4ZjIwM2s6IDAuOTYsCiAgICAgIG9qZXp1bzogMSwKICAgICAgJzFvMXowdTgnOiAxLjAxLAogICAgICBrM2xocTg6IDEuMDgsCiAgICAgICcxY3lmOWo0JzogMS4xNSwKICAgICAgcXJicXd3OiAxLjIsCiAgICAgICc5MDFxZjQnOiAxLjIyLAogICAgICAnNGVxNjgnOiAxLjI2LAogICAgICAnMWg0OTY5cyc6IDEuMzEsCiAgICAgICcxODhtNjB3JzogMS4zNSwKICAgICAgJzFjb2ZvNWMnOiAxLjM5LAogICAgICAnNGE4bXd3JzogMS40MiwKICAgICAgJzFld2NmN2snOiAxLjQ3LAogICAgICBheHl3M2s6IDEuNTQsCiAgICAgICcxNXFwdGt3JzogMC4yMywKICAgICAgJzFhNmpicGMnOiAwLjI3LAogICAgICAnMTFhd2JnZyc6IDAuMzEsCiAgICAgIGc3cjZkYzogMC4zNCwKICAgICAgJzdjNDY0Zyc6IDAuMzgsCiAgICAgICcxdDFycHE4JzogMC40MSwKICAgICAga25rb2hzOiAwLjQ0LAogICAgICAnMndhbzAwJzogMC40NiwKICAgICAgdnI0ZnN3OiAwLjQ4LAogICAgICAnMWRpZWdhbyc6IDAuNTEsCiAgICAgICcxbWUxZ2prJzogMC41MywKICAgICAgJzE0bXJnMXMnOiAwLjU1LAogICAgICAnMXF0dXlvMCc6IDAuNTcsCiAgICAgIGlmbnhmazogMC42LAogICAgICBvZHd4czogMC42MiwKICAgICAgZ3JxZDR3OiAwLjY2LAogICAgICAnMXA1eGVkYyc6IDAuNjksCiAgICAgIHUzNnZpODogMC43MiwKICAgICAgbDdqdjljOiAwLjc2LAogICAgICB3YjNta2c6IDAuOCwKICAgICAgZWp0bTJvOiAwLjgyLAogICAgICAnMTU2cW10Yyc6IDAuODcsCiAgICAgICcxaWk3NTZvJzogMC45MywKICAgICAgZm5yemxzOiAwLjk4LAogICAgICAnNnM0emN3JzogMS4wMiwKICAgICAgYjd5aGhjOiAxLjA2LAogICAgICAnMmNiaDhnJzogMS4xLAogICAgICAnMXVwcGEwdyc6IDEuMTMsCiAgICAgICc0azg4YW8nOiAxLjE4LAogICAgICBodm9xbzA6IDEuMjQsCiAgICAgIHpjejVzMDogMS4yOCwKICAgICAgaGxwNWE4OiAxLjMsCiAgICAgICc4cTI1MWMnOiAxLjM0LAogICAgICAnMXVmcG9uNCc6IDEuMzcsCiAgICAgICcxbGsyb2U4JzogMS40MSwKICAgICAgJzF3bm1mcGMnOiAxLjQ1LAogICAgICAnMW5yemZnZyc6IDEuNDksCiAgICAgIHNwOHdsYzogMS41MiwKICAgICAganRsd2NnOiAxLjU2LAogICAgICB5OTBzOHc6IDEuNiwKICAgICAgZ2hxcnI0OiAxLjYyLAogICAgICAnN20zcmk4JzogMS42NiwKICAgICAgYzF4OW1vOiAxLjcsCiAgICAgICczNmE5ZHMnOiAxLjc0LAogICAgICBlOXUwb3c6IDEuNzgsCiAgICAgICcxNHdyMWZrJzogMS44MywKICAgICAgJzE5Y2tqazAnOiAxLjg3LAogICAgICAnMTBneGpiNCc6IDEuOTEsCiAgICAgICcxZ2s5emk4JzogMS45NSwKICAgICAgJzE3b216OWMnOiAxLjk5LAogICAgICAnMXlsamxkcyc6IDAuMDEsCiAgICAgIGhicGp3ZzogMC4wMiwKICAgICAgJzFndTlrdzAnOiAwLjAzLAogICAgICAnOGcyam5rJzogMC4wNiwKICAgICAgJzE3eW1rbjQnOiAwLjA3LAogICAgICBjdncxczA6IDAuMSwKICAgICAgJzFjZWcycmsnOiAwLjExLAogICAgICAnNDA5MWo0JzogMC4xNCwKICAgICAgJzEzaXQyaW8nOiAwLjE1LAogICAgICBmM3NzdTg6IDAuMTgsCiAgICAgICcxZW1jdHRzJzogMC4xOSwKICAgICAgJzY4NXNsYyc6IDAuMjIsCiAgICAgICcxcnh0Yzc0JzogMC4yNSwKICAgICAgamptYXlvOiAwLjI4LAogICAgICAnMXNjYWd3JzogMC4zLAogICAgICAnMXhobDd1byc6IDAuMzMsCiAgICAgIHAzZTZtODogMC4zNiwKICAgICAgJzE2dW83NDAnOiAwLjM5LAogICAgICAnMTNzc253Zyc6IDEuNDMsCiAgICAgIHg1MmVwczogMS40NCwKICAgICAgZmRzZTgwOiAxLjQ2LAogICAgICBvOWZlZ3c6IDEuNDgsCiAgICAgICc2aTVkejQnOiAxLjUsCiAgICAgICcxNjBwZXlvJzogMS41MSwKICAgICAgJzFzN3N4a3cnOiAxLjUzLAogICAgICAnMWFnaXgzNCc6IDEuNTUsCiAgICAgICcxamM1eGMwJzogMS41NywKICAgICAgJzIyYnZ1byc6IDEuNTgsCiAgICAgICcxeHJrdDhnJzogMS42MSwKICAgICAgJzFnMGFzcW8nOiAxLjYzLAogICAgICAnMW92eHN6ayc6IDEuNjUsCiAgICAgICcxNzRuc2hzJzogMS42NywKICAgICAgJzF0YnJiNDAnOiAxLjY5LAogICAgICAnMWJraGFtOCc6IDEuNzEsCiAgICAgICcxa2c0YXY0JzogMS43MywKICAgICAgJzEyb3VhZGMnOiAxLjc1LAogICAgICAnMXZqbzI2OCc6IDEuNzcsCiAgICAgICcxZHNlMW9nJzogMS43OSwKICAgICAgJzVlNzBnMCc6IDEuODIsCiAgICAgIHJsYWoyODogMS44NCwKICAgICAgJzl1MGlrZyc6IDEuODYsCiAgICAgIGlwbml0YzogMS44OCwKICAgICAgeWRpYms6IDEuOSwKICAgICAgeXN6ejBnOiAxLjkyLAogICAgICBoMXB5aW86IDEuOTQsCiAgICAgIHB4Y3lyazogMS45NiwKICAgICAgJzFwZnd6cjQnOiAxLjk3LAogICAgICB1ZDZndzA6IDIsCiAgICAgIGNsd2dlODogMi4wMiwKICAgICAgbGhqZ240OiAyLjA0LAogICAgICAnM3E5ZzVjJzogMi4wNiwKICAgICAgJzF3M244eHMnOiAyLjA5LAogICAgICAnMWVjZDhnMCc6IDIuMTEsCiAgICAgICcxbjgwOG93JzogMi4xMywKICAgICAgczU5cHRzOiAyLjE2LAogICAgICBhZHpwYzA6IDIuMTgsCiAgICAgIGo5bXBrdzogMi4yLAogICAgICAnMWlzNnFrZyc6IDIuMjEsCiAgICAgICcxMTB3cTJvJzogMi4yMywKICAgICAgJzF4N2xtZ3cnOiAyLjI1LAogICAgICBmeHJrems6IDIuMjYsCiAgICAgICcxb2J5bTgwJzogMi4yOSwKICAgICAgJzFjNGdoZHMnOiAyLjAzLAogICAgICAnMTM4dGg0dyc6IDIuMDcsCiAgICAgIGV0dDdnZzogMi4xLAogICAgICAnNXk2NzdrJzogMi4xNCwKICAgICAgJzFybnRxdGMnOiAyLjE3LAogICAgICB4cDFsaGM6IDIuMjQsCiAgICAgICcxZmdibHo0JzogMi4yNywKICAgICAgJzcyNGtxbyc6IDIuMywKICAgICAgYmh5MnY0OiAyLjM0LAogICAgICAnMm1iMm04JzogMi4zOCwKICAgICAgJzFkOGV1d3cnOiAyLjQzLAogICAgICAnNHU3dG9nJzogMi40NiwKICAgICAgJzlhMWJzdyc6IDIuNSwKICAgICAgZWViazA6IDIuNTQsCiAgICAgICcxZ3o5ZGt3JzogMi41OSwKICAgICAgdXM1dXlvOiAyLjY0LAogICAgICAnMWNqZnZnZyc6IDIuNjcsCiAgICAgICcxM25zdjdrJzogMi43MSwKICAgICAgZjhzbGo0OiAyLjc0LAogICAgICAnNmQ1bGE4JzogMi43OCwKICAgICAgam9tM25rOiAyLjg0LAogICAgICB5NDB6azA6IDIuODgsCiAgICAgICcxZnZiMDFzJzogMi45MSwKICAgICAgJzE2em56c3cnOiAyLjk1LAogICAgICAnMWJmaGh4Yyc6IDIuOTksCiAgICAgICcxdmVvOWhjJzogMy4wNSwKICAgICAgJzFwYXg3MjgnOiAzLjI1LAogICAgICAnMXJpdHk0Zyc6IDMuNDUsCiAgICAgIHQ0OGFvMDogMy42LAogICAgICBpMG9qY3c6IDMuOCwKICAgICAgeGEyN2VvOiA0LAogICAgICAnMTFwdnBqNCc6IDQuMTUsCiAgICAgICcxZHhkdWRjJzogNC4zNSwKICAgICAgJzE3dG1yeTgnOiA0LjU1LAogICAgICAnMWExamowZyc6IDQuNzUsCiAgICAgICcxMjl1d2FvJzogNC45NSwKICAgICAgJzFxb3Y1ejQnOiA1LjA1LAogICAgICB1a281eGM6IDUuMiwKICAgICAgamg0ZW04OiA1LjQsCiAgICAgIHZvbWpnZzogNS42LAogICAgICAnMTA0ZzFrdyc6IDUuNzUsCiAgICAgICcxZHp2cXBzJzogNS45NSwKICAgICAgJzFpZnA4dTgnOiA2LjA1LAogICAgICBrMTNsZHM6IDYuMiwKICAgICAgemFoOWZrOiA2LjQsCiAgICAgIG82eGk0ZzogNi42LAogICAgICAnMWZ4c3dlOCc6IDYuNzUsCiAgICAgICcxNHU5NTM0JzogNi45NSwKICAgICAgJzFjMXlsMWMnOiA3LjE1LAogICAgICAnMTB5ZXRxOCc6IDcuMzUsCiAgICAgICcxZDV3eWtnJzogNy41NSwKICAgICAgaGU3Zzh3OiA3LjcsCiAgICAgICc2YW5veHMnOiA3LjksCiAgICAgICc1Z293c2cnOiA5LjUsCiAgICAgICczNXMwMCc6IDExLjUsCiAgICAgIG8zNm5sczogMTMsCiAgICAgIGpkZGszazogMTUsCiAgICAgIHA5bXhoYzogMTcsCiAgICAgICc5bDl2Y3cnOiAxOC41LAogICAgICBtdXV5Z3c6IDIxLAogICAgICBxMXFhZGM6IDI1LAogICAgICBuaGMxa3c6IDI5LAogICAgICBvcmo1ejQ6IDMzLAogICAgICBicnhvOHc6IDAuNDIsCiAgICAgICcxYmFocDhnJzogMC40MywKICAgICAgJzFrNjRwaGMnOiAwLjQ1LAogICAgICAnMTJldW96ayc6IDAuNDcsCiAgICAgICcxdjlvZ3NnJzogMC40OSwKICAgICAgbXZoZmswOiAwLjUyLAogICAgICAnNTQ3ZjI4JzogMC41NCwKICAgICAgcmJheG9nOiAwLjU2LAogICAgICAnOWsweDZvJzogMC41OCwKICAgICAgJzE5Mmt5NjgnOiAwLjU5LAogICAgICAnMWh5N3lmNCc6IDAuNjEsCiAgICAgIHlqMGRtbzogMC42NCwKICAgICAgJzF5MWtlbTgnOiAwLjY1LAogICAgICAnMWdhYWU0Zyc6IDAuNjcsCiAgICAgICc3dzNjdzAnOiAwLjcsCiAgICAgICcxN2VuZHZrJzogMC43MSwKICAgICAgY2J3djBnOiAwLjc0LAogICAgICAnMWJ1Z3cwMCc6IDAuNzUsCiAgICAgICcxa3Ezdzh3JzogMC43NywKICAgICAgJzEyeXR2cjQnOiAwLjc5LAogICAgICAnMXZ0bm5rMCc6IDAuODEsCiAgICAgICcxZTJkbjI4JzogMC44MywKICAgICAgJzFteTBuYjQnOiAwLjg1LAogICAgICAnNW82bHRzJzogMC44NiwKICAgICAgJzFyZHU1ZmsnOiAwLjg5LAogICAgICBhNDAzeTg6IDAuOSwKICAgICAgJzE5bWs0eHMnOiAwLjkxLAogICAgICAnMThkM3BjJzogMC45NCwKICAgICAgJzEwcXg0b3cnOiAwLjk1LAogICAgICAnMXd4bTEzNCc6IDAuOTcsCiAgICAgICcxZjZjMGxjJzogMC45OSwKICAgICAgJzE2YXAwY2cnOiAxLjAzLAogICAgICBzejhoejQ6IDEuMDQsCiAgICAgICcxc2hzaXlvJzogMS4wNSwKICAgICAgJzFhcWlpZ3cnOiAxLjA3LAogICAgICAnMWptNWlwcyc6IDEuMDksCiAgICAgICcxMXV2aTgwJzogMS4xMSwKICAgICAgdjc1OTFjOiAxLjEyLAogICAgICBkZnY4ams6IDEuMTQsCiAgICAgIG1iaThzZzogMS4xNiwKICAgICAgJzFsdTI5czAnOiAxLjE3LAogICAgICAnMTQyczlhOCc6IDEuMTksCiAgICAgICcxcTl2cndnJzogMS4yMSwKICAgICAgJzE4aWxyZW8nOiAxLjIzLAogICAgICAnMWhlOHJuayc6IDEuMjUsCiAgICAgIHpteXI1czogMS4yNywKICAgICAgJzF5dmo2cmsnOiAxLjI5LAogICAgICBxaGM1ajQ6IDEuMzIsCiAgICAgICcxcHp3NmlvJzogMS4zMywKICAgICAgdXg1bm5rOiAxLjM2LAogICAgICBkNXZuNXM6IDEuMzgsCiAgICAgIG0xaW5lbzogMS40LAogICAgICAnMTFrdnd1OCc6IDEuNTksCiAgICAgIHBkZHMwMDogMS42NCwKICAgICAgdHQ3YTRnOiAxLjY4LAogICAgICBreGs5dms6IDEuNzIsCiAgICAgIHcxNDE2bzogMS43NiwKICAgICAgbjVoMHhzOiAxLjgsCiAgICAgICcxbW8xMXhjJzogMS44MSwKICAgICAgJzFyM3VrMXMnOiAxLjg1LAogICAgICAnMWk4N2pzdyc6IDEuODksCiAgICAgICcxeWJrMDAwJzogMS45MywKICAgICAgJzg2Mnk5cyc6IDEuOTgsCiAgICAgICcxdHZxaHZrJzogMi4wMSwKICAgICAgJzFsMDNobW8nOiAyLjA1LAogICAgICB3bDM3eTg6IDIuMDgsCiAgICAgIG5wZzdwYzogMi4xMiwKICAgICAgJzE1Z3E4NzQnOiAyLjE1LAogICAgICAnMTl3anFiayc6IDIuMTksCiAgICAgICcxaWNwMzQnOiAyLjIyLAogICAgICBvdGVsOGc6IDIuMjgsCiAgICAgIHQ5ODNjdzogMi4zMiwKICAgICAga2RsMzQwOiAyLjM2LAogICAgICB2aDR1ZjQ6IDIuNCwKICAgICAgbWxodTY4OiAyLjQ0LAogICAgICAnMTRjcnVvMCc6IDIuNDcsCiAgICAgICcxOHNsY3NnJzogMi41MSwKICAgICAgend5Y2prOiAyLjU1LAogICAgICBoZ3BjbGM6IDIuNTgsCiAgICAgICcxcHV3ZHRzJzogMi42MSwKICAgICAgJzF1YXB2eTgnOiAyLjY1LAogICAgICAnMWxmMnZwYyc6IDIuNjksCiAgICAgICcxd2ltbjBnJzogMi43MywKICAgICAgJzFubXptcmsnOiAyLjc3LAogICAgICAnMXMydDR3MCc6IDIuODEsCiAgICAgICcxajc2NG40JzogMi44NSwKICAgICAgZ2NxejI4OiAyLjksCiAgICAgICc3aDN5dGMnOiAyLjk0LAogICAgICBid3hneHM6IDIuOTgsCiAgICAgIHlvMDZiazogMy4yLAogICAgICAnMTMzdG9nMCc6IDMuMzUsCiAgICAgICcxZmJidGE4JzogMy41NSwKICAgICAgJzE0N3MxejQnOiAzLjc1LAogICAgICAnMWN0Zmd1OCc6IDMuOTUsCiAgICAgICcxbnd6ODVjJzogNC4wNSwKICAgICAgJzE2a29scTgnOiAyLjMxLAogICAgICAnMXNyczRjZyc6IDIuMzMsCiAgICAgICcxYjBpM3VvJzogMi4zNSwKICAgICAgJzFqdzU0M2snOiAyLjM3LAogICAgICAnMTI0djNscyc6IDIuMzksCiAgICAgICcxdXpvdmVvJzogMi40MSwKICAgICAgZHB1dHhjOiAyLjQyLAogICAgICAnMW00MXY1cyc6IDIuNDUsCiAgICAgIHIxYmNhbzogMi40OCwKICAgICAgJzFxanZkYTgnOiAyLjQ5LAogICAgICBpNW9jMXM6IDIuNTIsCiAgICAgICcxaG84ZDFjJzogMi41MywKICAgICAgejd6ZDM0OiAyLjU2LAogICAgICAnMXlxamUybyc6IDIuNTcsCiAgICAgIHFjY2N1ODogMi42LAogICAgICAnOGwyY2NnJzogMi42MiwKICAgICAgJzE4M21kYzAnOiAyLjYzLAogICAgICBkMHZ1Z3c6IDIuNjYsCiAgICAgIGx3aXVwczogMi42OCwKICAgICAgJzQ1OHU4MCc6IDIuNywKICAgICAgeDAybTB3OiAyLjcyLAogICAgICAnMWVyY21pbyc6IDIuNzUsCiAgICAgIG80ZmxzMDogMi43NiwKICAgICAgJzE1dnBtOXMnOiAyLjc5LAogICAgICBzazkzd2c6IDIuOCwKICAgICAgYXN6M2VvOiAyLjgyLAogICAgICAnMWFiajRlOCc6IDIuODMsCiAgICAgICcxeGMzNXMnOiAyLjg2LAogICAgICAnMTFmdzQ1Yyc6IDIuODcsCiAgICAgICcxeG1sMGprJzogMi44OSwKICAgICAgcDhkemI0OiAyLjkyLAogICAgICAnMW9xeTBhbyc6IDIuOTMsCiAgICAgIHRvN2hmazogMi45NiwKICAgICAgJzF0NnJpZjQnOiAyLjk3LAogICAgICBrc2toNm86IDMsCiAgICAgICc1OTc3cjQnOiAzLjEsCiAgICAgICcxOTdrcXY0JzogMy4xNSwKICAgICAgY2d3bnBjOiAzLjMsCiAgICAgIG5rZ2YwZzogMy40LAogICAgICAnMWRjd2U4JzogMy41LAogICAgICAnMWpyNWJlbyc6IDMuNjUsCiAgICAgIGRrdjE4ZzogMy43LAogICAgICAnMXowaXpnZyc6IDMuODUsCiAgICAgICc4djF4cTgnOiAzLjksCiAgICAgIGIyeW9zZzogNC4xLAogICAgICBwaWRrb3c6IDQuMiwKICAgICAgJzNiYTIybyc6IDQuMywKICAgICAgJzF0Z3Izc3cnOiA0LjI1LAogICAgICAnMWlkN2Nocyc6IDQuNDUsCiAgICAgICcxdzhuMW1vJzogNC42NSwKICAgICAgJzFvZ3lld3cnOiA0Ljg1LAogICAgICAnMWdycm9qayc6IDUuMTUsCiAgICAgICcxNW83eDhnJzogNS4zNSwKICAgICAgJzc5bTlzMCc6IDUuNSwKICAgICAgJzloajB1OCc6IDUuNywKICAgICAgJzNkcnlmNCc6IDUuOSwKICAgICAgJzF1bjdkb2cnOiA2LjI1LAogICAgICAnMXB4ZWE2OCc6IDYuNDUsCiAgICAgICcxczViMThnJzogNi42NSwKICAgICAgJzFrZG1laW8nOiA2Ljg1LAogICAgICAnODNsMXhjJzogNy4xLAogICAgICBhYmhzems6IDcuMywKICAgICAgJzFzcGE4MDAnOiA3LjQ1LAogICAgICAnMWhscWdvdyc6IDcuNjUsCiAgICAgICcxd2c0cW8wJzogNy44NSwKICAgICAgeTFqMzdrOiA4LAogICAgICBlbWJpZjQ6IDguNSwKICAgICAgYW1xY2prOiAxMC41LAogICAgICB2enYzMGc6IDEyLAogICAgICBxdjJsZms6IDE0LAogICAgICBycWFicjQ6IDQuNCwKICAgICAgaDZwcjdrOiA0LjUsCiAgICAgIGxtajljMDogNC42LAogICAgICAnNjM1endnJzogNC43LAogICAgICB4dTFlNjg6IDQuOCwKICAgICAgYm14dmswOiA0LjksCiAgICAgIG1xaG12NDogNSwKICAgICAgamU0OHc6IDUuMSwKICAgICAgJzFsN2w2bzAnOiA1LjI1LAogICAgICBmMWF3aHM6IDUuMywKICAgICAgJzF4ZjNiaTgnOiA1LjQ1LAogICAgICAnMWI3enN3MCc6IDUuNTUsCiAgICAgICcxbWJqazc0JzogNS42NSwKICAgICAgcGt2aDFjOiA1LjgsCiAgICAgICcxdGo5MDVjJzogNS44NSwKICAgICAgcnNzODNrOiA2LAogICAgICBmbGEzOWM6IDYuMSwKICAgICAgJzRocWJ5OCc6IDYuMywKICAgICAgJzE4ZzN2MjgnOiA2LjM1LAogICAgICBkM2RxdGM6IDYuNSwKICAgICAgeWY5ajQwOiAxNiwKICAgICAgdW9mMGcwOiAxOCwKICAgICAgJzIza3Uwdyc6IDE5LjUsCiAgICAgIGk1MXV5bzogMjMsCiAgICAgIHRnM2JiNDogMjYsCiAgICAgIHJuNXliazogMzAsCiAgICAgIHU2Yjh4czogMzQsCiAgICB9LAogIH07Cn0KCi8vIFJlZnJlc2ggdmlld2FibGUgYWQgdW5pdHMgb24gJ3VzZXIgcmV0dXJuIHRvIHBhZ2UnIGV2ZW50cyBbQU0tMzU0MV0KQ3VzdG9tRXZlbnRzLmFkZEV2ZW50TGlzdGVuZXIoJ3JlZnJlc2hPblJldHVyblRvUGFnZScsIGZ1bmN0aW9uIChldmVudCkgewogIHJldHVybiB7IHVuaXRWaXNpYmlsaXR5OiAnVklTSUJMRScgfTsKfSk7CgovKgogICMgY2hhbmdlbG9nCiAgICAjIyAyMC8xMC8yMDIwCiAgICAqIFthcnNoYWFuXSAtIGRpc2FibGVkIGFuZCBjb2xsYXBzZWQgYWxsIGJhZCBpbmNvbnRlbnQgdW5pdHMgW0FNLTgyNV0uCiovCgp3ZWJzaXRlSG9va0ZpbHRlck91dEFkVW5pdCA9IGZ1bmN0aW9uIChhZFVuaXQpIHsKICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYWRVbml0LnNlbGVjdG9yKTsKICB2YXIgcGFyZW50UGFyZW50RWxlbWVudCA9IGVsZW1lbnQgJiYgZWxlbWVudC5wYXJlbnRFbGVtZW50ICYmIGVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50OwoKICBpZiAoCiAgICBwYXJlbnRQYXJlbnRFbGVtZW50ICYmCiAgICAocGFyZW50UGFyZW50RWxlbWVudC5jbGFzc05hbWUuaW5kZXhPZignYWQtYmFubmVyLWZ1bGwtd3JhcHBlcicpICE9IC0xIHx8CiAgICAgIHBhcmVudFBhcmVudEVsZW1lbnQuY2xhc3NOYW1lLmluZGV4T2YoJ2FkLWNvbnRlbnQtd3JhcHBlcicpICE9IC0xKQogICkgewogICAgcGFyZW50UGFyZW50RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgcmV0dXJuIHRydWU7CiAgfQp9Owo=")+"\n})")(i.Y,Yr,e,Er)}catch(e){Tr.errorf(null,"failed to pass CustomEvents, websiteConfig, logger and hooks utility functions - %o",e)}}(),Object.entries(ai).forEach((e=>{let[t,n]=e;if(ri[t]){const{hookName:e,parseSettingValue:r,handler:o}=ri[t],a=r?r(n):n;e?i.Y.addEventListener(e,(e=>o(a,e))):(o(a),ii.infof(null,"loadSettings: ".concat(t," (no associated hook): Setting applied.")))}else ii.errorf(null,"loadSettings: No setting handler found for %o (setting will not be applied).",t)})),function(){const e=i.Y.fireEvent("amazonBidderConfiguration");e&&e.pubID&&(n.Z.upoSettings.amazonBidderConfiguration.enabled=!0,n.Z.upoSettings.amazonBidderConfiguration=Object.assign(n.Z.upoSettings.amazonBidderConfiguration,e))}();const t=i.Y.fireEvent("hookDFPEnabledValue");t&&(Yr.dfpEnabled=t);try{Br=Fr(Vr(Br))}catch(e){Tr.errorf(null,"init - parsing static spaces - %o",e)}if(jr(),i.Y.fireEvent("shouldDisableUponit"))Tr.noticef(null,"halting: we have been disabled by hooks");else{i.Y.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsInit",payload:{detail:!0}}),i.Y.fireEvent("FirePublisherEvent",{eventName:"uponitInit",payload:{detail:!0}}),Xr(),Yr.prebidEnabled=!!(Br.find((e=>e.prebidSettings&&e.prebidSettings.enabled))||i.Y.fireEvent("scrapePrebidAdUnits")||i.Y.fireEvent("amazonBidderConfiguration")||Ln.btDemandService.isBTDemandIntegration());var r={spaces:Br,settings:{prebid:i.Y.fireEvent("forcePrebidEnabled")||Yr.prebidEnabled,dfp:Yr.dfpEnabled}};ui((function(){i.Y.fireEvent("onDomLoaded"),i.Y.fireEvent("onBeforeRecovery",{spaces:Br,settings:r.settings}),_r.invoke(r)}))}}()})()})();
//# sourceMappingURL=recovery.js.map

})({});
